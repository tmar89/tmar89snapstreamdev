<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnapStream.ViewScape</name>
    </assembly>
    <members>
        <member name="T:SnapStream.ViewScape.AppForm">
            <summary>
            The base class for all the graphics (D3D) samples, it derives from windows forms
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._ONE_SEC_TICKS">
            <summary>
            1 second in 100-ns time ticks
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._MOUSE_MOVE_THRESHHOLD">
            <summary>
            The number of pixels the mouse has moved before acknowledging it
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._MAX_DOEVENTS_TIME_MS">
            <summary>
            The maximum amount of milliseconds to allow DoEvents to take before stopping any blocking operations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._DEFAULT_BASE_WIDTH">
            <summary>
            Default application base skin width
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._DEFAULT_BASE_HEIGHT">
            <summary>
            Default application base skin height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._MIN_RENDER_TIME">
            <summary>
            The most time to wait before rendering again (forced render every 1 second)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._MAX_FRAME_TIME">
            <summary>
            The fastest frame-time possible (60fps)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm.AddControlCommand">
            <summary>
            Adds a control to us
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm.RemoveControlCommand">
            <summary>
            Removes a control from us
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._helpFilePath">
            <summary>
            The path to the help file to launch
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._helpFileArgs">
            <summary>
            The command line args when launching the help file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseActive">
            <summary>
            Determines if the mouse is actually active or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseShown">
            <summary>
            Determines if the mouse is physically shown or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._defaultCursor">
            <summary>
            Cursor to use when the application is not busy
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseDown">
            <summary>
            Maintains state to determine if the mouse is in the down position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseHideTime">
            <summary>
            Time at which the mouse should be hidden
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._forceDeactivate">
            <summary>
            Forces a deactivation event regardless of the timer state
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseEnabled">
            <summary>
            Flag that says whether to show or hide the mouse
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._mouseTimeout">
            <summary>
            Time before the mouse should timeout
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._lastx">
            <summary>
            Last X coordinate of the mouse
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._lasty">
            <summary>
            Last Y coordinate of the mouse
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._adjustLeft">
            <summary>
            Left offset to adjust the client bounds for overscan support
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._adjustRight">
            <summary>
            Right offset to adjust the client bounds for overscan support
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._adjustTop">
            <summary>
            Top offset to adjust the client bounds for overscan support
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.AppForm._adjustBottom">
            <summary>
            Bottom offset to adjust the client bounds for overscan support
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.#ctor">
            <summary>
            This is for the forms editor purpose only
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.#ctor(System.String,System.String,System.String,System.String,System.String,System.Drawing.Rectangle)">
            <summary>
            Creates the D3D Application
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.CreateGraphicsEnvironment">
            <summary>
            Picks the best graphics device, and initializes it
            </summary>
            <returns>true if a good device was found, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.FindBestWindowedMode(System.Boolean,System.Boolean)">
            <summary>
            Sets up graphicsSettings with best available windowed mode, subject to 
            the doesRequireHardware and doesRequireReference constraints.  
            </summary>
            <param name="doesRequireHardware">Does the device require hardware support</param>
            <param name="doesRequireReference">Does the device require the ref device</param>
            <returns>true if a mode is found, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.FindBestFullscreenMode(System.Boolean,System.Boolean)">
            <summary>
            Sets up graphicsSettings with best available fullscreen mode, subject to 
            the doesRequireHardware and doesRequireReference constraints.  
            </summary>
            <param name="doesRequireHardware">Does the device require hardware support</param>
            <param name="doesRequireReference">Does the device require the ref device</param>
            <returns>true if a mode is found, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ChooseInitialSettings">
            <summary>
            Choose the initial settings for the application
            </summary>
            <returns>true if the settings were initialized</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.BuildPresentParamsFromSettings">
            <summary>
            Build presentation parameters from the current settings
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.InitializeEnvironment">
            <summary>
            Initialize the graphics environment
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.InitializeReferenceEnvironment">
            <summary>
            Initialize the graphics environment with the reference rasterizer
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ConfirmDevice(Microsoft.DirectX.Direct3D.Caps,SnapStream.ViewScape.Util.VertexProcessingType,Microsoft.DirectX.Direct3D.Format,Microsoft.DirectX.Direct3D.Format)">
            <summary>
            Callback for enumerating devices
            </summary>
            <param name="caps">The hardware capabilities</param>
            <param name="vertexProcessingType">The vertex mode</param>
            <param name="adapterFormat">The adapter format</param>
            <param name="backBufferFormat">The back buffer format</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OneTimeSceneInitialization">
            <summary>
            Handles any special scene init
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.InitializeDeviceObjects">
            <summary>
            Sets up any device-dependent objects
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            re-initializes device-dependent objects after a device reset
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Un-initializes device-dependent objects before a device reset
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Deletes device-dependent objects
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.FrameMove(System.DateTime)">
            <summary>
            Animates the scene
            </summary>
            <param name="currentTime">Time stamp used in animation calculations</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Render">
            <summary>
            Draws the scene to the d3d device
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ShouldRenderNow">
            <summary>
            Determines whether we should be rendering or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ActivateMouse">
            <summary>
            Sends the mouse active msg to all windows, if we just became active
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ActivateMouse(System.IntPtr)">
            <summary>
            Sends the mouse active msg to all windows, if we just became active
            </summary>
            <param name="lParam">The mouse coords param from the windows message</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.DeactivateMouse">
            <summary>
            Sends the mouse inactive msg to all windows, if we just became inactive
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.StartMouseTimer(System.Boolean)">
            <summary>
            Starts the timer to show the hourglass
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.EndMouseTimer">
            <summary>
            Stops the timer to show the hourglass and restores the cursor to the default
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetFullScreenMode">
            <summary>
            Sends the app into full-screen mode if it isn't already
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetWindowedMode">
            <summary>
            Sends the app into windowed mode if it isn't already
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetMaximized">
            <summary>
            Maximizes the app
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetMinimized">
            <summary>
            Minimizes the app
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetWindowedMode(System.Boolean)">
            <summary>
            Sets the winowed vs fullscreen mode of the application
            </summary>
            <param name="setToWindowed">
            True if you want windowed mode
            False if you want Fullscreen mode
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ToggleFullscreen">
            <summary>
            Called when user toggles between fullscreen mode and windowed mode
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ForceWindowed">
            <summary>
            Switch to a windowed mode, even if that means picking a new device and/or adapter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.FullRender">
            <summary>
            Called when our app has nothing else to do, and it's time to render
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Run">
            <summary>
            Our main video rendering loop
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Render3DEnvironment">
            <summary>
            Draws the scene 
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.UpdateStats">
            <summary>
            Update the various statistics the simulation keeps track of
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.BeforeRender">
            <summary>
            Perform any functions that need to be performed RIGHT BEFORE rendering
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.AfterRender">
            <summary>
            Perform any fuctions that need to be performed RIGHT AFTER rendering
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.BeforeDoEvents">
            <summary>
            Perform any necessary actions before calling Application.DoEvents()
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.AfterDoEvents">
            <summary>
            Perform any necessary actions after calling Application.DoEvents()
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Pause(System.Boolean)">
            <summary>
            Called in to toggle the pause state of the app.
            </summary>
            <param name="pause">true if the simulation should pause</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.DisablePowerManagement">
            <summary>
            Signals the OS to not display the screen-saver and to not go in to powersaving mode.
            This is, unfortunately, a temporary thing, so it must be done frequently
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.CleanupEnvironment">
            <summary>
            Set our variables to not active and not ready
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.NewMouseCoords(System.Int32,System.Int32)">
            <summary>
            Determines whether the given coordinates are different from the last and sets them if they are new
            </summary>
            <param name="x">The x coord to check</param>
            <param name="y">The y coord to check</param>
            <returns>True IFF the given coordinates are new</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ResizeStats">
            <summary>
            Resizes the stats if they exist
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ClipOverlayForWindows">
            <summary>
            Clips the overlay's region for the current shown Windows
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SplashProgress(System.Int32)">
            <summary>
            Sets the current progress if the splash screen is available still
            Note: 0 to 50 is reserved for this class (AppForm)
            and 50 to 100 is reserved for inheriting classes
            </summary>
            <param name="percent">0 to 100</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.DoEventsTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Handles our DoEvents timer
            </summary>
            <param name="sender">The timer, i bet</param>
            <param name="eea">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.EnvironmentResized(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Fired when our environment was resized
            </summary>
            <param name="sender">the device that's resizing our environment</param>
            <param name="e">Set the cancel member to true to turn off automatic device reset</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ToggleFullScreen_Execute(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Handles our toggle full screen command
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.MainFrame_OnExit(System.Object,System.EventArgs)">
            <summary>
            Handles the MainFrame's Exit event
            </summary>
            <param name="sender">Not used</param>
            <param name="args">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.AddControlCommand_Execute(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Handles when someone wants to add a control to this form
            </summary>
            <param name="sender">Whoever is requesting the add</param>
            <param name="a">Contains the player control args</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.RemoveControlCommand_Execute(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Handles when someone wants to remove a control to this form
            </summary>
            <param name="sender">Whoever is requesting the remove</param>
            <param name="a">Contains the player control args</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.MainFrame_SkinBaseChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the event when either of the skin base parameters are changed.
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to send these keys to our internal framework
            </summary>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Sends our key down event to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to send these keys to our internal framework
            </summary>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Sends our key up event to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Overridden to send these keys to our internal framework
            </summary>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Sends our key press event to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to send this mouse msg to our internal framework
            </summary>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Sends this mouse down msg to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to send this mouse msg to our internal framework
            </summary>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Sends this mouse move msg to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to send this mouse msg to our internal framework
            </summary>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Sends this mouse up msg to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to send this mouse msg to our internal framework
            </summary>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Sends this mouse wheel msg to our internal framework
            </summary>
            <param name="sender">This</param>
            <param name="args">Contains the details of the mouse msg</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Exit(System.Object,System.EventArgs)">
            <summary>
            Closes the D3DApp
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SynchronizeOptions(System.Object,System.EventArgs)">
            <summary>
            Ensures that the state of the Always on Top menu item reflects our current state
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ToggleAlwaysOnTop(System.Object,System.EventArgs)">
            <summary>
            Toggles to AlwaysOnTop state.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.PopupAbout(System.Object,System.EventArgs)">
            <summary>
            Pops up our about dialog
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">Empty Args</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ContentsItem_Click(System.Object,System.EventArgs)">
            <summary>
            Shows our help file
            </summary>
            <param name="sender">Not used</param>
            <param name="args">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnLoad(System.EventArgs)">
            <summary>
            Overridden to handle loading when our height or width were set to zero
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes windows messages
            </summary>
            <param name="m">The windows message to be processed</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.InitializeComponent">
            <summary>
            Winforms generated code for initializing the form
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnActivated(System.EventArgs)">
            <summary>
            Handle activated events
            </summary>
            <param name="e">Empty Args</param>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnSizeChanged(System.EventArgs)">
            <summary>
            Handle size changed events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnResize(System.EventArgs)">
            <summary>
            Handle resize events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnGotFocus(System.EventArgs)">
            <summary>
            Once the form has focus again, we can continue to handle our resize
            and resets..
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnMove(System.EventArgs)">
            <summary>
            Handle move events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handle closing event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            this allows us to process messages first
            </summary>
            <param name="m">The windows message</param>
            <returns>True IFF we want to stop further apps from processing this message</returns>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.SetRenderTargetBounds">
            <summary>
            Resets all of our bounds to our client area
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ResetAspectRatio">
            <summary>
            Resets the aspect ratio of the form given the aspect ratio specified in the 
            main frame
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.AppForm.ResetAspectRatio(System.Windows.Forms.Message@)">
            <summary>
            Resets the aspect ratio of the form given the aspect ratio specified in the 
            main frame and the given windows sizing message
            </summary>
            <param name="msg"></param>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.D3Device">
            <summary>
            The D3D device
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.DSDevice">
            <summary>
            The DirectSound device
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.Caps">
            <summary>
            The D3D device's current capabilities
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.BehaviorFlags">
            <summary>
            The app's current behavior flags
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.RenderTarget">
            <summary>
            Our current D3D render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.MovieControl">
            <summary>
            Our current movie window for overlay playback
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.Dirty">
            <summary>
            Tells us whether or not we need to paint immediately
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.MainFrame">
            <summary>
            The main window of this application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.FrameStats">
            <summary>
            The current framerate of the app
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.Windowed">
            <summary>
            The app's current windowed state
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.StoredLocation">
            <summary>
            The current location on the screen of the windowed app
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.StoredSize">
            <summary>
            The current size of the app
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.BuildNumber">
            <summary>
            The app build number
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.VersionNumber">
            <summary>
            The app version number
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.LastRenderTime">
            <summary>
            The time stamp of the last render
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.Splash">
            <summary>
            The splash screen for this application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.About">
            <summary>
            The about box for this application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.SkinBaseWidth">
            <summary>
            Contains the base skin width for the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.SkinBaseHeight">
            <summary>
            Contains the base skin height for the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.BordersOff">
            <summary>
            Tells us whether or not our windows borders/menus should be turned off
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.HelpFilePath">
            <summary>
            The path to the help file to launch
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.HelpFileArgs">
            <summary>
            The command line args when launching the help file
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.AdjustLeft">
            <summary>
            The amount of pixels on the left side to move our render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.AdjustRight">
            <summary>
            The amount of pixels on the right side to move our render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.AdjustTop">
            <summary>
            The amount of pixels on the top side to move our render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.AdjustBottom">
            <summary>
            The amount of pixels on the bottom side to move our render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.NormalBounds">
            <summary>
            The normal bounds of the render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.MouseTimeoutMs">
            <summary>
            The milliseconds of mouse inactivity before we auto-hide the mouse cursor and elements
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.AppForm.MouseEnabled">
            <summary>
            Flag that says whether to show or hide the mouse
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.SetCursorEventHandler">
            <summary>
            Template for handling the SetCursor event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.SetCursorEventArgs">
            <summary>
            Arguments used to explain a SetCursor event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.SetCursorEventArgs._cursor">
            <summary>
            The cursor that is being set
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.SetCursorEventArgs.#ctor">
            <summary>
            Creates a new empty set of args
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.SetCursorEventArgs.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            Creates a new set of args with the given cursor
            </summary>
            <param name="myCursor">The cursor being set</param>
        </member>
        <member name="P:SnapStream.ViewScape.SetCursorEventArgs.Cursor">
            <summary>
            The cursor that is being set
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.MainFrame">
            <summary>
            Basic main window for a AppForm
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Window">
            <summary>
            Defines a base class for objects that have a visual representation.
            </summary>
            <remarks>
            To create an object that renders visual content, inherit from <seealso cref="T:SnapStream.ViewScape.Widgets.AnimationWindow"/> or <c>Window</c>
            </remarks>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._DEFAULT_BASE_WIDTH">
            <summary>
            Default base skin width
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._DEFAULT_BASE_HEIGHT">
            <summary>
            Default base skin height
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.CreateRegionFromTexture(SnapStream.ViewScape.Widgets.SSTexture,System.Int32)">
            <summary>
            Creates a Region object that completely covers the non-transparent areas of the given texture
            </summary>
            <param name="tex">The texture to create a region for</param>
            <param name="alphaThreshold">The alpha value that should be considered transparent.  Any alpha value
            below this one will result in the pixel being considered transparent</param>
            <returns>The region</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.CreateRegionFromWindow(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Creates a Region object that completely covers the non transparent regions of the window
            </summary>
            <param name="window">The window to create a region for</param>
            <returns>The region</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.CreateRegionFromWindow(SnapStream.ViewScape.Widgets.Window,System.Boolean)">
            <summary>
            Creates a Region object that completely covers the non transparent regions of the window
            </summary>
            <param name="window">The window to create a region for</param>
            <param name="recurse">True if child windows should be included in the created region</param>
            <returns>The region</returns>
            <remarks>
            The region created will be in screen coordinates and will be scaled and translated appropriately
            </remarks>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._device">
            <summary>
            The Direct3D device object used to render the window's content
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._positionAdjustor">
            <summary>
            Contains the information telling us where to place this window in its parent when resizing
            in order to maintain the skin declarations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._sprite">
            <summary>
            The sprite we are painting to (this should be set internally, only.
            please use the Painter property to get at the sprite we're using)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._parent">
            <summary>
            Our parent window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._bounds">
            <summary>
            The bounds of this window relative to the window's parent.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._capture">
            <summary>
            Whether this window has mouse capture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._modal">
            <summary>
            Whether this window is a modal dialog
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._focusWindow">
            <summary>
            The child window that has keyboard input focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._captureWindow">
            <summary>
            The child window that has mouse capture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._childWindowsArray">
            <summary>
            This window's child windows (be careful changing this on another thread)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._visible">
            <summary>
            Whether this window is visible (_alpha will still affect visibility if this is True)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._alpha">
            <summary>
            The current alpha-blending value of this window
            (0 = completely transparent, 255 = completely opaque)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._bgFilename">
            <summary>
            The filename or skin image name that is the background of this window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._bgBuffer">
            <summary>
            The filename or skin image name that this window is trying to set as its background
            (only if double-buffering is enabled)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._mouseOverWindows">
            <summary>
            The list of child windows that have the mouse cursor over them
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._id">
            <summary>
            This window's identifier (warning: this isn't unique or maintained, it's just
            here for debugging purposes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._enabled">
            <summary>
            Not implemented: This flag tells the framework whether
            this window should receive inputs
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._mirrorV">
            <summary>
            Whether to vertically flip this window's background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._mirrorH">
            <summary>
            Whether to horizontally flip this window's background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._angle">
            <summary>
            The angle at which to rotate this window's background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._stretchBackground">
            <summary>
            Tells us whether this window's background should be stretched when rendering
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._inputContext">
            <summary>
            The input context associated with this window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._optionGroup">
            <summary>
            The option group associated with this window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._doubleBuffered">
            <summary>
            Tells us whether to double buffer our background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._timeoutTime">
            <summary>
            The time at which we should be timing out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._timeoutMs">
            <summary>
            Tells us whether or not we're currently trying to time out
            and how many milliseconds we should wait from last input
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Window._timeoutIgnoreInput">
            <summary>
            Tells us whether to ignore inputs while timing out
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.#ctor">
            <summary>
            Creates a new window
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.IsWindowShown">
            <summary>
            Checks to see if the window and all of its ancestors are shown
            </summary>
            <returns>True if all windows in this chain are shown, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.IsFocused">
            <summary>
            Checks to see if the window has input focus
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Focus">
            <summary>
            Grabs input focus for this window
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.FrameMove(System.DateTime)">
            <summary>
            Handles all animation-based activity
            </summary>
            <param name="currentTime">The current time stamp to use in animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Render">
            <summary>
            Handles all rendering activity
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Render3D">
            <summary>
            Handles all 3-D rendering activity
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Add(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Adds a child window
            </summary>
            <param name="window">The child to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Remove(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Removes a child window
            </summary>
            <param name="window">The child to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.PointToClient(System.Drawing.Point)">
            <summary>
            Converts a screen point to a client point
            </summary>
            <param name="p">
            The screen point (origin at the top-left corner of the top-level window)
            </param>
            <returns>
            The client point (origin at the top-left corner of this window)
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.PointToScreen(System.Drawing.Point)">
            <summary>
            Converts a client point to a screen point
            </summary>
            <param name="p">
            The client point (origin at the top-left corner of this window)
            </param>
            <returns>
            The screen point (origin at the top-left corner of the top-level window)
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.PointToForm(System.Drawing.Point)">
            <summary>
            Returns the point translated to the top level form's bounds
            Note: ONLY use this if you're adding a control to the top level form
            </summary>
            <param name="p">The point to translate</param>
            <returns>The translated point</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ClientToParent(System.Drawing.Point,SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Translates a point in this window the same point in an elder ancestor window
            </summary>
            <param name="pt">The point in this window</param>
            <param name="parent">The elder ancestor window</param>
            <returns>The translated point</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ClientToParent(System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Translates a rectangle in this window to the same rectangle in an elder ancestor window
            </summary>
            <param name="r">The rectangle in this window</param>
            <param name="parent">The elder ancestor window</param>
            <returns>The translated rectangle</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ScreenToClient(System.Drawing.Rectangle)">
            <summary>
            Translates a rectangle in the top-level window to the same rectangle in this window
            </summary>
            <param name="r">The rectangle in the top-level window</param>
            <returns>The rectangle in this window</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Chains windows messages to our child windows
            </summary>
            <param name="m">The windows message</param>
            <returns>Whether the message was handled (True == handled)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Contains(System.Drawing.Point)">
            <summary>
            Tells whether this window contains the given point
            </summary>
            <param name="pt">The point to check</param>
            <returns>True IFF this window contains the given point</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.BringToFront">
            <summary>
            Brings this window in front of its sibling windows
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.BringToFront(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Brings a child window in front of this window's other children
            </summary>
            <param name="child">The child to move</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SendToBack">
            <summary>
            Puts this window behind its sibling windows
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SendToBack(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Puts this child window behind this window's other children
            </summary>
            <param name="child">The child to move</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Default handler for SS messages
            </summary>
            <param name="msg">The msg encapsulated in an event class</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AdjustBounds">
            <summary>
            This will adjust the bounds of the window based on the Relative or absolute positions 
            entered in the Skin.
            Note: This function is only called on valid child windows.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AdjustBounds(System.Drawing.Rectangle@)">
            <summary>
            This will adjust a rectangle in this window based on the Relative or absolute positions 
            entered in the Skin.
            Note: This function is only called on valid child windows.
            </summary>
            <param name="r">The rectangle to adjust</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AdjustBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This will adjust a rectangle in this window based on the Relative or absolute positions 
            entered in the Skin.
            Note: This function is only called on valid child windows.
            </summary>
            <param name="x">The x-position of the rectangle</param>
            <param name="y">The y-position of the rectangle</param>
            <param name="width">The width of the rectangle</param>
            <param name="height">The height of the rectangle</param>
            <returns>The adjusted rectangle</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.GetBaseDimensions(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the base skin dimensions for the window
            </summary>
            <param name="baseWidth">Base skin width</param>
            <param name="baseHeight">Base skin height</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SetTimeout(System.Int32,System.Boolean)">
            <summary>
            Sets the timeout for this window
            </summary>
            <param name="timeoutMs">The number of milliseconds between now and when the window should time out</param>
            <param name="ignoreInput">Tells us whether to reset on inputs or not</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ResetTimeout">
            <summary>
            Resets the timeout using the current values
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AddTexture(System.String)">
            <summary>
            Adds the texture at the given filename to the singleton texture cache
            </summary>
            <param name="filename">
            Filename that contains the texture to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawFile(System.String,System.Drawing.Rectangle)">
            <summary>
            Loads a texture from filename and stretches it to fit the target rectangle exactly
            </summary>
            <param name="filename">
            Filename to load the texture from
            </param>
            <param name="target">
            Target rectangle
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawFile(System.String,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.ImageAngle,System.Boolean,System.Boolean)">
            <summary>
            Loads a texture from filename and stretches it to fit the target rectangle exactly
            </summary>
            <param name="filename">
            Filename to load the texture from
            </param>
            <param name="target">
            Target rectangle
            </param>
            <param name="angle">
            The angle to rotate the image by
            </param>
            <param name="mirrorV">
            Whether or not to flip the image vertically
            </param>
            <param name="mirrorH">
            Whether or not to flip the image horizontally
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawTexture(SnapStream.ViewScape.Widgets.SSTexture,System.Drawing.Rectangle)">
             <summary>
             Stretches the SSTexture to fit the target rectangle exactly
             </summary>
             <param name="tex">
             SSTexture to stretch
             </param>
             <param name="target">
             Target rectangle
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawTexture(SnapStream.ViewScape.Widgets.SSTexture,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,SnapStream.ViewScape.Widgets.ImageAngle,System.Boolean,System.Boolean)">
            <summary>
            Draws the SSTexture in the given rectangle
            </summary>
            <param name="tex">
            SSTexture to draw
            </param>
            <param name="targetIn">
            Target rectangle
            </param>
            <param name="color">
            Modulates the color and alpha values of the texture
            </param>
            <param name="clip">
            Tells us whether the image should be clipped by our bounds
            </param>
            <param name="stretch">
            Tells us whether the image should be stretched to fit the bounds or the aspect ratio
            should be preserved
            </param>
            <param name="angle">
            The angle to rotate the image by
            </param>
            <param name="mirrorV">
            Whether or not to flip the image vertically
            </param>
            <param name="mirrorH">
            Whether or not to flip the image horizontally
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawFileToScale(System.String,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Maintains the aspect ratio of the Texture loaded from filename while scaling it to fit the rectangle by width or by height
            </summary>
            <param name="sFilename">
            filename to load from
            </param>
            <param name="target">
            Target rectangle
            </param>
            <param name="clipped">
            Whether or not to clip this drawing operation to this window's bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DrawTextureToScale(SnapStream.ViewScape.Widgets.SSTexture,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Maintains the aspect ratio of the SSTexture while scaling it to fit the rectangle by width or by height
            </summary>
            <param name="tex">
            SSTexture to scale
            </param>
            <param name="target">
            Target rectangle
            </param>
            <param name="color">
            Modulates the color and alpha values of the SSTexture
            </param>
            <param name="clipped">
            Whether or not to clip this drawing operation to this window's bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ScaleTexture(System.Single@,System.Single@,System.Drawing.Rectangle@,System.Drawing.Rectangle@,SnapStream.ViewScape.Widgets.SSTexture,SnapStream.ViewScape.Widgets.ImageAngle)">
            <summary>
            Scales a texture to fit in a particular target, but preserve the original
            aspect ratio of the image
            </summary>
            <param name="xScale">
            The amount to scale the x direction by
            </param>
            <param name="yScale">
            The amount to scale the y direction by
            </param>
            <param name="source">
            The source rectangle referring to the portion of the image to display
            </param>
            <param name="target">
            The target for our painting operation
            </param>
            <param name="tex">
            The texture to be painted
            </param>
            <param name="angle">
            The angle to rotate the image by
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse down event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this mouse message</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse up event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this mouse message</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse move event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this mouse message</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseOver(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse cursor enters this window
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse cursor leaves this window
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse wheel event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this mouse message</param>
            <param name="e">Contains the mouse position, buttons, and wheel delta</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this keyboard event</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key up event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this keyboard event</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handles the key press event
            Note: if you override this method, please be sure to call the base
            method first, unless you really know what you're doing
            </summary>
            <param name="sender">The sender of this keyboard event</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Handles all D3D device-specific tasks when a new device is created
            </summary>
            <param name="device">The new D3D device</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Handles all D3D device-specific tasks when the device is lost
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Handles all D3D device-specific tasks when the device is reset
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Handles all D3D device-specific tasks when the device is about to be disposed
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.Dispose">
            <summary>
            Disposes this object.  Please do NOT try to override this method.
            Classes derived from Window should override DisposeCore instead.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.DisposeCore">
            <summary>
            Override this method to handle special disposal code.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseSetCaptureEvent(System.EventArgs)">
            <summary>
            Raises our set capture event
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseReleaseCaptureEvent(System.EventArgs)">
            <summary>
            Raises our release capture event
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseDirtyEvent">
            <summary>
            Raises our dirty event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseVideoActiveEvent">
            <summary>
            Raises our video active event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseActivateMouseEvent">
            <summary>
            Raises our activate mouse event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseDeactivateMouseEvent">
            <summary>
            Raises our deactivate mouse event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseKeyDownEvent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises our key down event
            </summary>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseKeyUpEvent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises our key up event
            </summary>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseToggleFullScreenEvent">
            <summary>
            Raises our toggle full-screen event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseDownEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises our mouse down event
            </summary>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseUpEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises our mouse up event
            </summary>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseWheelEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises our mouse wheel event
            </summary>
            <param name="e">Contains the mouse position, buttons, and wheel delta</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseEnterEvent">
            <summary>
            Raises our mouse enter event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseLeaveEvent">
            <summary>
            Raises our mouse leave event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseMouseMoveEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises our mouse move event
            </summary>
            <param name="e">Contains the position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.RaiseTimeoutEvent">
            <summary>
            Raises our timeout event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ApplyDefaults">
            <summary>
            Applies skin defaults for this type
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ApplyDefaults(System.Object,System.Type)">
            <summary>
            Applies skin defaults for the specified object/type
            </summary>
            <param name="o">The object to apply defaults to</param>
            <param name="t">The object's type</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.FocusChild(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Gives input focus to the specified child window
            </summary>
            <param name="w">The child receiving input focus</param>
            <returns>True IFF the operation succeeded (currently always returns True)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnLostFocus">
            <summary>
            Called when this window loses input focus
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnFocus">
            <summary>
            Called when this window gains input focus
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.GetChildAtPoint(System.Drawing.Point)">
            <summary>
            Returns the child window at the specified point
            </summary>
            <param name="pt">
            This is the point in CLIENT COORDINATES
            </param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.GetModalWindow">
            <summary>
            Gets the visible modal child window that is highest on the z-order, if any
            Note: only the top-level window should be making this call
            </summary>
            <returns>The top-most visible modal window or null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when this window's Bounds are set
            </summary>
            <param name="x">The new x-position</param>
            <param name="y">The new y-position</param>
            <param name="width">The new width</param>
            <param name="height">The new height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AdjustChildBounds">
            <summary>
            Handles any child windows that need to be made flush with other windows
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.TrackMouseCursor(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles tracking the mouse cursor to determine when to send MouseOver and MouseOut events
            </summary>
            <param name="sender">The sender of this mouse message</param>
            <param name="e">Contains the position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnVisibleChanged(System.EventArgs)">
            <summary>
            Called when a window's Visible flag is changed
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.OnParentVisibleChanged(System.EventArgs)">
            <summary>
            Called when this window's parent window's Visible flag is changed
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SyncInputAndOptions">
            <summary>
            Handles showing and hiding input contexts and options groups for this window
            when it is shown/hidden
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ProcessInvocationList(System.Delegate[],System.Object,SnapStream.ViewScape.Widgets.PlayerControlArgs)">
            <summary>
            Processes an invocation list for a player control event by isolating each
            call to allow for exceptions
            </summary>
            <param name="delegateList">The list of event handlers</param>
            <param name="obj">The object sending this event</param>
            <param name="arg">The player control args for this event</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ClipWindowToParent(System.Drawing.Rectangle)">
            <summary>
            Clips the bounds of this window by the parent's bounds
            </summary>
            <param name="input">The parent's bounds</param>
            <returns>The clipped bounds</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.ClipRectByRect(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Clips one rectangle by another.
            </summary>
            <param name="toBeClipped">
            This rectangle will be clipped by the other one.
            </param>
            <param name="toClipWith">
            This rectangle will clip the other one.
            </param>
            <returns>
            toBeClipped clipped by toClipWith
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.MakeWindowFlush(SnapStream.ViewScape.Widgets.Window)">
            <summary>
            Handles flush operations for the given child window
            </summary>
            <param name="w">The child window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.SaveCoveredRegion(System.String)">
            <summary>
            Saves the region for this window to an image in the given directory
            </summary>
            <param name="path">The directory to save the image in</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.GetRegionBitmap(System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Attempts to create a bitmap image of the given region inside the frame of reference rect
            </summary>
            <param name="frame">The frame this region should apply to</param>
            <param name="region">The region to paint</param>
            <param name="outside">The color of a pixel outside of both frame and region</param>
            <param name="inside">The color of a pixel inside the frame but outside the region</param>
            <param name="covered">The color of a pixel inside the region</param>
            <returns>The bitmap of the region inside the frame</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AddChildCore(System.Object)">
            <summary>
            Handles adding a child object to this window
            </summary>
            <param name="child">The child object to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.AddTextCore(System.String)">
            <summary>
            Handles adding a text object to this window (currently this does nothing)
            </summary>
            <param name="text">The text to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Window.GetEnumerator">
            <summary>
            Enumerates the child windows
            </summary>
            <returns>An enumerator that enumerates our child windows</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Parent">
            <summary>
            Our parent window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.ID">
            <summary>
            This window's identifier (warning: this isn't unique or maintained, it's just
            here for debugging purposes)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Enabled">
            <summary>
            Not implemented: This flag tells the framework whether
            this window should receive inputs
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.WindowAlpha">
            <summary>
            The current alpha-blending value of this window
            (0 = completely transparent, 255 = completely opaque)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Visible">
            <summary>
            Whether this window is visible (_alpha will still affect visibility if this is True)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.FocusWindow">
            <summary>
            The child window that has keyboard input focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.ParentVisible">
            <summary>
            Whether our parent window is visible
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Background">
            <summary>
            The filename or skin image name that is the background of this window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Bounds">
            <summary>
            The bounds of this window relative to the window's parent.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.ClippedBounds">
            <summary>
            The bounds of this window clipped to fit properly in it's parent window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.TopLevelControl">
            <summary>
            The eldest parent of this window's lineage
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MainForm">
            <summary>
            The main application form containing this window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Modal">
            <summary>
            Whether this window is a modal dialog
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Capture">
            <summary>
            Whether this window has mouse capture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.CaptureWindow">
            <summary>
            The child window that has mouse capture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Painter">
            <summary>
            The sprite we are painting to
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MirrorV">
            <summary>
            Whether to vertically flip this window's background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MirrorH">
            <summary>
            Whether to horizontally flip this window's background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Angle">
            <summary>
            The angle at which to rotate this window's background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.StretchBackground">
            <summary>
            Tells us whether this window's background should be stretched when rendering
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.BaseUri">
            <summary>
            The base URI for all content in this window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.CoveredRegion">
            <summary>
            Tells the consumer the region in which this window and its children should be paintede
            when dealing with the overlay
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.PaintChildrenOverOverlay">
            <summary>
            Whether to use this window's bounds or ask its children where to paint
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.NeverPaintOverOverlay">
            <summary>
            Tells us not to ever return any region for us or our children with regards to the overlay
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.InputContext">
            <summary>
            The input context that should be loaded when this window has focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.OptionGroup">
            <summary>
            The option group that should be loaded when this window is shown
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.DoubleBuffered">
            <summary>
            Tells us whether to double buffer our background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.NeedsToBeMadeFlush">
            <summary>
            Whether this window needs to be made flush with another window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MakeTopFlushWith">
            <summary>
            The window to make this window flush with on the top
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MakeBottomFlushWith">
            <summary>
            The window to make this window flush with on the bottom
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MakeLeftFlushWith">
            <summary>
            The window to make this window flush with on the left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.MakeRightFlushWith">
            <summary>
            The window to make this window flush with on the right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.RelativeBounds">
            <summary>
            The skin-based relative bounds of this window
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.X">
            <summary>
            The skin-based relative x-coordinate of this window's top-left corner
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Y">
            <summary>
            The skin-based relative y-coordinate of this window's top-left corner
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Width">
            <summary>
            The skin-based relative width of this window
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.Height">
            <summary>
            The skin-based relative height of this window
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.AbsoluteBounds">
            <summary>
            The skin-based absolute bounds of this window
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.AbsX">
            <summary>
            The skin-based absolute x-coordinate of this window's top-left corner
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.AbsY">
            <summary>
            The skin-based absolute y-coordinate of this window's top-left corner
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.AbsWidth">
            <summary>
            The skin-based absolute width of this window
            used when resizing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Window.AbsHeight">
            <summary>
            The skin-based absolute height of this window
            used when resizing
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.KeyDown">
            <summary>
            Not implemented: Occurs when this window receives a key down event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.KeyUp">
            <summary>
            Not implemented: Occurs when this window receives a key up event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseDown">
            <summary>
            Occurs when this window receives a mouse down event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseEnter">
            <summary>
            Occurs when this window receives a mouse over event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseLeave">
            <summary>
            Occurs when this window receives a mouse out event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseMove">
            <summary>
            Occurs when this window receives a mouse move event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseUp">
            <summary>
            Occurs when this window receives a mouse up event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.MouseWheel">
            <summary>
            Not implemented: Occurs when this window receives a mouse wheel event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.EnabledChanged">
            <summary>
            Occurs when this window's enabled flag is changed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.SetCapture">
            <summary>
            Occurs when a child window receives mouse capture
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.ReleaseCapture">
            <summary>
            Occurs when a child window loses mouse capture
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.Dirty">
            <summary>
            Indicates that this window needs to be repainted as soon as possible
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.VideoActive">
            <summary>
            Signals that this application is actively playing video
            and screen saving should be disabled
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.ActivateMouse">
            <summary>
            Signals that this window wishes the mouse to be activated
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.DeactivateMouse">
            <summary>
            Signals that this window wishes the mouse to be deactivated
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.ToggleFullScreen">
            <summary>
            Signals that this window wishes the application to toggle full-screen display
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Window.Timeout">
            <summary>
            Signals that a timeout on this window has timed-out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.MainFrame._parentForm">
            <summary>
            Parent form that contains this mainframe
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.MainFrame._skinBaseWidth">
            <summary>
            Contains the base skin width for the application
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.MainFrame._skinBaseHeight">
            <summary>
            Contains the base skin height for the application
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.#ctor(SnapStream.ViewScape.AppForm)">
            <summary>
            Creates a new main frame
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Use OnKeyDownInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Use OnKeyUpInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use OnMouseDownInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use OnMouseUpInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use OnMouseMoveInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use OnMouseWheelInternal(), instead
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Handles some basic top-level events
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.PointToForm(System.Drawing.Point)">
            <summary>
            Overridden to compensate for overscanning compensation
            </summary>
            <param name="p">The point to translate</param>
            <returns>The point in the top level form</returns>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.GetBaseDimensions(System.Int32@,System.Int32@)">
            <summary>
            Overridden to return the skin base width and height
            </summary>
            <param name="baseWidth">The app base width</param>
            <param name="baseHeight">The app base height</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnKeyDownInternal(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Override this method if you want to have your key input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnKeyUpInternal(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Override this method if you want to have your key input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseDownInternal(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override this method if you want to have your mouse input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseUpInternal(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override this method if you want to have your mouse input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseMoveInternal(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override this method if you want to have your mouse input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMouseWheelInternal(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override this method if you want to have your mouse input handling
            inside the mouse hourglass timer.
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMediaInserted">
            <summary>
            Signals a dvd or cd was inserted
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnMediaRemoved">
            <summary>
            Signals a dvd or cd was removed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.OnApplicationExit(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Overridden to tell the AppForm to exit
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.RaiseSkinBaseChangedEvent">
            <summary>
            Raises the SkinBaseChanged event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.RaiseShowCursorEvent">
            <summary>
            Raises the ShowCursor event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.RaiseHideCursorEvent">
            <summary>
            Raises the HideCursor event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.RaiseSetCursorEvent(System.Windows.Forms.Cursor)">
            <summary>
            Raises the SetCursor event
            </summary>
            <param name="cursor">The cursor to set</param>
        </member>
        <member name="M:SnapStream.ViewScape.MainFrame.RaiseExitEvent">
            <summary>
            Raises the exit event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.MainForm">
            <summary>
            Overridden to return the app form that contains this MainFrame window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.SkinBaseWidth">
            <summary>
            Contains the base skin width for the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.SkinBaseHeight">
            <summary>
            Contains the base skin height for the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalUpKeys">
            <summary>
            Semicolon separated list of global up keys
            </summary>
            <value>The default value is Keys.Up</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalDownKeys">
            <summary>
            Semicolon separated list of global down keys
            </summary>
            <value>The default value is Keys.Down</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalLeftKeys">
            <summary>
            Semicolon separated list of global left keys
            </summary>
            <value>The default value is Keys.Left</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalRightKeys">
            <summary>
            Semicolon separated list of global right keys
            </summary>
            <value>The default value is Keys.Right</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalSelectKeys">
            <summary>
            Semicolon separated list of global select keys
            </summary>
            <value>The default value is Keys.Enter</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalExitKeys">
            <summary>
            Semicolon separated list of global exit keys
            </summary>
            <value>The default value is Keys.Cancel</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalCancelKeys">
            <summary>
            Semicolon separated list of global up keys
            </summary>
            <value>The default value is Keys.Cancel</value>
        </member>
        <member name="P:SnapStream.ViewScape.MainFrame.GlobalToggleKeys">
            <summary>
            Semicolon separated list of global toggle keys
            </summary>
            <value>The default value is Keys.Space</value>
        </member>
        <member name="E:SnapStream.ViewScape.MainFrame.SkinBaseChanged">
            <summary>
            Occurs when either the SkinBaseWidth or the SkinBaseHeight change
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.MainFrame.ShowCursor">
            <summary>
            Occurs when the mouse cursor needs to be shown
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.MainFrame.HideCursor">
            <summary>
            Occurs when the mouse cursor needs to be hidden
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.MainFrame.SetCursor">
            <summary>
            Occurs when the mouse cursor needs to be set
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.MainFrame.Exit">
            <summary>
            Occurs when the main frame needs to exit
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsBugWO">
            <summary>
            Contains Work-arounds for DirectShow bugs
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsBugWO.CreateDsInstance(System.Guid@,System.Guid@)">
            <summary>
            Fixes being able to cocreate the capture graph builder with the IUnknown interface
            </summary>
            <param name="clsid">The class id</param>
            <param name="riid">The interface id</param>
            <returns>The com object that was created</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaControl">
            <summary>
            DirectShow interface for controlling media playback
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.Run">
            <summary>
            Runs the graph
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.Pause">
            <summary>
            Pauses the graph
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.Stop">
            <summary>
            Stops the graph
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the graph
            </summary>
            <param name="msTimeout">How long to wait for the state</param>
            <param name="pfs">The graph state</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.RenderFile(System.String)">
            <summary>
            Constructs a graph that renders the specified file
            </summary>
            <param name="strFilename">The media file to render</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.AddSourceFilter(System.String,System.Object@)">
            <summary>
            Adds a new source filter to the graph for the specified file
            </summary>
            <param name="strFilename">The media file source</param>
            <param name="ppUnk">The filter created that reads the source media</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.get_FilterCollection(System.Object@)">
            <summary>
            NOT SUPPORTED: Retrieves all of the filters in the graph
            </summary>
            <param name="ppUnk">An array of the filters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.get_RegFilterCollection(System.Object@)">
            <summary>
            NOT SUPPORTED: Retrieves all of the filters listed in the registry
            </summary>
            <param name="ppUnk">An array of the filters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaControl.StopWhenReady">
            <summary>
            Pauses the graph, allows the filters to finished processing queued data, then stops the graph
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaEvent">
            <summary>
            DirectShow interface for controlling handling of media events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.GetEventHandle(System.IntPtr@)">
            <summary>
            Gets a handle to the manual reset event
            </summary>
            <param name="hEvent">The handle to the manual reset event</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.GetEvent(SnapStream.ViewScape.DirectShow.DsEvCode@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Retrieves the next event from the queue
            </summary>
            <param name="lEventCode">The event's code</param>
            <param name="lParam1">The first event parameter</param>
            <param name="lParam2">The second event parameter</param>
            <param name="msTimeout">How many milliseconds to wait for an event if there isn't one</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.WaitForCompletion(System.Int32,System.Int32@)">
            <summary>
            Waits for the filter graph to render all available data
            </summary>
            <param name="msTimeout">How many milliseconds to wait</param>
            <param name="pEvCode">Event code that describes how things played out</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.CancelDefaultHandling(System.Int32)">
            <summary>
            Turns off automatic handling of the specified event
            </summary>
            <param name="lEvCode">The event code to stop handling</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.RestoreDefaultHandling(System.Int32)">
            <summary>
            Turns on automatic handling of the specified event
            </summary>
            <param name="lEvCode">The event code to start handling</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEvent.FreeEventParams(SnapStream.ViewScape.DirectShow.DsEvCode,System.Int32,System.Int32)">
            <summary>
            Frees any resources associated with the event
            </summary>
            <param name="lEvCode">The event code that occurred</param>
            <param name="lParam1">The first event parameter</param>
            <param name="lParam2">The second event parameter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaEventEx">
            <summary>
            DirectShow interface for controlling handling and direct handling of media events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.GetEventHandle(System.IntPtr@)">
            <summary>
            Gets a handle to the manual reset event
            </summary>
            <param name="hEvent">The handle to the manual reset event</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.GetEvent(SnapStream.ViewScape.DirectShow.DsEvCode@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Retrieves the next event from the queue
            </summary>
            <param name="lEventCode">The event's code</param>
            <param name="lParam1">The first event parameter</param>
            <param name="lParam2">The second event parameter</param>
            <param name="msTimeout">How many milliseconds to wait for an event if there isn't one</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.WaitForCompletion(System.Int32,System.Int32@)">
            <summary>
            Waits for the filter graph to render all available data
            </summary>
            <param name="msTimeout">How many milliseconds to wait</param>
            <param name="pEvCode">Event code that describes how things played out</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.CancelDefaultHandling(System.Int32)">
            <summary>
            Turns off automatic handling of the specified event
            </summary>
            <param name="lEvCode">The event code to stop handling</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.RestoreDefaultHandling(System.Int32)">
            <summary>
            Turns on automatic handling of the specified event
            </summary>
            <param name="lEvCode">The event code to start handling</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.FreeEventParams(SnapStream.ViewScape.DirectShow.DsEvCode,System.Int32,System.Int32)">
            <summary>
            Frees any resources associated with the event
            </summary>
            <param name="lEvCode">The event code that occurred</param>
            <param name="lParam1">The first event parameter</param>
            <param name="lParam2">The second event parameter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.SetNotifyWindow(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Registers a window to process event notifications
            </summary>
            <param name="hwnd">The handle to the window that will process the events</param>
            <param name="lMsg">The window message id to be passed as the notification</param>
            <param name="lInstanceData">The value to be passed as the lParam of the message</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.SetNotifyFlags(System.Int32)">
            <summary>
            Enables or disables event notifications
            </summary>
            <param name="lNoNotifyFlags">Value indicating whether to enable or disable event notifications</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaEventEx.GetNotifyFlags(System.Int32@)">
            <summary>
            Gets whether event notifications are enabled or disabled
            </summary>
            <param name="lplNoNotifyFlags">Zero = enabled, AM_MEDIAEVENT_NONOTIFY = disabled</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IBasicVideo2">
            <summary>
            DirectShow interface for get/set video properties and manage the display window
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_AvgTimePerFrame(System.Double@)">
            <summary>
            Retrieves the average time between successive frames
            </summary>
            <param name="pAvgTimePerFrame">The average frame time in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_BitRate(System.Int32@)">
            <summary>
            Retrieves the approximate bit rate of the video stream
            </summary>
            <param name="pBitRate">The bit rate in bits per second</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_BitErrorRate(System.Int32@)">
            <summary>
            Retrieves the approximate bit error rate of the video stream
            </summary>
            <param name="pBitRate">The number of bits per error</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_VideoWidth(System.Int32@)">
            <summary>
            Retrieves the native width of the video
            </summary>
            <param name="pVideoWidth">The width of the video in pixels</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_VideoHeight(System.Int32@)">
            <summary>
            Retrieves the native height of the video
            </summary>
            <param name="pVideoHeight">The height of the video in pixels</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_SourceLeft(System.Int32)">
            <summary>
            Sets the x-coordinate of the source rectangle
            </summary>
            <param name="SourceLeft">The x-coordinate of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_SourceLeft(System.Int32@)">
            <summary>
            Gets the x-coordinate of the source rectangle
            </summary>
            <param name="pSourceLeft">The x-coordinate of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_SourceWidth(System.Int32)">
            <summary>
            Sets the width of the source rectangle
            </summary>
            <param name="SourceWidth">The width of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_SourceWidth(System.Int32@)">
            <summary>
            Gets the width of the source rectangle
            </summary>
            <param name="pSourceWidth">The width of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_SourceTop(System.Int32)">
            <summary>
            Sets the y-coordinate of the source rectangle
            </summary>
            <param name="SourceTop">The y-coordinate of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_SourceTop(System.Int32@)">
            <summary>
            Gets the y-coordinate of the source rectangle
            </summary>
            <param name="pSourceTop">The y-coordinate of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_SourceHeight(System.Int32)">
            <summary>
            Sets the height of the source rectangle
            </summary>
            <param name="SourceHeight">The height of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_SourceHeight(System.Int32@)">
            <summary>
            Gets the height of the source rectangle
            </summary>
            <param name="pSourceHeight">The height of the source rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_DestinationLeft(System.Int32)">
            <summary>
            Sets the x-coordinate of the destination rectangle
            </summary>
            <param name="DestinationLeft">The x-coordinate of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_DestinationLeft(System.Int32@)">
            <summary>
            Gets the x-coordinate of the destination rectangle
            </summary>
            <param name="pDestinationLeft">The x-coordinate of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_DestinationWidth(System.Int32)">
            <summary>
            Sets the width of the destination rectangle
            </summary>
            <param name="DestinationWidth">The width of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_DestinationWidth(System.Int32@)">
            <summary>
            Gets the width of the destination rectangle
            </summary>
            <param name="pDestinationWidth">The width of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_DestinationTop(System.Int32)">
            <summary>
            Sets the y-coordinate of the destination rectangle
            </summary>
            <param name="DestinationTop">The y-coordinate of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_DestinationTop(System.Int32@)">
            <summary>
            Gets the y-coordinate of the destination rectangle
            </summary>
            <param name="pDestinationTop">The y-coordinate of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.put_DestinationHeight(System.Int32)">
            <summary>
            Sets the height of the destination rectangle
            </summary>
            <param name="DestinationHeight">The height of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.get_DestinationHeight(System.Int32@)">
            <summary>
            Gets the height of the destination rectangle
            </summary>
            <param name="pDestinationHeight">The height of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.SetSourcePosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the source rectangle
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetSourcePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the source rectangle
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.SetDefaultSourcePosition">
            <summary>
            Sets the source rectangle to the default
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.SetDestinationPosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the destination rectangle
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetDestinationPosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the destination rectangle
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.SetDefaultDestinationPosition">
            <summary>
            Sets the destination rectangle to the default
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetVideoSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the native video dimensions
            </summary>
            <param name="pWidth">The native width of the video</param>
            <param name="pHeight">The native height of the video</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetVideoPaletteEntries(System.Int32,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
            NOT SUPPORTED: Retrieves the palette colors for the video
            </summary>
            <param name="StartIndex">Starting index for the palette</param>
            <param name="Entries">Number of entries to retrieve</param>
            <param name="pRetrieved">The number of entries that were retrieved</param>
            <param name="pPalette">Pointer to the array PALETTEENTRY structures</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetCurrentImage(System.Int32@,System.IntPtr)">
            <summary>
            NOT SUPPORTED: Retrieves the current image waiting to be rendered
            </summary>
            <param name="pBufferSize">The size of the buffer being passed in</param>
            <param name="pDIBImage">The buffer that receives the image</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.IsUsingDefaultSource">
            <summary>
            Whether the renderer is using the default source rectangle
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.IsUsingDefaultDestination">
            <summary>
            Whether the renderer is using the default destination rectangle
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicVideo2.GetPreferredAspectRatio(System.Int32@,System.Int32@)">
            <summary>
            Retrieves a pair of dimensionless values whose ratio defines the video's preferred aspect ratio
            </summary>
            <param name="plAspectX">The x-dimension</param>
            <param name="plAspectY">The y-dimension</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IVideoWindow">
            <summary>
            Gets and sets properties on the video window
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Caption(System.String)">
            <summary>
            Sets the video window caption
            </summary>
            <param name="caption">The new video window caption</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Caption(System.String@)">
            <summary>
            Gets the video window caption
            </summary>
            <param name="caption">The video window caption</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_WindowStyle(System.Int32)">
            <summary>
            Sets the window styles on the video window
            </summary>
            <param name="windowStyle">The window styles</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_WindowStyle(System.Int32@)">
            <summary>
            Gets the window styles of the video window
            </summary>
            <param name="windowStyle">The window styles</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_WindowStyleEx(System.Int32)">
            <summary>
            Sets the extended window styles on the video window
            </summary>
            <param name="windowStyleEx">The extended window styles</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_WindowStyleEx(System.Int32@)">
            <summary>
            Gets the extended window styles of the video window
            </summary>
            <param name="windowStyleEx">The extended window styles</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_AutoShow(System.Int32)">
            <summary>
            Sets whether the video renderer automatically shows the video window when it receives video data
            </summary>
            <param name="autoShow">
            OATRUE = if the video renderer pause or runs, it will automatically show the video window
            OAFALSE = the video renderer will not automatically show the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_AutoShow(System.Int32@)">
            <summary>
            Queries whether the video renderer automatically shows the video window when it receives video data
            </summary>
            <param name="autoShow">
            OATRUE = if the video renderer pause or runs, it will automatically show the video window
            OAFALSE = the video renderer will not automatically show the video window
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_WindowState(System.Int32)">
            <summary>
            Shows, hides, minimizes, or maximizes the video window
            </summary>
            <param name="windowState">The window state to set (same as the Win32 ShowWindow method uses)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_WindowState(System.Int32@)">
            <summary>
            Queries whether the video window is visible, hidden, minimized, or maximized
            </summary>
            <param name="windowState">The window state (same as the Win32 ShowWindow method uses)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_BackgroundPalette(System.Int32)">
            <summary>
            Specifies whether the video window realizes the palette in the background
            </summary>
            <param name="backgroundPalette">
            OATRUE = the video renderer realizes the palette in the background
            OAFALSE = the video renderer does NOT realize the palette in the background
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_BackgroundPalette(System.Int32@)">
            <summary>
            Queries whether the video window realizes the palette in the background
            </summary>
            <param name="backgroundPalette">
            OATRUE = the video renderer realizes the palette in the background
            OAFALSE = the video renderer does NOT realize the palette in the background
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Visible(System.Int32)">
            <summary>
            Shows or hides the video window
            </summary>
            <param name="visible">
            OATRUE = Show the window
            OAFALSE = Hide the window
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Visible(System.Int32@)">
            <summary>
            Queries whether the video window is visible
            </summary>
            <param name="visible">
            OATRUE = the window is visible
            OAFALSE = the window is hidden
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Left(System.Int32)">
            <summary>
            Sets the x-coordinate of the video window
            </summary>
            <param name="left">The x-coordinate of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Left(System.Int32@)">
            <summary>
            Gets the x-coordinate of the video window
            </summary>
            <param name="left">The x-coordinate of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Width(System.Int32)">
            <summary>
            Sets the width of the video window
            </summary>
            <param name="width">The width of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Width(System.Int32@)">
            <summary>
            Gets the width of the video window
            </summary>
            <param name="width">The width of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Top(System.Int32)">
            <summary>
            Sets the y-coordinate of the video window
            </summary>
            <param name="top">The y-coordinate of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Top(System.Int32@)">
            <summary>
            Gets the y-coordinate of the video window
            </summary>
            <param name="top">The y-coordinate of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Height(System.Int32)">
            <summary>
            Sets the height of the video window
            </summary>
            <param name="height">The height of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Height(System.Int32@)">
            <summary>
            Gets the height of the video window
            </summary>
            <param name="height">The height of the video window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_Owner(System.IntPtr)">
            <summary>
            Sets the parent window for the video window
            </summary>
            <param name="owner">Handle to the parent window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_Owner(System.IntPtr@)">
            <summary>
            Gets the parent window of the video window
            </summary>
            <param name="owner">Handle to the parent window</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_MessageDrain(System.IntPtr)">
            <summary>
            Specifies a window that receives the mouse and keyboard msgs from the video window
            </summary>
            <param name="drain">Handle to the window that receives the msgs</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_MessageDrain(System.IntPtr@)">
            <summary>
            Retrieves the window that receives the mouse and keyboard msgs from the video window
            </summary>
            <param name="drain">Handle to the window that receives the msgs</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_BorderColor(System.Int32@)">
            <summary>
            Gets the color that appears around the edges of the destination rectangle
            </summary>
            <param name="color">The color that appears around the edges of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_BorderColor(System.Int32)">
            <summary>
            Sets the color that should appear around the edges of the destination rectangle
            </summary>
            <param name="color">The color that appears around the edges of the destination rectangle</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.get_FullScreenMode(System.Int32@)">
            <summary>
            Gets whether full-screen video rendering is enabled or disabled
            </summary>
            <param name="fullScreenMode">
            OATRUE = the video window is in full-screen video rendering
            OAFALSE = the window window is NOT in full-screen video rendering
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.put_FullScreenMode(System.Int32)">
            <summary>
            Enables or disables full-screen video rendering
            </summary>
            <param name="fullScreenMode">
            OATRUE = switch to full-screen video rendering
            OAFALSE = disable full-screen video rendering
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.SetWindowForeground(System.Int32)">
            <summary>
            Places the video window at the top of the z order
            </summary>
            <param name="focus">
            OATRUE = give the window focus
            OaFALSE = do NOT give the window focus
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.NotifyOwnerMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Forwards a msg to the video window
            </summary>
            <param name="hwnd">Handle to the window</param>
            <param name="msg">Specifies the message</param>
            <param name="wParam">Message param</param>
            <param name="lParam">Message param</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.SetWindowPosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the position of the video window
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.GetWindowPosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the position of the video window
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.GetMinIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum ideal size for the video image
            </summary>
            <param name="width">The minimum ideal width</param>
            <param name="height">The minimum ideal height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.GetMaxIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the maximum ideal size for the video image
            </summary>
            <param name="width">The maximum ideal width</param>
            <param name="height">The maximum ideal height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.GetRestorePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the restored window position
            </summary>
            <param name="left">The x-coordinate</param>
            <param name="top">The y-coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.HideCursor(System.Int32)">
            <summary>
            Shows or hides the cursor when the mouse is positioned over the video window
            </summary>
            <param name="hideCursor">
            OATRUE = Hide the cursor
            OAFALSE = Show the cursor
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoWindow.IsCursorHidden(System.Int32@)">
            <summary>
            Queries whether the cursor is hidden
            </summary>
            <param name="hideCursor">
            OATRUE = Cursor is hidden
            OAFALSE = Cursor is displayed
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaPosition">
            <summary>
            Contains the DirectShow methods for seeking in a stream
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.get_Duration(System.Double@)">
            <summary>
            Retrieves the duration of the stream
            </summary>
            <param name="pLength">The total stream length, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.put_CurrentPosition(System.Double)">
            <summary>
            Sets the current position
            </summary>
            <param name="llTime">The new position, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.get_CurrentPosition(System.Double@)">
            <summary>
            Retrieves the current position
            </summary>
            <param name="pllTime">The position, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.get_StopTime(System.Double@)">
            <summary>
            Retrieves the time at which playback will stop
            </summary>
            <param name="pllTime">The stop time, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.put_StopTime(System.Double)">
            <summary>
            Sets the time at which playback will stop
            </summary>
            <param name="llTime">The stop time, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.get_PrerollTime(System.Double@)">
            <summary>
            Retrieves the amount of data that will be queued before the start position is reached
            </summary>
            <param name="pllTime">The duration of the preroll, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.put_PrerollTime(System.Double)">
            <summary>
            Sets the amount of data that will be queued before the start position is reached
            </summary>
            <param name="llTime">The duration of the preroll, in seconds</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.put_Rate(System.Double)">
            <summary>
            Sets the playback rate
            </summary>
            <param name="dRate">Playback rate (must NOT be zero)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.get_Rate(System.Double@)">
            <summary>
            Retrieves the playback rate
            </summary>
            <param name="pdRate">Playback rate</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.CanSeekForward(System.Int32@)">
            <summary>
            Whether the filter graph can seek forward in the stream
            </summary>
            <param name="pCanSeekForward">OATRUE = can seek, OAFALSE = can't seek</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaPosition.CanSeekBackward(System.Int32@)">
            <summary>
            Whether the filter graph can seek backward in the stream
            </summary>
            <param name="pCanSeekBackward">OATRUE = can seek, OAFALSE = can't seek</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IBasicAudio">
            <summary>
            Enables applications to control the volume and balance of the audio stream
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicAudio.put_Volume(System.Int32)">
            <summary>
            Sets the volume (amplitude) of the audio signal
            </summary>
            <param name="lVolume">
            The volume level in 1/100ths dB
            Valid values range from -10,000 (silence) to 0 (full volume)
            0 = 0 dB
            -10000 = -100 dB
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicAudio.get_Volume(System.Int32@)">
            <summary>
            Retrieves the volume (amplitude) of the audio signal
            </summary>
            <param name="plVolume">
            The volume level in 1/100ths dB
            Valid values range from -10,000 (silence) to 0 (full volume)
            0 = 0 dB
            -10000 = -100 dB
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicAudio.put_Balance(System.Int32)">
            <summary>
            Sets the balance of the audio signal
            </summary>
            <param name="lBalance">
            -10,000 means the right channel is attenuated by 100 dB (silent)
            10,000 means the left channel is attenuated by 100 dB (silent)
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBasicAudio.get_Balance(System.Int32@)">
            <summary>
            Gets the balance of the audio signal
            </summary>
            <param name="plBalance">
            -10,000 means the right channel is attenuated by 100 dB (silent)
            10,000 means the left channel is attenuated by 100 dB (silent)
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMCollection">
            <summary>
            NOT SUPPORTED: Represents a collection of pins, filters, or media types
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMCollection.get_Count(System.Int32@)">
            <summary>
            NOT SUPPORTED: Retrieves the number of items in the collection
            </summary>
            <param name="plCount">The number of items in the collection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMCollection.Item(System.Int32,System.Object@)">
            <summary>
            NOT SUPPORTED: Retrieves an item from the collection
            </summary>
            <param name="lItem">The index to the item</param>
            <param name="ppUnk">The item</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMCollection.get_NewEnum(System.Object@)">
            <summary>
            NOT SUPPORTED: Retrieves an enumeration of this collection
            </summary>
            <param name="ppUnk">An enumeration of this collection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsEvCode">
            <summary>
            Enumeration of DirectShow event codes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.None">
            <summary>
            No related event code
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Complete">
            <summary>
            EC_COMPLETE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.UserAbort">
            <summary>
            EC_USERABORT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.ErrorAbort">
            <summary>
            EC_ERRORABORT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Time">
            <summary>
            EC_TIME
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Repaint">
            <summary>
            EC_REPAINT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.StErrStopped">
            <summary>
            EC_STREAM_ERROR_STOPPED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.StErrStPlaying">
            <summary>
            EC_STREAM_ERROR_STILLPLAYING
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.ErrorStPlaying">
            <summary>
            EC_ERROR_STILLPLAYING
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.PaletteChanged">
            <summary>
            EC_PALETTE_CHANGED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.VideoSizeChanged">
            <summary>
            EC_VIDEO_SIZE_CHANGED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.QualityChange">
            <summary>
            EC_QUALITY_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.ShuttingDown">
            <summary>
            EC_SHUTTING_DOWN
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.ClockChanged">
            <summary>
            EC_CLOCK_CHANGED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Paused">
            <summary>
            EC_PAUSED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.OpeningFile">
            <summary>
            EC_OPENING_FILE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.BufferingData">
            <summary>
            EC_BUFFERING_DATA
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.FullScreenLost">
            <summary>
            EC_FULLSCREEN_LOST
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Activate">
            <summary>
            EC_ACTIVATE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.NeedRestart">
            <summary>
            EC_NEED_RESTART
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.WindowDestroyed">
            <summary>
            EC_WINDOW_DESTROYED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DisplayChanged">
            <summary>
            EC_DISPLAY_CHANGED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.Starvation">
            <summary>
            EC_STARVATION
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.OleEvent">
            <summary>
            EC_OLE_EVENT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.NotifyWindow">
            <summary>
            EC_NOTIFY_WINDOW
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdDomChange">
            <summary>
            EC_DVD_DOMAIN_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdTitleChange">
            <summary>
            EC_DVD_TITLE_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdChaptStart">
            <summary>
            EC_DVD_CHAPTER_START
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdAudioStChange">
            <summary>
            EC_DVD_AUDIO_STREAM_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdSubPicStChange">
            <summary>
            EC_DVD_SUBPICTURE_STREAM_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdAngleChange">
            <summary>
            EC_DVD_ANGLE_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdButtonChange">
            <summary>
            EC_DVD_BUTTON_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdValidUopsChange">
            <summary>
            EC_DVD_VALID_UOPS_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdStillOn">
            <summary>
            EC_DVD_STILL_ON
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdStillOff">
            <summary>
            EC_DVD_STILL_OFF
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdCurrentTime">
            <summary>
            EC_DVD_CURRENT_TIME
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdError">
            <summary>
            EC_DVD_ERROR
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdWarning">
            <summary>
            EC_DVD_WARNING
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdChaptAutoStop">
            <summary>
            EC_DVD_CHAPTER_AUTOSTOP
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdNoFpPgc">
            <summary>
            EC_DVD_NO_FP_PGC
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdPlaybRateChange">
            <summary>
            EC_DVD_PLAYBACK_RATE_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdParentalLChange">
            <summary>
            EC_DVD_PARENTAL_LEVEL_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdPlaybStopped">
            <summary>
            EC_DVD_PLAYBACK_STOPPED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdAnglesAvail">
            <summary>
            EC_DVD_ANGLES_AVAILABLE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdPeriodAStop">
            <summary>
            EC_DVD_PLAYPERIOD_AUTOSTOP
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdButtonAActivated">
            <summary>
            EC_DVD_BUTTON_AUTO_ACTIVATED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdCmdStart">
            <summary>
            EC_DVD_CMD_START
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdCmdEnd">
            <summary>
            EC_DVD_CMD_END
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdDiscEjected">
            <summary>
            EC_DVD_DISC_EJECTED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdDiscInserted">
            <summary>
            EC_DVD_DISC_INSERTED
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdCurrentHmsfTime">
            <summary>
            EC_DVD_CURRENT_HMSF_TIME
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsEvCode.DvdKaraokeMode">
            <summary>
            EC_DVD_KARAOKE_MODE
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.PinDirection">
            <summary>
            DirectShow enumeration stating a pin's direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinDirection.Input">
            <summary>
            PINDIR_INPUT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinDirection.Output">
            <summary>
            PINDIR_OUTPUT
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMAspectRatioMode">
            <summary>
            DirectShow enumeration stating the aspect ratio mode of a video stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMAspectRatioMode.AM_ARMODE_STRETCHED">
            <summary>
            The video is stretched to fit the destination rectangle
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMAspectRatioMode.AM_ARMODE_LETTER_BOX">
            <summary>
            Puts the video in a letterbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMAspectRatioMode.AM_ARMODE_CROP">
            <summary>
            Crops the video to the correct aspect ratio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMAspectRatioMode.AM_ARMODE_STRETCHED_AS_PRIMARY">
            <summary>
            Use whatever mode is used on the primary stream (only valid for secondary streams)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMixerPinConfig">
            <summary>
            Manipulates properties on the overlay mixer's input pins
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetRelativePosition(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sets the position of the stream in the display window
            </summary>
            <param name="dwLeft">The x-coordinate of the upper-left corner</param>
            <param name="dwTop">The y-coordinate of the upper-left</param>
            <param name="dwRight">The x-coordinate of the bottom-right corner</param>
            <param name="dwBottom">The y-coordinate of the bottom-right corner</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetRelativePosition(System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            Gets the position of the stream in the display window
            </summary>
            <param name="pdwLeft">The x-coordinate of the upper-left corner</param>
            <param name="pdwTop">The y-coordinate of the upper-left</param>
            <param name="pdwRight">The x-coordinate of the bottom-right corner</param>
            <param name="pdwBottom">The y-coordinate of the bottom-right corner</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetZOrder(System.UInt32)">
            <summary>
            NOT SUPPORTED
            </summary>
            <param name="dwZOrder">NOT SUPPORTED</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetZOrder(System.UInt32@)">
            <summary>
            NOT SUPPORTED
            </summary>
            <param name="pdwZOrder">NOT SUPPORTED</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetColorKey">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetColorKey">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetBlendingParameter">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetBlendingParameter">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetAspectRatioMode(SnapStream.ViewScape.DirectShow.AMAspectRatioMode)">
            <summary>
            Sets the aspect ratio correction mode for the stream
            </summary>
            <param name="amAspectRatioMode">The aspect ratio correction mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetAspectRatioMode(SnapStream.ViewScape.DirectShow.AMAspectRatioMode@)">
            <summary>
            Gets the aspect ratio correction mode for the stream
            </summary>
            <param name="pamAspectRatioMode">The aspect ratio correction mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.SetStreamTransparent">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMixerPinConfig.GetStreamTransparent">
            <summary>
            NOT SUPPORTED
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.Helpers">
            <summary>
            Contains some helper functions, definitions, and PInvoke definitions
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Helpers.OATRUE">
            <summary>
            TRUE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Helpers.OAFALSE">
            <summary>
            FALSE
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.Helpers.AMGetErrorText(System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the error message for a given return code
            </summary>
            <param name="hr">The HRESULT return code to check</param>
            <param name="buf">The string buffer that accepts the output</param>
            <param name="max">The number of characters in the buffer</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IPin">
            <summary>
            DirectShow interface for dealing with any kind of pin
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.Connect(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Connects this pin to another pin
            </summary>
            <param name="pReceivePin">The other pin</param>
            <param name="pmt">The media type of this connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.ReceiveConnection(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Accepts a connection from another pin (only filters should use this method)
            </summary>
            <param name="pReceivePin">The other pim</param>
            <param name="pmt">The media type of this connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.Disconnect">
            <summary>
            Breaks the current pin connection
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.ConnectedTo(SnapStream.ViewScape.DirectShow.IPin@)">
            <summary>
            Retrieves the pin that this pin is connected to
            </summary>
            <param name="ppPin">The other pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.ConnectionMediaType(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Retrieves the media type of the current pin connection
            </summary>
            <param name="pmt">The media type of this connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.QueryPinInfo(SnapStream.ViewScape.DirectShow.PinInfo)">
            <summary>
            Retrieves information about the pin
            </summary>
            <param name="info">The structure that receives the pin information</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.QueryDirection(SnapStream.ViewScape.DirectShow.PinDirection@)">
            <summary>
            Retrieves the direction of the pin (input or output)
            </summary>
            <param name="pPinDir">The pin direction</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.QueryId(System.String@)">
            <summary>
            Retrieves an identifier for the pin
            </summary>
            <param name="Id">A string identifying this pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.QueryAccept(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Determines whether the pin accepts the specified media type
            </summary>
            <param name="pmt">The media type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.EnumMediaTypes(System.IntPtr)">
            <summary>
            Enumerates the pin's preferred/supported media types
            </summary>
            <param name="ppEnum">The IEnumMediaTypes object that contains the supported types</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.QueryInternalConnections(System.IntPtr,System.Int32@)">
            <summary>
            Retrieves the other external pins that are connected internally to this pin
            </summary>
            <param name="apPin">The array of pins</param>
            <param name="nPin">The number of pins returned</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.EndOfStream">
            <summary>
            Notifies the pin that no additional data is expected, until the graph is re-run.
            Note: this method should only be called by other filters
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.BeginFlush">
            <summary>
            Begins a flush operation.
            Note: this method should only be called by other filters
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.EndFlush">
            <summary>
            Ends a flush operation.
            Note: this method should only be called by other filters
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPin.NewSegment(System.Int64,System.Int64,System.Double)">
            <summary>
            Notifies the pin that subsequent media samples are grouped as a segment
            with a common start time, stop time, and rate
            Note: this method should only be called by other filters
            </summary>
            <param name="tStart">The start time of the segment</param>
            <param name="tStop">The stop time of the segment</param>
            <param name="dRate">Rate at which this segment should be processed, as a percentage of the original rate</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.PinInfo">
            <summary>
            Contains informatino about a pin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinInfo.pFilter">
            <summary>
            The filter that owns this pin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinInfo.dir">
            <summary>
            The direction of the pin (input or output)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinInfo.achName">
            <summary>
            The name of the pin
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IFilterGraph">
            <summary>
            Contains the basic methods for building a filter graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.AddFilter(SnapStream.ViewScape.DirectShow.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph
            </summary>
            <param name="pFilter">The filter to add</param>
            <param name="pName">The name of this filter in the graph</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.RemoveFilter(SnapStream.ViewScape.DirectShow.IBaseFilter)">
            <summary>
            Removes a filter from the graph
            </summary>
            <param name="pFilter">The filter to remove</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.EnumFilters(SnapStream.ViewScape.DirectShow.IEnumFilters@)">
            <summary>
            Retrieves a collection of the filters in this graph
            </summary>
            <param name="ppEnum">The enumeration of the filters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.FindFilterByName(System.String,SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Finds a filter in the graph with the given name
            </summary>
            <param name="pName">The name of the filter</param>
            <param name="ppFilter">The filter that matched the given name, or null</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.ConnectDirect(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Connects two pins without asking the filters
            </summary>
            <param name="ppinOut">The output pin</param>
            <param name="ppinIn">The input pin</param>
            <param name="pmt">The media type for this connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.Reconnect(SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Disconnects the pin and reconnects it.
            Note: this method should only be called by other filters
            </summary>
            <param name="ppin">The pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.Disconnect(SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Disconnects this pin
            </summary>
            <param name="ppin">The pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFilterGraph.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IPersist">
            <summary>
            COM Interface implemented by classes that can be stored persistently in the system
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPersist.GetClassID(System.Guid@)">
            <summary>
            Reports the Class ID of this instance
            </summary>
            <param name="pClassID">The Class ID of this instance</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaFilter">
            <summary>
            Controls the streaming state of the filter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.GetClassID(System.Guid@)">
            <summary>
            Reports the Class ID of this instance
            </summary>
            <param name="pClassID">The Class ID of this instance</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.Stop">
            <summary>
            Stops the filter
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.Pause">
            <summary>
            Pauses the filter
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.Run(System.Int64)">
            <summary>
            Runs the filter
            </summary>
            <param name="tStart">Reference time corresponding to stream time 0</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter
            </summary>
            <param name="dwMilliSecsTimeout">Time-out interval for this call (in ms)</param>
            <param name="filtState">The filter's state</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.SetSyncSource(SnapStream.ViewScape.DirectShow.IReferenceClock)">
            <summary>
            Sets the reference clock
            </summary>
            <param name="pClock">The clock's interface</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaFilter.GetSyncSource(SnapStream.ViewScape.DirectShow.IReferenceClock@)">
            <summary>
            Retrieves the reference clock
            </summary>
            <param name="pClock">The clock's interface</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IBaseFilter">
            <summary>
            Provides methods for controlling a filter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.GetClassID(System.Guid@)">
            <summary>
            Reports the Class ID of this instance
            </summary>
            <param name="pClassID">The Class ID of this instance</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.Stop">
            <summary>
            Stops the filter
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.Pause">
            <summary>
            Pauses the filter
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.Run(System.Int64)">
            <summary>
            Runs the filter
            </summary>
            <param name="tStart">Reference time corresponding to stream time 0</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.GetState(System.Int32,System.Int32@)">
            <summary>
            Retrieves the state of the filter
            </summary>
            <param name="dwMilliSecsTimeout">Time-out interval for this call (in ms)</param>
            <param name="filtState">The filter's state</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.SetSyncSource(SnapStream.ViewScape.DirectShow.IReferenceClock)">
            <summary>
            Sets the reference clock
            </summary>
            <param name="pClock">The clock's interface</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.GetSyncSource(SnapStream.ViewScape.DirectShow.IReferenceClock@)">
            <summary>
            Retrieves the reference clock
            </summary>
            <param name="pClock">The clock's interface</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.EnumPins(SnapStream.ViewScape.DirectShow.IEnumPins@)">
            <summary>
            Enumerates the pins on this filter
            </summary>
            <param name="ppEnum">The enumeration of the pins</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.FindPin(System.String,SnapStream.ViewScape.DirectShow.IPin@)">
            <summary>
            Retrieves the pin with the specified identifier
            </summary>
            <param name="Id">The identifier of the pin</param>
            <param name="ppPin">The pin that matched the identifier</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.QueryFilterInfo(SnapStream.ViewScape.DirectShow.FilterInfo)">
            <summary>
            Retrieves information about the filter
            </summary>
            <param name="pInfo">The information about the filter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.JoinFilterGraph(SnapStream.ViewScape.DirectShow.IFilterGraph,System.String)">
            <summary>
            Notifies the filter that it has joined or left the filter graph
            </summary>
            <param name="pGraph">The graph that it joined</param>
            <param name="pName">The filter's name in this graph</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IBaseFilter.QueryVendorInfo(System.String@)">
            <summary>
            Retrieves a string containing vendor information
            </summary>
            <param name="pVendorInfo">The vendor information string</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.FilterInfo">
            <summary>
            Contains information about a filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterInfo.achName">
            <summary>
            The name of the filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterInfo.pUnk">
            <summary>
            The graph that contains this filter, if any
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaSeeking">
            <summary>
            Contains the methods for seeking in and setting the playback rate of a stream
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetCapabilities(SnapStream.ViewScape.DirectShow.SeekingCapabilities@)">
            <summary>
            Retrieves all of the seeking capabilities for the stream
            </summary>
            <param name="pCapabilities">The seeking capabilities of the stream</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.CheckCapabilities(SnapStream.ViewScape.DirectShow.SeekingCapabilities@)">
            <summary>
            Queries whether a stream has the specified seeeking capabilities
            </summary>
            <param name="pCapabilities">The capabilities to check for</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.IsFormatSupported(System.Guid@)">
            <summary>
            Determines whether a specified time format is supported for seek operations
            </summary>
            <param name="pFormat">The time format to check</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.QueryPreferredFormat(System.Guid@)">
            <summary>
            Retrieves the preferred time format for seeking
            </summary>
            <param name="pFormat">The preferred time format</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetTimeFormat(System.Guid@)">
            <summary>
            Retrieves the time format that is currently being used for seek operations
            </summary>
            <param name="pFormat">The current time format</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.IsUsingTimeFormat(System.Guid@)">
            <summary>
            Determines whether seek operations are currently using a specified time format
            </summary>
            <param name="pFormat">The time format to check</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.SetTimeFormat(System.Guid@)">
            <summary>
            Sets the time format for subsequent seek operations
            </summary>
            <param name="pFormat">The new time format</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetDuration(System.Int64@)">
            <summary>
            Retrieves the duration of the stream
            </summary>
            <param name="pDuration">The duration (in units of the current time format) of the stream</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetStopPosition(System.Int64@)">
            <summary>
            Retrieves the time at which the playback will stop, relative to the duration of the stream
            </summary>
            <param name="pStop">The stop time (in units of the current time format)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetCurrentPosition(System.Int64@)">
            <summary>
            Retrieves the current position, relative to the total duration of the stream
            </summary>
            <param name="pCurrent">The current time stamp (in units of the current time format)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.ConvertTimeFormat(System.Int64@,System.Guid@,System.Int64,System.Guid@)">
            <summary>
            Converts from one time format to another
            </summary>
            <param name="pTarget">The converted time</param>
            <param name="pTargetFormat">The target time format</param>
            <param name="Source">The source time</param>
            <param name="pSourceFormat">The source time format</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.SetPositions(SnapStream.ViewScape.DirectShow.DsOptInt64,SnapStream.ViewScape.DirectShow.SeekingFlags,SnapStream.ViewScape.DirectShow.DsOptInt64,SnapStream.ViewScape.DirectShow.SeekingFlags)">
            <summary>
            Sets the current position and the stop position
            </summary>
            <param name="pCurrent">The current position</param>
            <param name="dwCurrentFlags">AM_SEEKING positioning flags</param>
            <param name="pStop">The stop position</param>
            <param name="dwStopFlags">AM_SEEKING positioning flags</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetPositions(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the current position and the stop position, relative to the total duration of the stream
            </summary>
            <param name="pCurrent">The current position</param>
            <param name="pStop">The stop position</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetAvailable(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the range of times in which seeking is efficient
            </summary>
            <param name="pEarliest">The earliest time for efficient seeking</param>
            <param name="pLatest">The latest time for efficient seeking</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.SetRate(System.Double)">
            <summary>
            Sets the playback rate
            </summary>
            <param name="dRate">The new playback rate (must NOT be zero)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetRate(System.Double@)">
            <summary>
            Retrieves the playback rate
            </summary>
            <param name="pdRate">The current playback rate</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSeeking.GetPreroll(System.Int64@)">
            <summary>
            Retrieves the amount of data that will be queued before the start position
            </summary>
            <param name="pllPreroll">The preroll time</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.SeekingCapabilities">
            <summary>
            Seeking capabilities flags (AM_SEEKING_SeekingCapabilities)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanSeekAbsolute">
            <summary>
            Seeking to an absolute position is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanSeekForwards">
            <summary>
            Seeking to a position greater than the current position is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanSeekBackwards">
            <summary>
            Seeking to a position less than the current position is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanGetCurrentPos">
            <summary>
            Retrieving the current position is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanGetStopPos">
            <summary>
            Retrieving the stop position is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanGetDuration">
            <summary>
            Retrieving the duration is enabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanPlayBackwards">
            <summary>
            Setting the playrate to a negative number is allowed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.CanDoSegments">
            <summary>
            Can seek through segments
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingCapabilities.Source">
            <summary>
            Doesn't pass thru used to count segment ends
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.SeekingFlags">
            <summary>
            Seeking positioning flags (AM_SEEKING_SeekingFlags)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.NoPositioning">
            <summary>
            No change
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.AbsolutePositioning">
            <summary>
            Position is supplied and is absolute
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.RelativePositioning">
            <summary>
            Position is supplied and is relative
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.IncrementalPositioning">
            <summary>
            (Stop) position relative to current, useful for seeking when paused (use +1)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.PositioningBitsMask">
            <summary>
            Useful mask
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.SeekToKeyFrame">
            <summary>
            Just seek to key frame (performance gain)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.ReturnTime">
            <summary>
            Plug the media time equivalents back into the supplied LONGLONGs
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.Segment">
            <summary>
            At end just do EC_ENDOFSEGMENT, don't do EndOfStream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.SeekingFlags.NoFlush">
            <summary>
            Don't flush
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.FilterState">
            <summary>
            The state of the filter graph (FILTER_STATE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterState.StateStopped">
            <summary>
            The graph is stopped
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterState.StatePaused">
            <summary>
            The graph is paused
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterState.StateRunning">
            <summary>
            The graph is running
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IReferenceClock">
            <summary>
            Provides the reference time for the filter graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IReferenceClock.GetTime(System.Int64@)">
            <summary>
            Retrieves the current reference time
            </summary>
            <param name="pTime">The current time, in ticks (100-ns units)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IReferenceClock.AdviseTime(System.Int64,System.Int64,System.IntPtr,System.Int32@)">
            <summary>
            Creates a one-shot advise request
            </summary>
            <param name="baseTime">The base reference time, in ticks (100-ns units)</param>
            <param name="streamTime">The stream offset time, in ticks (100-ns units)</param>
            <param name="hEvent">Handle to an event</param>
            <param name="pdwAdviseCookie">The identifier of the advise request</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IReferenceClock.AdvisePeriodic(System.Int64,System.Int64,System.IntPtr,System.Int32@)">
            <summary>
            Creates a periodic advise request
            </summary>
            <param name="startTime">The time of the first notification, in ticks (100-ns units)</param>
            <param name="periodTime">The time between notifications, in ticks (100-ns units)</param>
            <param name="hSemaphore">Handle to the semaphore</param>
            <param name="pdwAdviseCookie">The identifier of the advise request</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IReferenceClock.Unadvise(System.Int32)">
            <summary>
            Removes a pending advise request
            </summary>
            <param name="dwAdviseCookie">The identifier of the advise request</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IEnumFilters">
            <summary>
            Enumerates the filters in a filter graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumFilters.Next(System.Int32,SnapStream.ViewScape.DirectShow.IBaseFilter[],System.Int32@)">
            <summary>
            Retrieves the specified number of filters in the enumeration sequence
            </summary>
            <param name="cFilters">Number of filters to receive</param>
            <param name="ppFilters">The filters</param>
            <param name="pcFetched">The number of filters actually returned in ppFilters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumFilters.Skip(System.Int32)">
            <summary>
            Skips over a specified number of filters
            </summary>
            <param name="cFilters">Number of filters to skip</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumFilters.Reset">
            <summary>
            Resets the enumeration sequence to the beginning
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumFilters.Clone(SnapStream.ViewScape.DirectShow.IEnumFilters@)">
            <summary>
            NOT SUPPORTED: Makes a copy of the enumerator object
            </summary>
            <param name="ppEnum">The new enumeration</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IEnumPins">
            <summary>
            Enumerates the pins in a filter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumPins.Next(System.Int32,SnapStream.ViewScape.DirectShow.IPin[],System.Int32@)">
            <summary>
            Retrieves the specified number of pins in the enumeration sequence
            </summary>
            <param name="cPins">Number of pins to receive</param>
            <param name="ppPins">The pins</param>
            <param name="pcFetched">The number of pins actually returned in ppPins</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumPins.Skip(System.Int32)">
            <summary>
            Skips over a specified number of pins
            </summary>
            <param name="cPins">Number of pins to skip</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumPins.Reset">
            <summary>
            Resets the enumeration sequence to the beginning
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IEnumPins.Clone(SnapStream.ViewScape.DirectShow.IEnumPins@)">
            <summary>
            NOT SUPPORTED: Makes a copy of the enumerator object
            </summary>
            <param name="ppEnum">The new enumeration</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMMediaType">
            <summary>
            Describes the format of a media sample (AM_MEDIA_TYPE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.majorType">
            <summary>
            GUID that specifies the major type of the media sample
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.subType">
            <summary>
            GUID that specifies the subtype of the media sample
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.fixedSizeSamples">
            <summary>
            Specifies whether samples are of a fixed size
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.temporalCompression">
            <summary>
            Specifies whether samples are compressed using temporal (interframe) compression
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.sampleSize">
            <summary>
            Size of the sample, in bytes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.formatType">
            <summary>
            GUID that specifies the structure used for the format block
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.unkPtr">
            <summary>
            Not used
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.formatSize">
            <summary>
            Size of the format block, in bytes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMMediaType.formatPtr">
            <summary>
            The format block
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMLine21Decoder">
            <summary>
            Provides access to closed-captioned information and settings
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetDecoderLevel(SnapStream.ViewScape.DirectShow.AMLine21CCLevel@)">
            <summary>
            Retrieves the closed-captioned decoder level
            </summary>
            <param name="level">Always TC2 (TeleCaption II)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetCurrentService(SnapStream.ViewScape.DirectShow.AMLine21CCService@)">
            <summary>
            Retrieves the current closed captioning service
            </summary>
            <param name="service">The closed captioning service</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetCurrentService(SnapStream.ViewScape.DirectShow.AMLine21CCService)">
            <summary>
            Sets the closed captioning service
            </summary>
            <param name="service">The closed captioning service</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetServiceState(SnapStream.ViewScape.DirectShow.AMLine21CCState@)">
            <summary>
            Indicates whether closed captioning is on or off
            </summary>
            <param name="state">The closed captioning state</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetServiceState(SnapStream.ViewScape.DirectShow.AMLine21CCState)">
            <summary>
            Enables or disables closed captions
            </summary>
            <param name="state">The closed captioning state</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetOutputFormat">
            <summary>
            Retrieves the Line 21 Decoder filter's output format
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetOutputFormat">
            <summary>
            Sets the filter's output format
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetBackgroundColor(System.UInt32@)">
            <summary>
            Retrieves the background color used by the Line 21 Decoder filter for overlay
            </summary>
            <param name="pdwPhysColor">Pixel color value of the background</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetBackgroundColor(System.UInt32)">
            <summary>
            Sets the background color that the filter uses for overlay
            </summary>
            <param name="dwPhysColor">Pixel color value of the background</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetRedrawAlways(System.Boolean@)">
            <summary>
            Indicates whether the filter redraws the entire output bitmap for each sample
            </summary>
            <param name="lpbOption">
            TRUE = the filter always redraws the entire bitmap
            FALSE = the filter does not always redraw the entire bitmap
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetRedrawAlways(System.Boolean)">
            <summary>
            Specifies whether the filter redraws the entire output bitmap for each sample
            </summary>
            <param name="bOption">
            TRUE = the filter always redraws the entire bitmap
            FALSE = the filter does not always redraw the entire bitmap
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.GetDrawBackgroundMode(SnapStream.ViewScape.DirectShow.AMLine21DrawBGMode@)">
            <summary>
            Indicates whether the filter draws the captions on a transparent background or an opaque background
            </summary>
            <param name="lpMode">The background painting mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMLine21Decoder.SetDrawBackgroundMode(SnapStream.ViewScape.DirectShow.AMLine21DrawBGMode)">
            <summary>
            Specifies whether the filter draws the captions on a transparent background or an opaque background
            </summary>
            <param name="Mode">The background painting mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMLine21CCLevel">
            <summary>
            Indicates the closed caption decoder level (AM_LINE21_CCLEVEL)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCLevel.TC2">
            <summary>
            TeleCaption II
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMLine21CCState">
            <summary>
            Indicates the closed captioning state (AM_LINE21_CCSTATE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCState.Off">
            <summary>
            Closed captioning off
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCState.On">
            <summary>
            Closed captioning on
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMLine21CCService">
            <summary>
            Indicates the closed captioning service (AM_LINE21_CCSERVICE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.None">
            <summary>
            No current service
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.Caption1">
            <summary>
            CC1 (caption channel)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.Caption2">
            <summary>
            CC2 (caption channel)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.Text1">
            <summary>
            T1 (text channel)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.Text2">
            <summary>
            T2 (text channel)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.XDS">
            <summary>
            Extended Data Services (XDS or EDS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.DefChannel">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21CCService.Invalid">
            <summary>
            Invalid service
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMLine21DrawBGMode">
            <summary>
            Indicates the closed captioning text background mode (AM_LINE21_DRAWBGMODE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21DrawBGMode.Opaque">
            <summary>
            Opaque background
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMLine21DrawBGMode.Transparent">
            <summary>
            Transparent background
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IMediaSample">
            <summary>
            Sets and retrieves properties on media samples
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetPointer(System.IntPtr@)">
            <summary>
            NOT SUPPORTED: Retrieves a read/write pointer to this buffer's memory
            </summary>
            <param name="ppBuffer">Pointer to the buffer of raw data</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetSize">
            <summary>
            Retrieves the size of the buffer
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetTime(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the stream times at which this sample should begin and finish
            </summary>
            <param name="pTimeStart">The start time</param>
            <param name="pTimeEnd">The stop time</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetTime(SnapStream.ViewScape.DirectShow.DsOptInt64,SnapStream.ViewScape.DirectShow.DsOptInt64)">
            <summary>
            Sets the stream time when this sample should begin and finish
            </summary>
            <param name="pTimeStart">The start time</param>
            <param name="pTimeEnd">The stop time</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.IsSyncPoint">
            <summary>
            Determines if the beginning of this sample is a synchronization point
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetSyncPoint(System.Boolean)">
            <summary>
            Specifies whether the beginning of this sample is a synchronization point
            </summary>
            <param name="bIsSyncPoint">Whether this is a synchronization point</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.IsPreroll">
            <summary>
            Determines if this sample is a preroll sample
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetPreroll(System.Boolean)">
            <summary>
            Specifies whether this sample is a preroll sample
            </summary>
            <param name="bIsPreroll">Whether this is a preroll sample</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetActualDataLength">
            <summary>
            Retrieves the length of the valid data in the buffer
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetActualDataLength(System.Int32)">
            <summary>
            Sets the length of the valid data in the buffer
            </summary>
            <param name="len">Length of the raw data in the media sample, in bytes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetMediaType(SnapStream.ViewScape.DirectShow.AMMediaType@)">
            <summary>
            Retrieves the media type, if the media type differs from the previous sample
            </summary>
            <param name="ppMediaType">The media type of this sample</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetMediaType(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Sets the media type for the sample
            </summary>
            <param name="pMediaType">The media type of this sample</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.IsDiscontinuity">
            <summary>
            Determines if this sample represents a break in the data stream
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetDiscontinuity(System.Boolean)">
            <summary>
            Specifies whether this sample represents a break in the data stream
            </summary>
            <param name="bDiscontinuity">Whether this sample is a discontinuity</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.GetMediaTime(System.Int64@,System.Int64@)">
            <summary>
            Retrieves the media times for this sample
            </summary>
            <param name="pTimeStart">The start time</param>
            <param name="pTimeEnd">The stop time</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IMediaSample.SetMediaTime(SnapStream.ViewScape.DirectShow.DsOptInt64,SnapStream.ViewScape.DirectShow.DsOptInt64)">
            <summary>
            Sets the media times for this sample
            </summary>
            <param name="pTimeStart">The start time</param>
            <param name="pTimeEnd">The stop time</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsDev">
            <summary>
            Contains directshow device-related functionality
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsDev.GetDevicesOfCat(System.Guid,System.Collections.ArrayList@)">
            <summary>
            Retrieves all of the devices of the particular category
            </summary>
            <param name="cat">The category to look for</param>
            <param name="devs">The returned devices</param>
            <returns>True IFF there were any devices returned</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsDev.GetFriendlyName(System.Runtime.InteropServices.UCOMIMoniker)">
            <summary>
            Retrieves the friendly name for the given moniker
            </summary>
            <param name="mon">The moniker</param>
            <returns>The friendly name</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsDevice">
            <summary>
            A DirectShow Device
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsDevice.Name">
            <summary>
            The name of this device
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsDevice.Mon">
            <summary>
            The moniker of this device
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsDevice.Dispose">
            <summary>
            Releases resources used by this object
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.ICreateDevEnum">
            <summary>
            Creates an enumerator for devices within a particular category
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICreateDevEnum.CreateClassEnumerator(System.Guid@,System.Runtime.InteropServices.UCOMIEnumMoniker@,System.Int32)">
            <summary>
            Creates a class enumerator for a specified device category
            </summary>
            <param name="pType">The Class ID of the device category</param>
            <param name="ppEnumMoniker">The devices returned</param>
            <param name="dwFlags">Specifies which types of filters to search</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IPropertyBag">
            <summary>
            Provides a way for objects to persist properties
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPropertyBag.Read(System.String,System.Object@,System.IntPtr)">
            <summary>
            Retrieves the value of the named property
            </summary>
            <param name="pszPropName">The property name</param>
            <param name="pVar">The property value</param>
            <param name="pErrorLog">The error log (can be null)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IPropertyBag.Write(System.String,System.Object@)">
            <summary>
            Sets the value of the named property
            </summary>
            <param name="pszPropName">The property name</param>
            <param name="pVar">The property value</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdGraphFlags">
            <summary>
            Specifies the type of decoder to use in the DVD filter graph (AM_DVD_GRAPH_FLAGS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.HwDecPrefer">
            <summary>
            AM_DVD_HWDEC_PREFER
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.HwDecOnly">
            <summary>
            AM_DVD_HWDEC_ONLY
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.SwDecPrefer">
            <summary>
            AM_DVD_SWDEC_PREFER
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.SwDecOnly">
            <summary>
            AM_DVD_SWDEC_ONLY
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdGraphFlags.NoVpe">
            <summary>
            AM_DVD_NOVPE
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdStreamFlags">
            <summary>
            Describes a DVD stream type (AM_DVD_STREAM_FLAGS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdStreamFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdStreamFlags.Video">
            <summary>
            AM_DVD_STREAM_VIDEO
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdStreamFlags.Audio">
            <summary>
            AM_DVD_STREAM_AUDIO
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdStreamFlags.SubPic">
            <summary>
            AM_DVD_STREAM_SUBPIC
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdRenderStatus">
            <summary>
            Indicates the status of DVD-Video playback (AM_DVD_RENDERSTATUS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.vpeStatus">
            <summary>
            Overlay/VPE error code (zero == success)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.volInvalid">
            <summary>
            True if the specified DVD volume to be played does not exist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.volUnknown">
            <summary>
            True if no DVD volume is specified or if it isn't found
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.noLine21In">
            <summary>
            True if the video decoder doesn't produce line 21 (CC) data
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.noLine21Out">
            <summary>
            True if the video decoder can't be shown as closed-captioning on video
            due to a graph building problem
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.numStreams">
            <summary>
            Number of DVD streams to render
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.numStreamsFailed">
            <summary>
            Number of streams that failed to render
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRenderStatus.failedStreams">
            <summary>
            Indicates which streams failed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IDvdGraphBuilder">
            <summary>
            Provides a simple way to build DVD graphs
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdGraphBuilder.GetFiltergraph(SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Retrieves the IGraphBuilder interface for the filter graph used
            by the DVD-Video graph builder object
            </summary>
            <param name="ppGB"></param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdGraphBuilder.GetDvdInterface(System.Guid@,System.Object@)">
            <summary>
            Retrieves specific interface pointers in the DVD-Video playback graph
            to make DVD-Video playback development easier
            </summary>
            <param name="riid"></param>
            <param name="ppvIF"></param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdGraphBuilder.RenderDvdVideoVolume(System.String,SnapStream.ViewScape.DirectShow.DvdGraphFlags,SnapStream.ViewScape.DirectShow.DvdRenderStatus@)">
            <summary>
            Completes building a filter graph according to user specifications
            for playing a DVD-Video volume
            </summary>
            <param name="lpcwszPathName">The path for the DVD-Video volume to play (can be null)</param>
            <param name="dwFlags">Indicates the type of decoder to use in the graph</param>
            <param name="pStatus">The status of the operation</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdCmdFlags">
            <summary>
            Controls how the DVD Navigator handles command synchronization (DVD_CMD_FLAGS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.None">
            <summary>
            DVD_CMD_FLAG_None
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.Flush">
            <summary>
            DVD_CMD_FLAG_Flush
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.SendEvt">
            <summary>
            DVD_CMD_FLAG_SendEvents
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.Block">
            <summary>
            DVD_CMD_FLAG_Block
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.StartWRendered">
            <summary>
            DVD_CMD_FLAG_StartWhenRendered
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCmdFlags.EndARendered">
            <summary>
            DVD_CMD_FLAG_EndAfterRendered
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdTimeCode">
            <summary>
            Encapsulates the hours, minutes, seconds, and fames in the DVD timecode (DVD_HMSF_TIMECODE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTimeCode.bHours">
            <summary>
            Mours
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTimeCode.bMinutes">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTimeCode.bSeconds">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTimeCode.bFrames">
            <summary>
            Frames
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdMenuID">
            <summary>
            Specifies the DVD menu in the call to ShowMenu (DVD_MENU_ID)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Title">
            <summary>
            DVD_MENU_Title
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Root">
            <summary>
            DVD_MENU_Root
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Subpicture">
            <summary>
            DVD_MENU_Subpicture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Audio">
            <summary>
            DVD_MENU_Audio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Angle">
            <summary>
            DVD_MENU_Angle
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuID.Chapter">
            <summary>
            DVD_MENU_Chapter
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdRelButton">
            <summary>
            Identifies the four directional buttons used for DVD navigation (DVD_RELATIVE_BUTTON)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRelButton.Upper">
            <summary>
            DVD_Relative_Upper
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRelButton.Lower">
            <summary>
            DVD_Relative_Lower
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRelButton.Left">
            <summary>
            DVD_Relative_Left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdRelButton.Right">
            <summary>
            DVD_Relative_Right
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdOptionFlag">
            <summary>
            Controls the behavior of the DVD Navigator (DVD_OPTION_FLAG)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdOptionFlag.ResetOnStop">
            <summary>
            DVD_ResetOnStop
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdOptionFlag.NotifyParentalLevelChange">
            <summary>
            DVD_NotifyParentalLevelChange
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdOptionFlag.HmsfTimeCodeEvt">
            <summary>
            DVD_HMSF_TimeCodeEvents
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdAudioLangExt">
            <summary>
            Indicates whether an audio stream contains audio language extensions (DVD_AUDIO_LANG_EXT)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioLangExt.NotSpecified">
            <summary>
            DVD_AUD_EXT_NotSpecified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioLangExt.Captions">
            <summary>
            DVD_AUD_EXT_Captions
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioLangExt.VisuallyImpaired">
            <summary>
            DVD_AUD_EXT_VisuallyImpaired
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioLangExt.DirectorComments1">
            <summary>
            DVD_AUD_EXT_DirectorComments1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioLangExt.DirectorComments2">
            <summary>
            DVD_AUD_EXT_DirectorComments2
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt">
            <summary>
            Defines the possible language extensions in a specified subpicture stream (DVD_SUBPICTURE_LANG_EXT)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.NotSpecified">
            <summary>
            DVD_SP_EXT_NotSpecified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.CaptionNormal">
            <summary>
            DVD_SP_EXT_Caption_Normal
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.CaptionBig">
            <summary>
            DVD_SP_EXT_Caption_Big
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.CaptionChildren">
            <summary>
            DVD_SP_EXT_Caption_Children
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.ClosedNormal">
            <summary>
            DVD_SP_EXT_CC_Normal
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.ClosedBig">
            <summary>
            DVD_SP_EXT_CC_Big
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.ClosedChildren">
            <summary>
            DVD_SP_EXT_CC_Children
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.Forced">
            <summary>
            DVD_SP_EXT_Forced
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.DirectorCmtNormal">
            <summary>
            DVD_SP_EXT_DirectorComments_Normal
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.DirectorCmtBig">
            <summary>
            DVD_SP_EXT_DirectorComments_Big
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicLangExt.DirectorCmtChildren">
            <summary>
            DVD_SP_EXT_DirectorComments_Children
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IDvdControl2">
            <summary>
            Enables applications to navigate and play DVD-Video
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayTitle(System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the beginning of the specified title
            </summary>
            <param name="ulTitle">The title number (1 to 99)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayChapterInTitle(System.Int32,System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the beginning of the specified chapter of the specified title
            </summary>
            <param name="ulTitle">The title number (1 to 99)</param>
            <param name="ulChapter">The chapter number (1 to 999)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayAtTimeInTitle(System.Int32,SnapStream.ViewScape.DirectShow.DvdTimeCode@,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the specified time in the specified title
            </summary>
            <param name="ulTitle">The title number (1 to 99)</param>
            <param name="pStartTime">The time code where playback should begin</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.Stop">
            <summary>
            Stops playback of a title or menu by moving the DVD Navigator into the DVD Stop domain
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.ReturnFromSubmenu(SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Returns the display from a submenu to its parent menu
            </summary>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayAtTime(SnapStream.ViewScape.DirectShow.DvdTimeCode@,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the specified time in the current title
            </summary>
            <param name="pTime">The time code where playback should begin</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayChapter(System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the specified chapter in the current title
            </summary>
            <param name="ulChapter">The chapter number (1 to 999)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayPrevChapter(SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the beginning of the previous chapter in the current title
            </summary>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.ReplayChapter(SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the beginning of the current chapter
            </summary>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayNextChapter(SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback from the beginning of the next chapter in the current title
            </summary>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayForwards(System.Double,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Plays forward at the specified speed from the current location
            </summary>
            <param name="dSpeed">The playback speed as a multiplier of the authored speed</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayBackwards(System.Double,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Plays backward at the specified speed from the current location
            </summary>
            <param name="dSpeed">The playback speed as a multiplier of the authored speed</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.ShowMenu(SnapStream.ViewScape.DirectShow.DvdMenuID,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Displays the specified menu, if available
            </summary>
            <param name="MenuID">The menu to display</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.Resume(SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Leaves a menu and resumes playback
            </summary>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectRelativeButton(SnapStream.ViewScape.DirectShow.DvdRelButton)">
            <summary>
            Selects the specified relative button (upper, lower, right, left)
            </summary>
            <param name="buttonDir">The button to select</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.ActivateButton">
            <summary>
            Activates the selected menu button
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectButton(System.Int32)">
            <summary>
            Selects the specified menu button
            </summary>
            <param name="ulButton">The desired menu button (1 to 36)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectAndActivateButton(System.Int32)">
            <summary>
            Selects and activates the specified menu button
            </summary>
            <param name="ulButton">The desired menu button (1 to 36)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.StillOff">
            <summary>
            Resumes playback, canceling still mode
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.Pause(System.Boolean)">
            <summary>
            Pauses or resumes playback at the current location
            </summary>
            <param name="bState">True means to pause</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectAudioStream(System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Selects the audio stream to play
            </summary>
            <param name="ulAudio">The audio track to use (0 to 7)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectSubpictureStream(System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Sets the subpicture stream to display
            </summary>
            <param name="ulSubPicture">The subpicture stream (0 to 31, or 63)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SetSubpictureState(System.Boolean,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Turns the subpicture display on or off
            </summary>
            <param name="bState">True turns on subpictures, False turns them off</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectAngle(System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Sets the new angle when the DVD Navigator is in an angle block
            </summary>
            <param name="ulAngle">The new angle (1 to 9)</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectParentalLevel(System.Int32)">
            <summary>
            Sets the parental access level for the logged-on user
            </summary>
            <param name="ulParentalLevel">
            The new parental level (1 to 8)
            1 = G
            3 = PG
            4 = PG-13
            6 = R
            7 = NC-17
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectParentalCountry(System.Byte[])">
            <summary>
            Sets the country/region for interpreting parental access levels
            and setting default languages
            </summary>
            <param name="bCountry">The current country/region according to ISO-3166</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectKaraokeAudioPresentationMode(System.Int32)">
            <summary>
            Sends karaoke auxiliary channels to the left or right speaker
            </summary>
            <param name="ulMode">Indicates how to downmix the 5 karaoke channels to channels 0 and 1</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectVideoModePreference(System.Int32)">
            <summary>
            Sets the video mode display for subsequent playback—wide screen, letterbox, or pan-scan
            </summary>
            <param name="ulPreferredDisplayMode">The new display mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SetDVDDirectory(System.String)">
            <summary>
            Sets the DVD drive that the DVD Navigator will read from
            </summary>
            <param name="pszwPath">Path of the DVD-Video directory</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.ActivateAtPosition(SnapStream.ViewScape.DirectShow.DsPOINT)">
            <summary>
            Activates the menu button under the mouse pointer position
            </summary>
            <param name="point">Point in the client window where the mouse is located</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectAtPosition(SnapStream.ViewScape.DirectShow.DsPOINT)">
            <summary>
            Highlights the menu button under the mouse pointer position
            </summary>
            <param name="point">Point in the client window where the mouse is located</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayChaptersAutoStop(System.Int32,System.Int32,System.Int32,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Plays the number of chapters specified, starting at the specified chapter
            within the specified title
            </summary>
            <param name="ulTitle">The title number (1 to 99)</param>
            <param name="ulChapter">The chapter number to start at (1 to 999)</param>
            <param name="ulChaptersToPlay">The number of chapters to play</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.AcceptParentalLevelChange(System.Boolean)">
            <summary>
            Accepts or rejects a request from the DVD Navigator to play content
            at a higher parental management level
            </summary>
            <param name="bAccept">True accepts the change and plays the higher-level content, False rejects the change</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SetOption(SnapStream.ViewScape.DirectShow.DvdOptionFlag,System.Boolean)">
            <summary>
            Enables or disables a DVD Navigator internal behavioral flag
            </summary>
            <param name="flag">Specifies which behavior to modify</param>
            <param name="fState">Whether this behavior is enabled or disabled</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SetState(SnapStream.ViewScape.DirectShow.IDvdState,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Saves the current disc position and state of the DVD Navigator
            for retrieval at a later time
            </summary>
            <param name="pState">The state information</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.PlayPeriodInTitleAutoStop(System.Int32,SnapStream.ViewScape.DirectShow.DvdTimeCode@,SnapStream.ViewScape.DirectShow.DvdTimeCode@,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Starts playback in the specified title
            from the specified start time until the specified end time
            </summary>
            <param name="ulTitle">The title number (1 to 99</param>
            <param name="pStartTime">The time code where playback should begin</param>
            <param name="pEndTime">The time code where playback should end</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SetGPRM(System.Int32,System.Int16,SnapStream.ViewScape.DirectShow.DvdCmdFlags,SnapStream.ViewScape.DirectShow.OptIDvdCmd)">
            <summary>
            Sets a general parameter register value
            </summary>
            <param name="ulIndex">Register index (0 to 15)</param>
            <param name="wValue">The 16-bit value to set</param>
            <param name="dwFlags">One or more command flags specifying command synchronization</param>
            <param name="ppCmd">Command object that can be used to synchronize DVD commands</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectDefaultMenuLanguage(System.Int32)">
            <summary>
            Sets the default language for all menus and menu buttons
            </summary>
            <param name="Language">LCID of the desired language</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectDefaultAudioLanguage(System.Int32,SnapStream.ViewScape.DirectShow.DvdAudioLangExt)">
            <summary>
            Sets the default audio language
            </summary>
            <param name="Language">LCID of the desired language</param>
            <param name="audioExtension">The default audio language extension</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdControl2.SelectDefaultSubpictureLanguage(System.Int32,SnapStream.ViewScape.DirectShow.DvdSubPicLangExt)">
            <summary>
            Sets the default language for subpicture text
            </summary>
            <param name="Language">LCID of the desired language</param>
            <param name="subpictureExtension">The default subpicture extension</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IDvdCmd">
            <summary>
            Implemented on command synchronization objects
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdCmd.WaitForStart">
            <summary>
            Blocks the DVD Navigator until the command associated
            with this object begins
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdCmd.WaitForEnd">
            <summary>
            Blocks the DVD Navigator until the command associated
            with this object completes or is canceled
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IDvdState">
            <summary>
            Implemented by a DvdState object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdState.GetDiscID(System.Int64@)">
            <summary>
            Retrieves the unique identifier (ID) of the disc from which the bookmark was made
            </summary>
            <param name="pullUniqueID">The ID</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdState.GetParentalLevel(System.Int32@)">
            <summary>
            Retrieves the user's parental level as saved in the DvdState object
            </summary>
            <param name="pulParentalLevel">The parental level</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdDomain">
            <summary>
            Defines the DVD domains (DVD_DOMAIN)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDomain.FirstPlay">
            <summary>
            DVD_DOMAIN_FirstPlay
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDomain.VideoManagerMenu">
            <summary>
            DVD_DOMAIN_VideoManagerMenu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDomain.VideoTitleSetMenu">
            <summary>
            DVD_DOMAIN_VideoTitleSetMenu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDomain.Title">
            <summary>
            DVD_DOMAIN_Title
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDomain.Stop">
            <summary>
            DVD_DOMAIN_Stop
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdVideoCompress">
            <summary>
            Defines the possible DVD video compression types (DVD_VIDEO_COMPRESSION)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoCompress.Other">
            <summary>
            DVD_VideoCompression_Other
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoCompress.Mpeg1">
            <summary>
            DVD_VideoCompression_MPEG1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoCompress.Mpeg2">
            <summary>
            DVD_VideoCompression_MPEG2
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdPlayLocation">
            <summary>
            Indicates the playback location (DVD_PLAYBACK_LOCATION2)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdPlayLocation.TitleNum">
            <summary>
            The title number for the whole disc
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdPlayLocation.ChapterNum">
            <summary>
            Part-of-title number with title (0xffffffff if not a simple linear movie)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdPlayLocation.timeCode">
            <summary>
            The current playback time (0xffffffff if not a simple linear movie)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdPlayLocation.TimeCodeFlags">
            <summary>
            A union of the DVD_TIMECODE_EVENT_FLAGS
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdMenuAttr">
            <summary>
            Contains information about a DVD menu (DVD_MenuAttributes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.compatibleRegion">
            <summary>
            An array of flags indicating with which DVD regions the disc's
            authored region is compatible
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.videoAt">
            <summary>
            DVD_VideoAttributes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.audioPresent">
            <summary>
            Whether the menu has an audio stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.audioAt">
            <summary>
            DVD_AudioAttributes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.subPicPresent">
            <summary>
            Whether the menu has a subpicture stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdMenuAttr.subPicAt">
            <summary>
            DVD_SubpictureAttributes
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdVideoAttr">
            <summary>
            Describes the attributes of the video stream for the current title or menu (DVD_VideoAttributes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.panscanPermitted">
            <summary>
            True means the picture can be shown as pan-scan if the display aspect ratio is 4x3
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.letterboxPermitted">
            <summary>
            True means the picture can be shown as letterbox if the display aspect ratio is 4x3
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.aspectX">
            <summary>
            The video stream's X aspect (4 or 16)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.aspectY">
            <summary>
            The video stream's Y aspect (3 or 9)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.frameRate">
            <summary>
            The frame rate in hertz (Hz), either 50 or 60
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.frameHeight">
            <summary>
            The frame height in lines (525 for 60Hz, 625 for 50Hz)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.compression">
            <summary>
            Indicates the MPEG compression type used on the disc
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.line21Field1InGOP">
            <summary>
            True means there is user data in line21, field 1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.line21Field2InGOP">
            <summary>
            True means there is user data in line21, field 2
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.sourceResolutionX">
            <summary>
            The x-axis source resolution (352, 704, or 720)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.sourceResolutionY">
            <summary>
            The y-axis source resolution (240, 480, 288, or 576)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.isSourceLetterboxed">
            <summary>
            True means the source video is in letterbox format
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdVideoAttr.isFilmMode">
            <summary>
            For 625/50Hz systems, True means "film mode" and False means "camera mode"
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdAudioAppMode">
            <summary>
            Indicates the current audio mode (DVD_AUDIO_APPMODE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAppMode.None">
            <summary>
            DVD_AudioMode_None
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAppMode.Karaoke">
            <summary>
            DVD_AudioMode_Karaoke
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAppMode.Surround">
            <summary>
            DVD_AudioMode_Surround
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAppMode.Other">
            <summary>
            DVD_AudioMode_Other
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdAudioFormat">
            <summary>
            Indicates the audio format of the DVD (DVD_AUDIO_FORMAT)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Ac3">
            <summary>
            DVD_AudioFormat_AC3
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Mpeg1">
            <summary>
            DVD_AudioFormat_MPEG1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Mpeg1Drc">
            <summary>
            DVD_AudioFormat_MPEG1_DRC
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Mpeg2">
            <summary>
            DVD_AudioFormat_MPEG2
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Mpeg2Drc">
            <summary>
            DVD_AudioFormat_MPEG2_DRC
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Lpcm">
            <summary>
            DVD_AudioFormat_LPCM
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Dts">
            <summary>
            DVD_AudioFormat_DTS
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Sdds">
            <summary>
            DVD_AudioFormat_SDDS
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioFormat.Other">
            <summary>
            DVD_AudioFormat_Other
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdAudioAttr">
            <summary>
            The audio attributes of the disc (DVD_AudioAttributes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.appMode">
            <summary>
            Indicates the current audio mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.audioFormat">
            <summary>
            Describes the format (encoding mode) of the audio stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.language">
            <summary>
            LCID value indicating the language of the audio stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.languageExtension">
            <summary>
            Any other language information available on the disc
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.hasMultichannelInfo">
            <summary>
            Indicates whether multichannel attributes are present
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.frequency">
            <summary>
            the frequency in hertz (48kHz or 96kHz) of the audio stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.quantization">
            <summary>
            The resolution of the audio stream (16, 20, 24 bits or other) zero indicates unknown
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.numberOfChannels">
            <summary>
            The number of channels (5.1 Dolby AC-3 has 6 channels)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.res1">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioAttr.res2">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdSubPicType">
            <summary>
            Determines what kind of content the subpicture stream contains (DVD_SUBPICTURE_TYPE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicType.NotSpecified">
            <summary>
            DVD_SPType_NotSpecified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicType.Language">
            <summary>
            DVD_SPType_Language
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicType.Other">
            <summary>
            DVD_SPType_Other
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdSubPicCoding">
            <summary>
            Indicates what kind of content the subpicture stream contains (DVD_SUBPICTURE_CODING)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicCoding.RunLength">
            <summary>
            DVD_SPCoding_RunLength
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicCoding.Extended">
            <summary>
            DVD_SPCoding_Extended
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicCoding.Other">
            <summary>
            DVD_SPCoding_Other
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdSubPicAttr">
            <summary>
            Contains information about the DVD subpicture (DVD_SubpictureAttributes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicAttr.type">
            <summary>
            Indicates whether the subpicture contains language-related content
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicAttr.coding">
            <summary>
            Indicates how the subpicture graphics stream is encoded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicAttr.language">
            <summary>
            LCID of the subpicture language (if the type is DvdSubPicType.Language)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdSubPicAttr.languageExt">
            <summary>
            The subpicture language extension (if the type is DvdSubPicType.Language)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdTitleAppMode">
            <summary>
            Indicates whether a DVD title is a karaoke title (DVD_TITLE_APPMODE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAppMode.NotSpecified">
            <summary>
            DVD_AppMode_Not_Specified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAppMode.Karaoke">
            <summary>
            DVD_AppMode_Karaoke
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAppMode.Other">
            <summary>
            DVD_AppMode_Other
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdTitleAttr">
            <summary>
            NOT SUPPORTED: Contains information about a DVD title (DVD_TitleAttributes)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAttr.appMode">
            <summary>
            Indicates whether the Navigator is in "karaoke" mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAttr.videoAt">
            <summary>
            Contains information about the "main" video of the current menu or title
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdTitleAttr.numberOfAudioStreams">
            <summary>
            The number of audio streams available in this title
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdDiscSide">
            <summary>
            Indicates the sides of a DVD disc (DVD_DISC_SIDE)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDiscSide.A">
            <summary>
            DVD_SIDE_A
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDiscSide.B">
            <summary>
            DVD_SIDE_B
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdCharSet">
            <summary>
            Defines which character set a specified string is encoded with (DVD_TextCharSet)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCharSet.Unicode">
            <summary>
            DVD_CharSet_Unicode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCharSet.Iso646">
            <summary>
            DVD_CharSet_ISO646
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCharSet.Jis">
            <summary>
            DVD_CharSet_JIS_Roman_Kanji
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCharSet.Iso8859">
            <summary>
            DVD_CharSet_ISO8859_1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdCharSet.SiftJis">
            <summary>
            DVD_CharSet_ShiftJIS_Kanji_Roman_Katakana
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdAudioCaps">
            <summary>
            The audio capabilities of a decoder (DVD_AUDIO_CAPS_???)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioCaps.Ac3">
            <summary>
            DVD_AUDIO_CAPS_AC3
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioCaps.Mpeg2">
            <summary>
            DVD_AUDIO_CAPS_MPEG2
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioCaps.Lpcm">
            <summary>
            DVD_AUDIO_CAPS_LPCM
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioCaps.Dts">
            <summary>
            DVD_AUDIO_CAPS_DTS
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdAudioCaps.Sdds">
            <summary>
            DVD_AUDIO_CAPS_SDDS
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DvdDecoderCaps">
            <summary>
            Indicates the capabilities of a DVD decoder (DVD_DECODER_CAPS)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.size">
            <summary>
            Size of this structure
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.audioCaps">
            <summary>
            The audio formats supported
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.fwdMaxRateVideo">
            <summary>
            The maximum video data rate in the forward direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.fwdMaxRateAudio">
            <summary>
            The maximum audio data rate in the forward direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.fwdMaxRateSP">
            <summary>
            The maximum subpicture data rate in the forward direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.bwdMaxRateVideo">
            <summary>
            The maximum video data rate in the reverse direction
            (0 if the decoder does not support the smooth reverse mechanism)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.bwdMaxRateAudio">
            <summary>
            The maximum audio data rate in the reverse direction
            (0 if the decoder does not support the smooth reverse mechanism)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.bwdMaxRateSP">
            <summary>
            The maximum subpicture data rate in the reverse direction
            (0 if the decoder does not support the smooth reverse mechanism)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.res1">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.res2">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.res3">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DvdDecoderCaps.res4">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IDvdInfo2">
            <summary>
            Provides methods to query for various attributes of the disc of the DVD Navigator's state
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentDomain(SnapStream.ViewScape.DirectShow.DvdDomain@)">
            <summary>
            Retrieves the DVD domain in which the DVD Navigator is currently located
            </summary>
            <param name="pDomain">The current domain</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentLocation(SnapStream.ViewScape.DirectShow.DvdPlayLocation@)">
            <summary>
            Retrieves the current playback location
            </summary>
            <param name="pLocation">The playback location information</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetTotalTitleTime(SnapStream.ViewScape.DirectShow.DvdTimeCode@,System.Int32@)">
            <summary>
            Retrieves the total playback time for the current title
            </summary>
            <param name="pTotalTime">The total time</param>
            <param name="ulTimeCodeFlags">The frame-rate at which the disc was authored to play</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentButton(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the number of available buttons
            and the number of the currently selected button
            </summary>
            <param name="pulButtonsAvailable">The number of buttons available</param>
            <param name="pulCurrentButton">The current button (1 to 36)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentAngle(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the number of available angles in the current angle block
            and the currently selected angle number
            </summary>
            <param name="pulAnglesAvailable">The number of angles available (1 to 9)</param>
            <param name="pulCurrentAngle">The current angle number</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentAudio(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the number of available audio streams
            and the number of the currently selected audio stream
            </summary>
            <param name="pulStreamsAvailable">The number of available audio streams</param>
            <param name="pulCurrentStream">The current audio stream</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentSubpicture(System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Retrieves the number of available subpicture streams in the current title,
            the currently selected subpicture stream number,
            and the state of the subpicture
            </summary>
            <param name="pulStreamsAvailable">The number of available subpicture streams</param>
            <param name="pulCurrentStream">The current subpicture stream</param>
            <param name="pbIsDisabled">Indicates whether subpicture display is disabled (True == disabled)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentUOPS(System.Int32@)">
            <summary>
            Retrieves a set of flags indicating which navigation commands,
            if any, the content authors have explicitly disabled
            for the current disc location
            </summary>
            <param name="pulUOPs">Bitwise OR of the VALID_UOP_FLAG values</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetAllSPRMs(System.IntPtr@)">
            <summary>
            Retrieves the current contents of all system parameter registers (SPRMs)
            </summary>
            <param name="pRegisterArray">An array of SPRMs</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetAllGPRMs(System.IntPtr@)">
            <summary>
            Retrieves the current contents of all general parameter registers (GPRMs)
            </summary>
            <param name="pRegisterArray">An array of GPRMs</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetAudioLanguage(System.Int32,System.Int32@)">
            <summary>
            Retrieves the language of the specified audio stream within the current title
            </summary>
            <param name="ulStream">The audio stream number for which the language is being retrieved</param>
            <param name="pLanguage">The LCID of the specified audio stream</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetSubpictureLanguage(System.Int32,System.Int32@)">
            <summary>
            Retrieves the language of the specified subpicture stream within the current title
            </summary>
            <param name="ulStream">The subpicture stream number for which the language is being retrieved</param>
            <param name="pLanguage">The LCID of the specified subpicture stream</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetTitleAttributes(System.Int32,SnapStream.ViewScape.DirectShow.DvdMenuAttr@,System.IntPtr)">
            <summary>
            Retrieves attributes of all video, audio,
            and subpicture streams for the specified title and its menus
            </summary>
            <param name="ulTitle">The requested title number (1 to 99, 0xffffffff for the current title)</param>
            <param name="pMenu">The menu attributes for the title</param>
            <param name="pTitle">NOT SUPPORTED: The title attributes for the title</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetVMGAttributes(SnapStream.ViewScape.DirectShow.DvdMenuAttr@)">
            <summary>
            Retrieves attributes of all video, audio,
            and subpicture streams for the video manager menu
            </summary>
            <param name="pATR">The menu attributes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCurrentVideoAttributes(SnapStream.ViewScape.DirectShow.DvdVideoAttr@)">
            <summary>
            Retrieves the video attributes of the current title or menu
            </summary>
            <param name="pATR">The video attributes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetAudioAttributes(System.Int32,SnapStream.ViewScape.DirectShow.DvdAudioAttr@)">
            <summary>
            Retrieves the attributes of the specified audio stream in the current title or menu
            </summary>
            <param name="ulStream">The audio stream to snatch the attributes of</param>
            <param name="pATR">The audio attributes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetKaraokeAttributes(System.Int32,System.IntPtr)">
            <summary>
            Retrieves the karaoke attributes of the specified audio stream
            in the current title or menu
            </summary>
            <param name="ulStream">The karaoke audio stream to snatch the attributes of</param>
            <param name="pATR">The karaoke attributes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetSubpictureAttributes(System.Int32,SnapStream.ViewScape.DirectShow.DvdSubPicAttr@)">
            <summary>
            Retrieves the attributes of the specified subpicture stream
            in the current title or menu
            </summary>
            <param name="ulStream">The subpicture stream to query</param>
            <param name="pATR">The subpicture attributes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDVolumeInfo(System.Int32@,System.Int32@,SnapStream.ViewScape.DirectShow.DvdDiscSide@,System.Int32@)">
            <summary>
            Retrieves the current DVD volume information
            </summary>
            <param name="pulNumOfVolumes">The number of volumes in the volume set</param>
            <param name="pulVolume">The volume number for this root directory</param>
            <param name="pSide">The current disc side</param>
            <param name="pulNumOfTitles">The number of titles available in this volume</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDTextNumberOfLanguages(System.Int32@)">
            <summary>
            Retrieves the number of text languages for the current DVD or disc side
            </summary>
            <param name="pulNumOfLangs">The number of text languages</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDTextLanguageInfo(System.Int32,System.Int32@,System.Int32@,SnapStream.ViewScape.DirectShow.DvdCharSet@)">
            <summary>
            Retrieves the information for the specified text string language block
            </summary>
            <param name="ulLangIndex">The language block to query</param>
            <param name="pulNumOfStrings">The number of strings for the specified language block</param>
            <param name="pLangCode">The LCID for the language of the text</param>
            <param name="pbCharacterSet">Indicates the character set used for the specified language</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDTextStringAsNative(System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the text string for the specified language as an array of bytes
            </summary>
            <param name="ulLangIndex">The language block to query</param>
            <param name="ulStringIndex">The string index of the given language</param>
            <param name="pbBuffer">The buffer that receives the string</param>
            <param name="ulMaxBufferSize">The size of the buffer</param>
            <param name="pulActualSize">The actual string size (in bytes) returned</param>
            <param name="pType">The type of the string data returned</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDTextStringAsUnicode(System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the text string for the specified language in Unicode
            </summary>
            <param name="ulLangIndex">The language block to query</param>
            <param name="ulStringIndex">The string index of the given language</param>
            <param name="pchwBuffer">The buffer that receives the string</param>
            <param name="ulMaxBufferSize">The size of the buffer</param>
            <param name="pulActualSize">The actual string size (in bytes) returned</param>
            <param name="pType">The type of the string data returned</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetPlayerParentalLevel(System.Int32@,System.Byte[])">
            <summary>
            Retrieves the current parental level and ISO 3166
            country/region code settings for the DVD Navigator
            </summary>
            <param name="pulParentalLevel">The current parental level (1 to 8, 0xffffffff == disabled)</param>
            <param name="pbCountryCode">The ISO-3166 Alpha-2 code representing the region</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetNumberOfChapters(System.Int32,System.Int32@)">
            <summary>
            Retrieves the number of chapters in a given title
            </summary>
            <param name="ulTitle">The title</param>
            <param name="pulNumOfChapters">The number of chapters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetTitleParentalLevels(System.Int32,System.Int32@)">
            <summary>
            Retrieves the parental levels that are defined for a particular title
            </summary>
            <param name="ulTitle">The title (0xffffffff == the current title)</param>
            <param name="pulParentalLevels">Bitwise OR of all of the parental levels defined for this title</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDVDDirectory(System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            Retrieves the root directory that is set in the DVD Navigator
            </summary>
            <param name="pszwPath">The path string buffer</param>
            <param name="ulMaxSize">The size of the path string buffer</param>
            <param name="pulActualSize">The actual size (in WCHARs) of the data returned</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.IsAudioStreamEnabled(System.Int32,System.Boolean@)">
            <summary>
            Determines if the specified audio stream is enabled in the current title
            </summary>
            <param name="ulStreamNum">The audio stream to query</param>
            <param name="pbEnabled">True == enabled, False == disabled</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDiscID(System.String,System.Int64@)">
            <summary>
            Retrieves a system-generated 64-bit "unique"
            identification number for the specified DVD
            </summary>
            <param name="pszwPath">Path of the volume to use for the disc ID (null == current DVD volume)</param>
            <param name="pullDiscID">The disc ID</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetState(SnapStream.ViewScape.DirectShow.IDvdState@)">
            <summary>
            Retrieves a bookmark containing the disc location
            and DVD Navigator state information
            </summary>
            <param name="pStateData">The DVD State object allocated by the DVD Navigator</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetMenuLanguages(System.Int32[],System.Int32,System.Int32@)">
            <summary>
            Retrieves all the languages available for all menus on the disc
            </summary>
            <param name="pLanguages">An array of LCIDs of the languages (null is valid)</param>
            <param name="ulMaxLanguages">The maximum number of languages to retrieve</param>
            <param name="pulActualLanguages">The actual number of languages retrieved</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetButtonAtPosition(SnapStream.ViewScape.DirectShow.DsPOINT,System.Int32@)">
            <summary>
            Retrieves the button located at the specified point within the display window
            </summary>
            <param name="point">The mouse pointer position</param>
            <param name="pulButtonIndex">The button (1 to 36) under the current mouse pointer</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetCmdFromEvent(System.Int32,SnapStream.ViewScape.DirectShow.IDvdCmd@)">
            <summary>
            Retrieves an IDvdCmd object from an EC_DVD_CMD_START,
            EC_DVD_CMD_END, or VFW_E_DVD_CMD_CANCELLED event
            </summary>
            <param name="lParam1">The event notification's lParam1 parameter</param>
            <param name="pCmdObj">The command object associated with the command that fired the event</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDefaultMenuLanguage(System.Int32@)">
            <summary>
            Retrieves the default menu language
            </summary>
            <param name="pLanguage">The LCID of the default menu language</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDefaultAudioLanguage(System.Int32@,SnapStream.ViewScape.DirectShow.DvdAudioLangExt@)">
            <summary>
            Retrieves the default audio language
            </summary>
            <param name="pLanguage">The LCID of the default audio language</param>
            <param name="pAudioExtension">The default audio language extension</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDefaultSubpictureLanguage(System.Int32@,SnapStream.ViewScape.DirectShow.DvdSubPicLangExt@)">
            <summary>
            Retrieves the default subpicture language
            </summary>
            <param name="pLanguage">The LCID of the default subpicture language</param>
            <param name="pSubpictureExtension">The default subpicture language extension</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetDecoderCaps(SnapStream.ViewScape.DirectShow.DvdDecoderCaps@)">
            <summary>
            Retrieves the DVD decoder's maximum data rate for video, audio,
            and subpicture (in forward and reverse) as well as support
            for various types of audio (Dolby AC-3, MPEG-2, DTS, SDDS, LPCM)
            </summary>
            <param name="pCaps">The capabilities of the decoder</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.GetButtonRect(System.Int32,SnapStream.ViewScape.DirectShow.DsRECT@)">
            <summary>
            Retrieves the rectangle coordinates of the specified button
            </summary>
            <param name="ulButton">The button to query (1 to 36)</param>
            <param name="pRect">The coordinates of the button</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IDvdInfo2.IsSubpictureStreamEnabled(System.Int32,System.Boolean@)">
            <summary>
            Determines if the specified subpicture stream is enabled in the current title
            </summary>
            <param name="ulStreamNum">Subpicture stream number to test</param>
            <param name="pbEnabled">True == enabled, False == disabled</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.OptIDvdCmd">
            <summary>
            A simple DVD command container
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.OptIDvdCmd.dvdCmd">
            <summary>
            The dvd command object for synchronization
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2">
            <summary>
            Provides methods for building capture graphs
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.SetFiltergraph(SnapStream.ViewScape.DirectShow.IGraphBuilder)">
            <summary>
            Specifies a filter graph for the capture graph builder to use
            </summary>
            <param name="pfg">The IGraphBuilder interface for this graph</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.GetFiltergraph(SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Retrieves the filter graph that the builder is using
            </summary>
            <param name="ppfg">The IGraphBuilder interface for this graph</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.SetOutputFileName(System.Guid@,System.String,SnapStream.ViewScape.DirectShow.IBaseFilter@,SnapStream.ViewScape.DirectShow.IFileSinkFilter@)">
            <summary>
            Creates the file writing section of the filter graph
            </summary>
            <param name="pType">The media subtype or the CLSID of the mux filter or file writer filter</param>
            <param name="lpstrFile">The output filename</param>
            <param name="ppbf">The mux used</param>
            <param name="ppSink">The file writer used</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.FindInterface(System.Guid@,System.Guid@,SnapStream.ViewScape.DirectShow.IBaseFilter,System.Guid@,System.Object@)">
            <summary>
            Searches the graph for a specified interface, starting from a specified filter
            </summary>
            <param name="pCategory">LOOK_UPSTREAM_ONLY, LOOK_DOWNSTREAM_ONLY, AMPROPERTY_PIN_CATEGORY, or null</param>
            <param name="pType">The major media type of an output pin (can be null)</param>
            <param name="pbf">The filter to begin searching from</param>
            <param name="riid">The IID of the interface to locate</param>
            <param name="ppint">The found filter (must be released when done)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.RenderStream(System.Guid@,System.Guid@,System.Object,SnapStream.ViewScape.DirectShow.IBaseFilter,SnapStream.ViewScape.DirectShow.IBaseFilter)">
            <summary>
            Connects an output pin on a source filter to a rendering filter,
            optionally through a compression filter
            </summary>
            <param name="pCategory">The pin category (null == any pin)</param>
            <param name="pType">The major media type</param>
            <param name="pSource">The starting filter for the connection, or the output pin</param>
            <param name="pfCompressor">An intermediate filter, such as a compression filter (can be null)</param>
            <param name="pfRenderer">A sink filter, renderer or mux (null means to use the default renderer)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.ControlStream(System.Guid@,System.Guid@,SnapStream.ViewScape.DirectShow.IBaseFilter,System.IntPtr,System.IntPtr,System.Int16,System.Int16)">
            <summary>
            Sets the start and stop times for one or more streams of captured data
            </summary>
            <param name="pCategory">The pin category</param>
            <param name="pType">The major media type</param>
            <param name="pFilter">The filter to control (null == all the filters in the graph)</param>
            <param name="pstart">The start time (MAXLONGLONG cancels the previous start request)</param>
            <param name="pstop">The stop time of the operation (MAXLONGLONG cancels the previous stop request)</param>
            <param name="wStartCookie">lParam2 of the event notification</param>
            <param name="wStopCookie">lParam2 of the event notification</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.AllocCapFile(System.String,System.Int64)">
            <summary>
            Preallocates a capture file to a specified size
            </summary>
            <param name="lpstrFile">The file to create or resize</param>
            <param name="dwlSize">The new file size, in bytes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.CopyCaptureFile(System.String,System.String,System.Int32,SnapStream.ViewScape.DirectShow.IAMCopyCaptureFileProgress)">
            <summary>
            Copies the valid media data from a capture file
            </summary>
            <param name="lpwstrOld">The source file name</param>
            <param name="lpwstrNew">The destination file name</param>
            <param name="fAllowEscAbort">Specifies whether pressing the ESC key cancels the operation</param>
            <param name="pFilter">The IAMCopyCaptureFileProgress interface to display the progress (can be null)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2.FindPin(System.Object,System.Int32,System.Guid@,System.Guid@,System.Boolean,System.Int32,SnapStream.ViewScape.DirectShow.IPin@)">
            <summary>
            Retrieves a particular pin on a filter,
            or determines whether a given pin matches the specified criteria
            </summary>
            <param name="pSource">The filter or pin to query</param>
            <param name="pindir">The pin direction</param>
            <param name="pCategory">The pin category</param>
            <param name="pType">The major media type</param>
            <param name="fUnconnected">Whether the pin is connected</param>
            <param name="num">The zero-based index of the pin to retrieve (ignored if pSource is a pin)</param>
            <param name="ppPin">The matching pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IGraphBuilder">
            <summary>
            Enables an application to build a filter graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.AddFilter(SnapStream.ViewScape.DirectShow.IBaseFilter,System.String)">
            <summary>
            Adds a filter to the graph
            </summary>
            <param name="pFilter">The filter to add</param>
            <param name="pName">The name of this filter in the graph</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.RemoveFilter(SnapStream.ViewScape.DirectShow.IBaseFilter)">
            <summary>
            Removes a filter from the graph
            </summary>
            <param name="pFilter">The filter to remove</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.EnumFilters(SnapStream.ViewScape.DirectShow.IEnumFilters@)">
            <summary>
            Retrieves a collection of the filters in this graph
            </summary>
            <param name="ppEnum">The enumeration of the filters</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.FindFilterByName(System.String,SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Finds a filter in the graph with the given name
            </summary>
            <param name="pName">The name of the filter</param>
            <param name="ppFilter">The filter that matched the given name, or null</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.ConnectDirect(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Connects two pins without asking the filters
            </summary>
            <param name="ppinOut">The output pin</param>
            <param name="ppinIn">The input pin</param>
            <param name="pmt">The media type for this connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.Reconnect(SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Disconnects the pin and reconnects it.
            Note: this method should only be called by other filters
            </summary>
            <param name="ppin">The pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.Disconnect(SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Disconnects this pin
            </summary>
            <param name="ppin">The pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.SetDefaultSyncSource">
            <summary>
            Sets the reference clock to the default clock
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.Connect(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Connects two pins. If they will not connect directly,
            this method connects them with intervening transforms
            </summary>
            <param name="ppinOut">The output pin</param>
            <param name="ppinIn">The input pin</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.Render(SnapStream.ViewScape.DirectShow.IPin)">
            <summary>
            Adds a chain of filters to a specified output pin to render it
            </summary>
            <param name="ppinOut">The output pin to render</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.RenderFile(System.String,System.String)">
            <summary>
            Builds a filter graph that renders the specified file
            </summary>
            <param name="lpcwstrFile">The media file to render</param>
            <param name="lpcwstrPlayList">Must be null</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.AddSourceFilter(System.String,System.String,SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Adds a source filter to the filter graph for a specific file
            </summary>
            <param name="lpcwstrFileName">The name of the file to load</param>
            <param name="lpcwstrFilterName">The name for the source filter</param>
            <param name="ppFilter">The source filter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.SetLogFile(System.IntPtr)">
            <summary>
            Sets the file for logging actions taken when attempting to perform an operation
            </summary>
            <param name="hFile">Handle to the logfile</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.Abort">
            <summary>
            Requests that the graph builder return as soon as possible from its current task
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IGraphBuilder.ShouldOperationContinue">
            <summary>
            Queries whether the current operation should continue
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IFileSinkFilter">
            <summary>
            Writes a media stream to a file
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFileSinkFilter.SetFileName(System.String,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Sets the name of the file into which media samples will be written
            </summary>
            <param name="pszFileName">The file name</param>
            <param name="pmt">The type of the media samples to be written to the file</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IFileSinkFilter.GetCurFile(System.String@,SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Retrieves the name of the current file into which media samples will be written
            </summary>
            <param name="pszFileName">The file name</param>
            <param name="pmt">The type of the media samples in the file</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMCopyCaptureFileProgress">
            <summary>
            Callback interface used from ICaptureGraphBuilder2::CopyCaptureFile()
            to notify the user of progress
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMCopyCaptureFileProgress.Progress(System.Int32)">
            <summary>
            Called periodically by the ICaptureGraphBuilder2::CopyCaptureFile
            method during capture operations
            </summary>
            <param name="iProgress">The current percentage towards completion</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IVideoFrameStep">
            <summary>
            Steps through the video stream
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoFrameStep.Step(System.Int32,System.Object)">
            <summary>
            Causes the filter graph to step forward by the specified number of frames
            </summary>
            <param name="dwFrames">
            The number of frames to skip
            n=1: the graph steps forward one frame
            n>1: the graph skips n-1 frames and shows the nth frame
            </param>
            <param name="pStepObject">The filter that will control stepping (null means use the renderer filter)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoFrameStep.CanStep(System.Int32,System.Object)">
            <summary>
            Determines the stepping capabilities of the specified filter
            </summary>
            <param name="bMultiple">
            n=0: the graph can step 1 frame at a time
            n>0: the graph can step multiple frames at a time
            </param>
            <param name="pStepObject">The filter that will control stepping (null means use the renderer filter)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IVideoFrameStep.CancelStep">
            <summary>
            Cancels the previous step operation
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMStreamConfig">
            <summary>
            Enables an application to set the output format on certain capture and compression filters
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMStreamConfig.SetFormat(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Sets the output format on the pin
            </summary>
            <param name="pmt">The media type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMStreamConfig.GetFormat(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Retrieves the current or preferred output format
            </summary>
            <param name="pmt">The media type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMStreamConfig.GetNumberOfCapabilities(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the number of format capabilities that this pin supports
            </summary>
            <param name="piCount">The number of format capabilities</param>
            <param name="piSize">The size of the configuration structure, in bytes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMStreamConfig.GetStreamCaps(System.Int32,SnapStream.ViewScape.DirectShow.AMMediaType@,System.IntPtr)">
            <summary>
            Retrieves a set of format capabilities
            </summary>
            <param name="iIndex">The format capability to retrieve (indexed from zero)</param>
            <param name="ppmt">The media type</param>
            <param name="pSCC">The VIDEO_STREAM_CONFIG_CAPS or AUDIO_STREAM_CONFIG_CAPS</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMTunerSubChannel">
            <summary>
            Tuner video subchannel
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerSubChannel.NoTune">
            <summary>
            AMTUNER_SUBCHAN_NO_TUNE : don't tune
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerSubChannel.Default">
            <summary>
            AMTUNER_SUBCHAN_DEFAULT : use default sub chan
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMTunerSignalStrength">
            <summary>
            Tuner signal strength
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerSignalStrength.NA">
            <summary>
            AMTUNER_HASNOSIGNALSTRENGTH : cannot indicate signal strength
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerSignalStrength.NoSignal">
            <summary>
            AMTUNER_NOSIGNAL : no signal available
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerSignalStrength.SignalPresent">
            <summary>
            AMTUNER_SIGNALPRESENT : signal present
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMTunerModeType">
            <summary>
            Tuner mode type (AMTunerModeType)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerModeType.Default">
            <summary>
            AMTUNER_MODE_DEFAULT : default tuner mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerModeType.TV">
            <summary>
            AMTUNER_MODE_TV : tv
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerModeType.FMRadio">
            <summary>
            AMTUNER_MODE_FM_RADIO : fm radio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerModeType.AMRadio">
            <summary>
            AMTUNER_MODE_AM_RADIO : am radio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerModeType.Dss">
            <summary>
            AMTUNER_MODE_DSS : dss
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AMTunerEventType">
            <summary>
            Tuner event types
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AMTunerEventType.Changed">
            <summary>
            AMTUNER_EVENT_CHANGED : status changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMTuner">
            <summary>
            Basic tuner functionality
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.put_Channel(System.Int32,SnapStream.ViewScape.DirectShow.AMTunerSubChannel,SnapStream.ViewScape.DirectShow.AMTunerSubChannel)">
            <summary>
            Sets the TV channel
            </summary>
            <param name="lChannel">The TV channel number</param>
            <param name="lVideoSubChannel">The video subchannel</param>
            <param name="lAudioSubChannel">The audio subchannel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.get_Channel(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the TV channel that the tuner is set to
            </summary>
            <param name="plChannel">The TV channel number</param>
            <param name="plVideoSubChannel">The video subchannel</param>
            <param name="plAudioSubChannel">The audio subchannel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.ChannelMinMax(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum and maximum channel available
            </summary>
            <param name="lChannelMin">The lowest channel number</param>
            <param name="lChannelMax">The highest channel number</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.put_CountryCode(System.Int32)">
            <summary>
            Sets the country/region code to establish the frequency to use
            </summary>
            <param name="lCountryCode">The country/region code</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.get_CountryCode(System.Int32@)">
            <summary>
            Retrieves the country/region code
            </summary>
            <param name="plCountryCode">The country/region code currently used by the TV Tuner filter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.put_TuningSpace(System.Int32)">
            <summary>
            Sets a storage index for regional channel-to-frequency mappings
            </summary>
            <param name="lTuningSpace">The current locale</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.get_TuningSpace(System.Int32@)">
            <summary>
            Retrieves the storage index for regional fine tuning
            </summary>
            <param name="plTuningSpace">The current tuning space</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.Logon(System.IntPtr)">
            <summary>
            Logs a user onto the system
            </summary>
            <param name="hCurrentUser">
            Handle to n application-defined data structure that identifies the current user
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.Logout">
            <summary>
            Logs a user off the system
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.SignalPresent(SnapStream.ViewScape.DirectShow.AMTunerSignalStrength@)">
            <summary>
            Retrieves the strength of the signal on a given channel
            </summary>
            <param name="plSignalStrength">Indicates whether a signal is present on the current channel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.put_Mode(SnapStream.ViewScape.DirectShow.AMTunerModeType)">
            <summary>
            Sets a multifunction tuner to the specified mode
            </summary>
            <param name="lMode">Indicates the tuner mode to switch to</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.get_Mode(SnapStream.ViewScape.DirectShow.AMTunerModeType@)">
            <summary>
            Retrieves the current mode on a multifunction tuner
            </summary>
            <param name="plMode">The current mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.GetAvailableModes(SnapStream.ViewScape.DirectShow.AMTunerModeType@)">
            <summary>
            Retrieves the tuner's supported modes
            </summary>
            <param name="plModes">The available modes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.RegisterNotificationCallBack(SnapStream.ViewScape.DirectShow.IAMTunerNotification,SnapStream.ViewScape.DirectShow.AMTunerEventType)">
            <summary>
            Allows an object that implements the IAMTunerNotification interface
            to receive event notifications when the tuner changes state. (Not implemented.)
            </summary>
            <param name="pNotify">The notification interface that will receive the event notifications</param>
            <param name="lEvents">Indicates which events to notify</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTuner.UnRegisterNotificationCallBack(SnapStream.ViewScape.DirectShow.IAMTunerNotification)">
            <summary>
            Unregisters an object for event notifications. (Not implemented.)
            </summary>
            <param name="pNotify">The notification interface that was receiving the event notifications</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMTunerNotification">
            <summary>
            Deprecated
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTunerNotification.OnEvent(SnapStream.ViewScape.DirectShow.AMTunerEventType)">
            <summary>
            Deprecated: Handles events from the TV tuner card
            </summary>
            <param name="Event">The type of the event</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.AnalogVideoStandard">
            <summary>
            Specifies the format of an analog television signal
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.None">
            <summary>
            AnalogVideo_None: digital sensor
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.NTSC_M">
            <summary>
            AnalogVideo_NTSC_M: 7.5 IRE setup
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.NTSC_M_J">
            <summary>
            AnalogVideo_NTSC_M_J: Japan, 0 IRE setup
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.NTSC_433">
            <summary>
            AnalogVideo_NTSC_433
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_B">
            <summary>
            AnalogVideo_PAL_B
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_D">
            <summary>
            AnalogVideo_PAL_D
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_G">
            <summary>
            AnalogVideo_PAL_G
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_H">
            <summary>
            AnalogVideo_PAL_H
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_I">
            <summary>
            AnalogVideo_PAL_I
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_M">
            <summary>
            AnalogVideo_PAL_M
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_N">
            <summary>
            AnalogVideo_PAL_N
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_60">
            <summary>
            AnalogVideo_PAL_60
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_B">
            <summary>
            AnalogVideo_SECAM_B
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_D">
            <summary>
            AnalogVideo_SECAM_D
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_G">
            <summary>
            AnalogVideo_SECAM_G
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_H">
            <summary>
            AnalogVideo_SECAM_H
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_K">
            <summary>
            AnalogVideo_SECAM_K
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_K1">
            <summary>
            AnalogVideo_SECAM_K1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_L">
            <summary>
            AnalogVideo_SECAM_L
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.SECAM_L1">
            <summary>
            AnalogVideo_SECAM_L1
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.AnalogVideoStandard.PAL_N_COMBO">
            <summary>
            AnalogVideo_PAL_N_COMBO: Argentina
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.TunerInputType">
            <summary>
            Specifies the frequency of a TV tuner
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.TunerInputType.Cable">
            <summary>
            Cable frequency
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.TunerInputType.Antenna">
            <summary>
            Broadcast antenna frequency
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.IAMTVTuner">
            <summary>
            Provides methods that enable an application to control a TV tuner device
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_Channel(System.Int32,SnapStream.ViewScape.DirectShow.AMTunerSubChannel,SnapStream.ViewScape.DirectShow.AMTunerSubChannel)">
            <summary>
            Sets the TV channel
            </summary>
            <param name="lChannel">The TV channel number</param>
            <param name="lVideoSubChannel">The video subchannel</param>
            <param name="lAudioSubChannel">The audio subchannel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_Channel(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the TV channel that the tuner is set to
            </summary>
            <param name="plChannel">The TV channel number</param>
            <param name="plVideoSubChannel">The video subchannel</param>
            <param name="plAudioSubChannel">The audio subchannel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.ChannelMinMax(System.Int32@,System.Int32@)">
            <summary>
            Retrieves the minimum and maximum channel available
            </summary>
            <param name="lChannelMin">The lowest channel number</param>
            <param name="lChannelMax">The highest channel number</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_CountryCode(System.Int32)">
            <summary>
            Sets the country/region code to establish the frequency to use
            </summary>
            <param name="lCountryCode">The country/region code</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_CountryCode(System.Int32@)">
            <summary>
            Retrieves the country/region code
            </summary>
            <param name="plCountryCode">The country/region code currently used by the TV Tuner filter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_TuningSpace(System.Int32)">
            <summary>
            Sets a storage index for regional channel-to-frequency mappings
            </summary>
            <param name="lTuningSpace">The current locale</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_TuningSpace(System.Int32@)">
            <summary>
            Retrieves the storage index for regional fine tuning
            </summary>
            <param name="plTuningSpace">The current tuning space</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.Logon(System.IntPtr)">
            <summary>
            Logs a user onto the system
            </summary>
            <param name="hCurrentUser">
            Handle to n application-defined data structure that identifies the current user
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.Logout">
            <summary>
            Logs a user off the system
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.SignalPresent(SnapStream.ViewScape.DirectShow.AMTunerSignalStrength@)">
            <summary>
            Retrieves the strength of the signal on a given channel
            </summary>
            <param name="plSignalStrength">Indicates whether a signal is present on the current channel</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_Mode(SnapStream.ViewScape.DirectShow.AMTunerModeType)">
            <summary>
            Sets a multifunction tuner to the specified mode
            </summary>
            <param name="lMode">Indicates the tuner mode to switch to</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_Mode(SnapStream.ViewScape.DirectShow.AMTunerModeType@)">
            <summary>
            Retrieves the current mode on a multifunction tuner
            </summary>
            <param name="plMode">The current mode</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.GetAvailableModes(SnapStream.ViewScape.DirectShow.AMTunerModeType@)">
            <summary>
            Retrieves the tuner's supported modes
            </summary>
            <param name="plModes">The available modes</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.RegisterNotificationCallBack(SnapStream.ViewScape.DirectShow.IAMTunerNotification,SnapStream.ViewScape.DirectShow.AMTunerEventType)">
            <summary>
            Allows an object that implements the IAMTunerNotification interface
            to receive event notifications when the tuner changes state. (Not implemented.)
            </summary>
            <param name="pNotify">The notification interface that will receive the event notifications</param>
            <param name="lEvents">Indicates which events to notify</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.UnRegisterNotificationCallBack(SnapStream.ViewScape.DirectShow.IAMTunerNotification)">
            <summary>
            Unregisters an object for event notifications. (Not implemented.)
            </summary>
            <param name="pNotify">The notification interface that was receiving the event notifications</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_AvailableTVFormats(SnapStream.ViewScape.DirectShow.AnalogVideoStandard@)">
            <summary>
            Retrieves all the analog video TV standards that the tuner supports
            </summary>
            <param name="lAnalogVideoStandard">The video standards supported</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_TVFormat(SnapStream.ViewScape.DirectShow.AnalogVideoStandard@)">
            <summary>
            Retrieves the current analog video TV standard in use
            </summary>
            <param name="lAnalogVideoStandard">The video standard used</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.AutoTune(System.Int32,System.Int32@)">
            <summary>
            Scans for a precise signal on the channel's frequency
            </summary>
            <param name="lChannel">TV channel number</param>
            <param name="plFoundSignal">
            zero indicates not found
            not zero indicates found
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.StoreAutoTune">
            <summary>
            Saves the fine-tuning information for all channels
            </summary>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_NumInputConnections(System.Int32@)">
            <summary>
            Retrieves the number of TV sources plugged into the tuner filter
            </summary>
            <param name="plNumInputConnections">The number of TV sources plugged into the tuner filter</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_InputType(System.Int32,SnapStream.ViewScape.DirectShow.TunerInputType)">
            <summary>
            Sets the tuner input type (cable or antenna)
            </summary>
            <param name="lIndex">The input pin that will be set</param>
            <param name="inputType">The tuner type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_InputType(System.Int32,SnapStream.ViewScape.DirectShow.TunerInputType@)">
            <summary>
            Retrieves the input type
            </summary>
            <param name="lIndex">The input pin that will be retrieved</param>
            <param name="inputType">The tuner type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.put_ConnectInput(System.Int32)">
            <summary>
            Sets the hardware tuner input connection
            </summary>
            <param name="lIndex">The input pin to set connection for</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_ConnectInput(System.Int32@)">
            <summary>
            Retrieves the hardware tuner input connection
            </summary>
            <param name="lIndex">The input pin to get the connection for</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_VideoFrequency(System.Int32@)">
            <summary>
            Retrieves the current video frequency
            </summary>
            <param name="lFreq">The video frequency, in hertz (Hz)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.IAMTVTuner.get_AudioFrequency(System.Int32@)">
            <summary>
            Retrieves the current audio frequency
            </summary>
            <param name="lFreq">The audio frequency, in hertz (Hz)</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsUtils">
            <summary>
            Contains various utility functions
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsUtils.IsCorrectDirectXVersion">
            <summary>
            Checks to see whether the installed verison of directx supports this library
            </summary>
            <returns>True if the directx installed is supported</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsUtils.ShowCapPinDialog(SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2,SnapStream.ViewScape.DirectShow.IBaseFilter,System.IntPtr)">
            <summary>
            Pops up a dialog box showing the details of a video capture pin on the given filter in the graph
            </summary>
            <param name="bld">The capture graph</param>
            <param name="flt">The filter that contains a video capture pin</param>
            <param name="hwnd">The parent window of the dialog</param>
            <returns>True IFF a dialog was successfully shown</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsUtils.ShowTunerPinDialog(SnapStream.ViewScape.DirectShow.ICaptureGraphBuilder2,SnapStream.ViewScape.DirectShow.IBaseFilter,System.IntPtr)">
            <summary>
            Pops up a dialog box showing the details of a tv tuner pin on the given filter in the graph
            </summary>
            <param name="bld">The graph</param>
            <param name="flt">The filter that contains the tv tuner pin</param>
            <param name="hwnd">The parent window of the dialog</param>
            <returns>True IFF a dialog was successfully shown</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsUtils.GetPin(SnapStream.ViewScape.DirectShow.IBaseFilter,SnapStream.ViewScape.DirectShow.PinDirection,System.Int32,SnapStream.ViewScape.DirectShow.IPin@)">
            <summary>
            Retrieves the specified pin from the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="dirrequired">The pin direction</param>
            <param name="num">The desired pin index (-1 means any index)</param>
            <param name="ppPin">The pin, if it was found</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsPOINT">
            <summary>
            GDI POINT structure
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsPOINT.X">
            <summary>
            The x-coordinate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsPOINT.Y">
            <summary>
            The y-coordinate
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsRECT">
            <summary>
            GDI RECT structure
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsRECT.Left">
            <summary>
            The left x-position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsRECT.Top">
            <summary>
            The top y-position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsRECT.Right">
            <summary>
            The right x-position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsRECT.Bottom">
            <summary>
            The bottom y-position
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER">
            <summary>
            Contains information about the dimensions and color format
            of a device-independent bitmap (DIB)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.Size">
            <summary>
            The number of bytes in this structure
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.Width">
            <summary>
            The width of the bitmap
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.Height">
            <summary>
            The height of the bitmap
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.Planes">
            <summary>
            The number of planes (must be 1)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.BitCount">
            <summary>
            The bits per pixel
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.Compression">
            <summary>
            The compression used, if any
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.ImageSize">
            <summary>
            The size, in bytes, of the image (can be 0 for uncompressed RGB bitmaps)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.XPelsPerMeter">
            <summary>
            The horizontal resolution, in pixels per meter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.YPelsPerMeter">
            <summary>
            The vertical resolution, in pixels per meter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.ClrUsed">
            <summary>
            The number of color indices in the color table that are actually used in the bitmap
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsBITMAPINFOHEADER.ClrImportant">
            <summary>
            The number of color indices that are considered important for displaying (0 means all)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsROT">
            <summary>
            Contains methods for dealing with the run-time object table (ROT)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsROT.AddGraphToRot(System.Object,System.Int32@)">
            <summary>
            Adds a filter graph to the ROT
            </summary>
            <param name="graph">The graph to be added</param>
            <param name="cookie">The cookie that signifies this graph in the ROT</param>
            <returns>True IFF the graph was added successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsROT.RemoveGraphFromRot(System.Int32@)">
            <summary>
            Removes a filter graph from the ROT
            </summary>
            <param name="cookie">The cookie that signifies this graph in the ROT</param>
            <returns>True IFF the graph was removed successfully</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.ISpecifyPropertyPages">
            <summary>
            Win32 OLE interface that allows the pipeline administration tool to
            invoke property pages
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISpecifyPropertyPages.GetPages(SnapStream.ViewScape.DirectShow.DsCAUUID@)">
            <summary>
            Fills in an array of class identifiers (CLSID)
            where each CLSID is the CLSID of a property page
            that can be displayed in the property sheet for this object
            </summary>
            <param name="pPages">The property pages</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsCAUUID">
            <summary>
            Describes property pages
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsCAUUID.cElems">
            <summary>
            The size of the array
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsCAUUID.pElems">
            <summary>
            The array of UUIDs that specify CLSIDs of property pages
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsOptInt64">
            <summary>
            An object that represents a 64 bit signed number
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.DsOptInt64.#ctor(System.Int64)">
            <summary>
            Creates a new DsOptInt64 object with the given value
            </summary>
            <param name="Value">The value of this number</param>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsOptInt64.Value">
            <summary>
            The value of this number
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.DsOptIntPtr">
            <summary>
            An object that represents a pointer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.DsOptIntPtr.Pointer">
            <summary>
            The pointer value for this object
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.FilterCategory">
            <summary>
            Filter Categories (uuids.h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterCategory.AudioInputDevice">
            <summary>
            CLSID_AudioInputDeviceCategory, audio capture category
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FilterCategory.VideoInputDevice">
            <summary>
            CLSID_VideoInputDeviceCategory, video capture category
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.Clsid">
            <summary>
            Useful CLSIDs for use with this library (uuids.h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Clsid.SystemDeviceEnum">
            <summary>
            CLSID_SystemDeviceEnum for ICreateDevEnum
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Clsid.FilterGraph">
            <summary>
            CLSID_FilterGraph, filter Graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Clsid.CaptureGraphBuilder2">
            <summary>
            CLSID_CaptureGraphBuilder2, new Capture graph building
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Clsid.SampleGrabber">
            <summary>
            CLSID_SampleGrabber, Sample Grabber filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.Clsid.DvdGraphBuilder">
            <summary>
            CLSID_DvdGraphBuilder,  DVD graph builder
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.MediaType">
            <summary>
            Some useful major media types
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.Video">
            <summary>
            MEDIATYPE_Video 'vids'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.Interleaved">
            <summary>
            MEDIATYPE_Interleaved 'iavs'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.Audio">
            <summary>
            MEDIATYPE_Audio 'auds'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.Text">
            <summary>
            MEDIATYPE_Text 'txts'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.Stream">
            <summary>
            MEDIATYPE_Stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.DvdEncryptedPack">
            <summary>
            MEDIATYPE_DVD_ENCRYPTED_PACK
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaType.AUXLine21Data">
            <summary>
            MEDIATYPE_AUXLine21Data
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.MediaSubType">
            <summary>
            Some useful media subtypes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.YUYV">
            <summary>
            MEDIASUBTYPE_YUYV 'YUYV'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.IYUV">
            <summary>
            MEDIASUBTYPE_IYUV 'IYUV'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.DVSD">
            <summary>
            MEDIASUBTYPE_DVSD 'DVSD'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB1">
            <summary>
            MEDIASUBTYPE_RGB1 'RGB1'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB4">
            <summary>
            MEDIASUBTYPE_RGB4 'RGB4'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB8">
            <summary>
            MEDIASUBTYPE_RGB8 'RGB8'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB565">
            <summary>
            MEDIASUBTYPE_RGB565 'RGB565'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB555">
            <summary>
            MEDIASUBTYPE_RGB555 'RGB555'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB24">
            <summary>
            MEDIASUBTYPE_RGB24 'RGB24'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.RGB32">
            <summary>
            MEDIASUBTYPE_RGB32 'RGB32'
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.Avi">
            <summary>
            MEDIASUBTYPE_Avi
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.Asf">
            <summary>
            MEDIASUBTYPE_Asf
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.Mpeg2Video">
            <summary>
            MEDIASUBTYPE_MPEG2_VIDEO
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.YUY2">
            <summary>
            MEDIASUBTYPE_YUY2
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.WaveEx">
            <summary>
            MEDIASUBTYPE_WAVEFORMATEX
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.PCM">
            <summary>
            MEDIASUBTYPE_PCM
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.Overlay">
            <summary>
            MEDIASUBTYPE_OVERLAY
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.AC3Audio">
            <summary>
            MEDIASUBTYPE_AC3_AUDIO
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.Line21GOPPacket">
            <summary>
            MEDIASUBTYPE_Line21_GOPPacket
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.MediaSubType.SubPicture">
            <summary>
            MEDIASUBTYPE_SUBPICTURE
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.FormatType">
            <summary>
            Some useful format types
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.None">
            <summary>
            FORMAT_None
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.VideoInfo">
            <summary>
            FORMAT_VideoInfo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.VideoInfo2">
            <summary>
            FORMAT_VideoInfo2
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.WaveEx">
            <summary>
            FORMAT_WaveFormatEx
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.MpegVideo">
            <summary>
            FORMAT_MPEGVideo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.MpegStreams">
            <summary>
            FORMAT_MPEGStreams
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.DvInfo">
            <summary>
            FORMAT_DvInfo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.FormatType.Mpeg2Video">
            <summary>
            FORMAT_MPEG2Video
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.PinCategory">
            <summary>
            Some useful pin categories
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinCategory.Capture">
            <summary>
            PIN_CATEGORY_CAPTURE
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.PinCategory.Preview">
            <summary>
            PIN_CATEGORY_PREVIEW
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.ISampleGrabber">
            <summary>
            Enables an application to retrieve individual media samples
            as they move through the filter graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.SetOneShot(System.Boolean)">
            <summary>
            Specifies whether the filter should stop the graph after receiving one sample
            </summary>
            <param name="OneShot">Whether to stop the graph after one sample</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.SetMediaType(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Specifies the media type for the connection on the input pin of the Sample Grabber
            </summary>
            <param name="pmt">The required media type</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.GetConnectedMediaType(SnapStream.ViewScape.DirectShow.AMMediaType)">
            <summary>
            Retrieves the media type for the connection on the input pin of Sample Grabber
            </summary>
            <param name="pmt">The media type of the connection</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.SetBufferSamples(System.Boolean)">
            <summary>
            Specifies whether to copy sample data into a buffer as it goes through the filter
            </summary>
            <param name="BufferThem">Specifies whether to buffer sample data</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.GetCurrentBuffer(System.Int32@,System.IntPtr)">
            <summary>
            Retrieves a copy of the sample that the filter received most recently
            </summary>
            <param name="pBufferSize">The size of the buffer</param>
            <param name="pBuffer">The buffer</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.GetCurrentSample(System.IntPtr)">
            <summary>
            Not currently implemented
            </summary>
            <param name="ppSample">Not currently implemented</param>
            <returns>E_NOTIMPL</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabber.SetCallback(SnapStream.ViewScape.DirectShow.ISampleGrabberCB,System.Int32)">
            <summary>
            Specifies a callback method to call on incoming samples
            </summary>
            <param name="pCallback">The callback interface (null cancels the callback)</param>
            <param name="WhichMethodToCallback">
            0: SampleCB()
            1: BufferCB()
            </param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.ISampleGrabberCB">
            <summary>
            Accepts sample grab data
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabberCB.SampleCB(System.Double,SnapStream.ViewScape.DirectShow.IMediaSample)">
            <summary>
            Callback that receives a single sample
            </summary>
            <param name="SampleTime">The starting time, in seconds, of the sample</param>
            <param name="pSample">The sample</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.DirectShow.ISampleGrabberCB.BufferCB(System.Double,System.IntPtr,System.Int32)">
            <summary>
            Callback that receives samples in a buffer
            </summary>
            <param name="SampleTime">The starting time, in seconds, of the sample</param>
            <param name="pBuffer">The buffer containing the data</param>
            <param name="BufferLen">The length, in bytes, of the buffer</param>
            <returns>HRESULT of the operation</returns>
        </member>
        <member name="T:SnapStream.ViewScape.DirectShow.VideoInfoHeader">
            <summary>
            Describes the bitmap and color information for a video image (VIDEOINFOHEADER)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.SrcRect">
            <summary>
            The source video window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.TagRect">
            <summary>
            The destination video window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.BitRate">
            <summary>
            The data rate, in bits per second, of the video stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.BitErrorRate">
            <summary>
            The data error rate, in bit errors per second
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.AvgTimePerFrame">
            <summary>
            The desired average display time of the video frames, in 100-ns ticks
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.DirectShow.VideoInfoHeader.BmiHeader">
            <summary>
            The bitmap info
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.GlobalKeys">
            <summary>
            Contains methods for accessing global navigation key bindings
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Up">
            <summary>
            Contains global Up keys.
            </summary>
            <value>Default is Keys.Up</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Down">
            <summary>
            Contains global Down keys.
            </summary>
            <value>Default is Keys.Down</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Left">
            <summary>
            Contains global Left keys.
            </summary>
            <value>Default is Keys.Left</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Right">
            <summary>
            Contains global Right keys.
            </summary>
            <value>Default is Keys.Right</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Select">
            <summary>
            Contains global Select keys.
            </summary>
            <value>Default is Keys.Enter</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Exit">
            <summary>
            Contains global Back keys.
            </summary>
            <value>Default is Keys.Escape</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Cancel">
            <summary>
            Contains global Cancel keys
            </summary>
            <value>Default is Keys.Escape</value>
        </member>
        <member name="F:SnapStream.ViewScape.Input.GlobalKeys.Toggle">
            <summary>
            Contains global Toggle keys.
            </summary>
            <value>Default is Keys.Space</value>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputHelpers">
            <summary>
            Handles input-related tasks
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputHelpers.ParseKeys(System.String)">
            <summary>
            Parses a semi-colon separated list of Keys values.
            </summary>
            <param name="keys">The string containing the list of keys</param>
            <returns>The ArrayList of keys.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputHelpers.ParseKeys(System.Collections.ArrayList,System.String)">
            <summary>
            Parses a semi-colon separated list of Keys values optionally adding the keys to an already
            defined collection.
            </summary>
            <param name="existingKeys">The keys that already exist for this key binding.  May be null.</param>
            <param name="keys">The string containing the list of keys</param>
            <returns>The ArrayList of keys.  If you specify a value for existingKeys the method will return that object modified appropriately.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputHelpers.GetKeyState(System.Int32)">
            <summary>
            Gets the state of a virtual key.
            </summary>
            <remarks>
            This function is imported directly from Win32.  For more information see <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/getkeystate.asp">this</see>.
            </remarks>
            <param name="nVirtKey">The virtual key code</param>
            <returns>The key state.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputHelpers.GetKeyCodeFromWinMsg(System.IntPtr,System.IntPtr)">
            <summary>
            Gets a Keys value from the parameters of a Windows message.
            </summary>
            <param name="wParam">The wparam</param>
            <param name="lParam">The lparam</param>
            <returns>The associated Keys value.</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputBinding">
            <summary>
            Represents an input binding.
            </summary>
            <remarks>
            An input binding provides a way to describe how an input event should be handled.
            </remarks>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputBinding._action">
            <summary>
            The action for this InputBinding.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputBinding.Action">
            <summary>
            Gets or sets the action that should be taken when this input event is recognized.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputBinding.Command">
            <summary>
            Gets or sets the command that should be executed when this input event is recognized.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.KeyBinding">
            <summary>
            Defines an input binding for key events.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.KeyBinding.#ctor">
            <summary>
            Initializes a new instance of the KeyBinding class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.KeyBinding.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Initializes a new instance of the KeyBinding class.
            </summary>
            <param name="keys">The Keys value to use for this KeyBinding</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.KeyBinding.Equals(System.Object)">
            <summary>
            Overridden to determine if two KeyBindings are the same.
            </summary>
            <param name="obj">The object to compare this KeyBinding to</param>
            <returns>True if the two objects are equal, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.KeyBinding.GetHashCode">
            <summary>
            Overriden to get the hash code of this KeyBinding.
            </summary>
            <remarks>
            This method always returns the <see cref="P:SnapStream.ViewScape.Input.KeyBinding.Keys">Keys</see> property value cast to an int.
            </remarks>
            <returns>The hashcode.</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Keys">
            <summary>
            Gets or sets the Keys value for this KeyBinding.
            </summary>
            <remarks>
            Setting this property will set the key code and the modifiers for this KeyBinding.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Key">
            <summary>
            Gets or set the key code for this KeyBinding.
            </summary>
            <remarks>
            Setting this property will only change the key code for this KeyBinding, the modifiers will
            not be touched.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Char">
            <summary>
            Sets the key code and modifiers as a char for this KeyBinding.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Alt">
            <summary>
            Gets or sets the Alt key modifier for this KeyBinding.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Shift">
            <summary>
            Gets or sets the Shift key modifier for this KeyBinding.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.KeyBinding.Ctrl">
            <summary>
            Gets or sets the Ctrl key modifier for this KeyBinding.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.FireflyBinding">
            <summary>
            Defines an input binding for Firefly remote control events.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.FireflyBinding.#ctor">
            <summary>
            Initializes a new instance of the FireflyBinding class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.FireflyBinding.#ctor(SnapStream.Util.FireflyButton)">
            <summary>
            Initializes a new instance of the FireflyBinding class.
            </summary>
            <param name="button">The button</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.FireflyBinding.#ctor(SnapStream.Util.FireflyButton,SnapStream.Util.FireflyButtonState)">
            <summary>
            Initializes a new instance of the FireflyBinding class.
            </summary>
            <param name="button">The button</param>
            <param name="state">The button state</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.FireflyBinding.Equals(System.Object)">
            <summary>
            Overridden to determine if two FireflyBindings are the same.
            </summary>
            <param name="obj">The object to compare this FireflyBinding to</param>
            <returns>True if the two objects are equal, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.FireflyBinding.GetHashCode">
            <summary>
            Overriden to get the hash code of this FireflyBinding.
            </summary>
            <remarks>
            This method always returns the <see cref="P:SnapStream.ViewScape.Input.FireflyBinding.Button">Button</see> property value cast to an int.
            </remarks>
            <returns>The hashcode.</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Input.FireflyBinding.Button">
            <summary>
            Gets or sets the button for this FireflyBinding.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.FireflyBinding.State">
            <summary>
            Gets or sets the state for this FireflyBinding.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputBindingContext">
            <summary>
            Manages a collection of InputBindings in a certain context.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindingContext.#ctor">
            <summary>
            Initializes a new instance of the InputBindingContext class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindingContext.AddChild(System.Object)">
            <summary>
            Adds an InputBinding to this InputBindingContext.
            </summary>
            <param name="child">The InputBinding to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindingContext.AddText(System.String)">
            <summary>
            Not Implemented.
            </summary>
            <param name="text">The text to add</param>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputBindingContext.Name">
            <summary>
            Gets or sets the name of this InputBindingContext.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputBindings">
            <summary>
            Manages a complete set of input bindings in all scopes.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindings.#ctor">
            <summary>
            Initializes a new instance of the InputBindings class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindings.AddChild(System.Object)">
            <summary>
            Adds an InputBindingContext to this InputBindings.
            </summary>
            <param name="child">The InputBindingContext to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputBindings.AddText(System.String)">
            <summary>
            Not Implemented.
            </summary>
            <param name="text">The text to add</param>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputMessage">
            <summary>
            Defines the set of Windows messages that are input related.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.KeyFirst">
            <summary>
            The value of the first key message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.KeyDown">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputmessages/wm_keydown.asp">WM_KEYDOWN</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.KeyUp">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputmessages/wm_keyup.asp">WM_KEYUP</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.Char">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputmessages/wm_char.asp">WM_CHAR</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.KeyLast">
            <summary>
            The value of the last key message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MouseFirst">
            <summary>
            The value of the first mouse message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MouseMove">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_mousemove.asp">WM_MOUSEMOVE</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.LeftButtonDown">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_lbuttondown.asp">WM_LBUTTONDOWN</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.LeftButtonUp">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_lbuttonup.asp">WM_LBUTTONUP</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.LeftButtonDblClick">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_lbuttondblclk.asp">WM_LBUTTONDBLCLK</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.RightButtonDown">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_rbuttondown.asp">WM_RBUTTONDOWN</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.RightButtonUp">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_rbuttonup.asp">WM_RBUTTONUP</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.RightButtonDblClick">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_rbuttondblclk.asp">WM_RBUTTONDBLCLK</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MiddleButtonDown">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_mbuttondown.asp">WM_MBUTTONDOWN</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MiddleButtonUp">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_mbuttonup.asp">WM_MBUTTONUP</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MiddleButtonDblClick">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_mbuttondblclk.asp">WM_MBUTTONDBLCLK</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MouseWheel">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_mousewheel.asp">WM_MOUSEWHEEL</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.ButtonDown">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_xbuttondown.asp">WM_XBUTTONDOWN</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.ButtonUp">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_xbuttonup.asp">WM_XBUTTONUP</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.ButtonDblClick">
            <summary>
            The value of the <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/mouseinputreference/mouseinputmessages/wm_xbuttondblclk.asp">WM_XBUTTONDBLCLK</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.MouseLast">
            <summary>
            The value of the last mouse message.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.Firefly">
            <summary>
            The value of the message that Firefly sends to notify of remote events.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.InputMessage.FireflyMini">
            <summary>
            The value of the message that FireflyMini sends to notify of remote events.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputMessage.IsInputMessage(System.Int32)">
            <summary>
            Determines if the specified Windows message is an input message.
            </summary>
            <param name="msg">The Windows message</param>
            <returns>True if the message is an input message, false otherwise.</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Input.InputManager">
            <summary>
            Manages input processing and bindings for various input devices.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.GetKeyState(System.Int32)">
            <summary>
            Gets the state of a virtual key.
            </summary>
            <remarks>
            This function is imported directly from Win32.  For more information see <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/getkeystate.asp">this</see>.
            </remarks>
            <param name="nVirtKey">The virtual key code</param>
            <returns>The key state.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.VkKeyScan(System.Char)">
            <summary>
            Translates a character to the corresponding virtual-key code and shift state for the current keyboard.
            </summary>
            <param name="ch">The character to be translated.</param>
            <returns>
            If the function succeeds, the low-order byte of the return value contains the virtual-key code
            and the high-order byte contains the shift state.
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.IsKeyPressed(System.Windows.Forms.Keys)">
            <summary>
            Determines if the specified key is pressed.
            </summary>
            <param name="key">The key</param>
            <returns>True if the key is currently pressed, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.#ctor">
            <summary>
            Initializes a new instance of the InputManager class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Translates a key down event into an input binding and executes it.
            </summary>
            <param name="args">The parameters passed to the <see cref="E:System.Windows.Forms.Control.KeyDown">KeyDown</see> event</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Translates a key up event into an input binding and executes it.
            </summary>
            <param name="args">The parameters passed to the <see cref="E:System.Windows.Forms.Control.KeyUp">KeyUp</see> event</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Translates a key press event into an input binding and executes it.
            </summary>
            <param name="args">The parameters passed to the <see cref="E:System.Windows.Forms.Control.KeyPress">KeyPress</see> event</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateCommandMessage(System.Windows.Forms.Message@)">
            <summary>
            Translates a WM_APPCOMMAND into a Firefly button press
            </summary>
            <param name="message">The Windows message containing the WM_APPCOMMAND info</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateInputMessage(System.Windows.Forms.Message@)">
            <summary>
            Translates a WM_INPUT into a Firefly button press
            </summary>
            <param name="message">The Windows message containing the WM_INPUT info</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.PressButton(System.IntPtr,SnapStream.Util.FireflyButton)">
            <summary>
            Sends the specified FireflyButton to the active window.
            </summary>
            <param name="frame">The frame</param>
            <param name="hwnd">The window handle</param>
            <param name="button">The button</param>
            <param name="result">The result</param>
            <returns>True if the button press was handled, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.TranslateMessage(System.Windows.Forms.Message@)">
            <summary>
            Translates the given message into an input binding and excecutes it.
            </summary>
            <param name="message">The Windows message to translate</param>
            <returns>True if an input binding was found, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.PushContext(System.String)">
            <summary>
            Replaces the current context with the specified context and saves the old context on a stack.
            </summary>
            <remarks>
            This method maintains a stack of binding contexts so that heirarchical navigation scenarios can
            be easily enabled.  If you push a context you must remember to pop it at some time or your application
            may start behaving strangely.
            </remarks>
            <param name="context">The name of the new context</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.PopContext">
            <summary>
            Replaces the current context with the context at the top of the stack.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.Initialize(System.String)">
            <summary>
            Initializes the InputManager
            </summary>
            <param name="config">The path to the file that contains the input bindings that should be used.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.RegisterToReceiveHIDInputs(System.IntPtr)">
            <summary>
            Registers a window handle for remote input.  HID devices require registration.
            </summary>
            <param name="hwnd">The window handle</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.EnsureFireflyProfile(System.String,System.String[])">
            <summary>
            Ensures that the file specified is in the Firefly profiles directory.
            </summary>
            <param name="pathToProfile">The path to the Firefly profile that should be used.</param>
            <param name="profilesToDelete">A list of profiles that should be removed from the Firefly profiles directory.</param>
            <remarks>
            This method allows an application to ensure that the correct Firefly profile is being used.  It will delete any old
            profiles the user may have on their machine and copy the specified profile to the Firefly profiles directory.
            </remarks>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.EnsureFireflyProfile(System.String)">
            <summary>
            Ensures that the file specified is in the Firefly profiles directory.
            </summary>
            <param name="pathToProfile">The path to the Firefly profile that should be used.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.FindCurrentBinding(SnapStream.ViewScape.Input.InputBinding)">
            <summary>
            Finds an input binding given a binding with the same properties.
            </summary>
            <param name="key">The InputBinding to search against</param>
            <returns>The InputBinding that matches the specified binding or null if a matching binding could not be found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Input.InputManager.ExecuteBinding(SnapStream.ViewScape.Input.InputBinding)">
            <summary>
            Executes an input binding given and a binding with the same properties.
            </summary>
            <param name="key">The InputBinding to search against</param>
            <returns>True if an InputBinding was found, false otherwise.</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputManager.IsUsingFirefly">
            <summary>
            Gets a value indicating whether or not the Firefly remote has been used.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputManager.CurrentContext">
            <summary>
            Gets or sets the name of the current input binding context.
            </summary>
            <remarks>
            Setting this value will cause the context stack to be cleared.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Input.InputManager.InputBindings">
            <summary>
            Gets or sets the InputBindings for this InputManager.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Input.SingletonInputManager">
            <summary>
            Maintains a reference to the global <see cref="T:SnapStream.ViewScape.Input.InputManager">InputManager</see>.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Input.SingletonInputManager.Instance">
            <summary>
            Gets the global <see cref="T:SnapStream.ViewScape.Input.InputManager">InputManager</see>.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonAlbumCache">
            <summary>
            Caches our album art for us
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.TextureCache">
            <summary>
            Handles dynamic loading, cataloging, disk-caching, and disposing of
            texture resources
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureCache.MIN_DRIVE_SPACE">
            <summary>
            The minimum amount of drive space needed to continue caching operations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureCache._expireTimeSpan">
            <summary>
            How long an image remains in the cache unused before it is expired
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureCache._canExpire">
            <summary>
            Tell us if we can expire textures
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureCache._stopThread">
            <summary>
            Signals to the loading thread to stop
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.#ctor(System.String)">
            <summary>
            Creates a new texture cache with the specified name
            </summary>
            <param name="name">The name of this cache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.HaveEnoughDiskSpace(System.String)">
            <summary>
            Tells us if we have enough free disk space to do disk caching
            </summary>
            <param name="drive">The drive/directory to check</param>
            <returns>True IFF we can continue caching files</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.SaveTextureToDiskCache(System.String,SnapStream.ViewScape.Widgets.SSTexture)">
            <summary>
            Saves the given texture to the disk cache
            </summary>
            <param name="id">The unique string ID for the image in the cache</param>
            <param name="tex">The texture to be saved</param>
            <returns>True IFF the save operation completed successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.LoadTextureFromDiskCache(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a texture from the disk cache
            </summary>
            <param name="id">The unique string ID for the image in the cache</param>
            <param name="tex">The texture to be loaded</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.DiskCacheFileName(System.String)">
            <summary>
            Calculates the disk cache file name for the given ID
            Note: this method does NOT add any extensions
            since multiple users need different extensions, so they can add them themselves
            </summary>
            <param name="id">The unique string ID of the image</param>
            <returns>The ALMOST full pathname of the disk cache file (minus the extension .dds or .xml)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Initialize">
            <summary>
            Any non-device related initialization happens here.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Add the D3DDevice and initialize any D3D-dependent members
            </summary>
            <param name="dev">
            D3DDevice
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Stops the cache thread and cleans everything up
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Precache(System.String)">
            <summary>
            Marks a file for precaching
            </summary>
            <param name="filename">The file to cache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Precache(System.String,System.Drawing.Bitmap)">
            <summary>
            Marks a bitmap for precaching
            </summary>
            <param name="id">The id of the cached bitmap</param>
            <param name="loadMe">The bitmap to cache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.ClearPrecacheRequests">
            <summary>
            Clears all precache requests
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Clear">
            <summary>
            Clears this texture cache of items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.ClearDiskCache">
            <summary>
            Clears the disk cache for this texture cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.TextureCacheThreadProc">
            <summary>
            This function reads out of the pre-cached requests and loads the textures 
            appropriately.  There are currently two kinds of requests.
             1. Loading a texture from a file
             2. Loading a texture from a bitmap
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Get(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Gets a cached Texture.  If the texture doesn't exist, returns a default texture.
            </summary>
            <param name="filename">
            Filename of the cached texture
            </param>
            <param name="tex">
            SSTexture to output
            </param>
            <returns>
            true if we found the texture in the cache, false otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.IsCached(System.String)">
            <summary>
            Tells us whether an image is in the cache
            </summary>
            <param name="filename">
            The filename of the image we want to check for
            </param>
            <returns>
            true IFF the cache contains the texture with the given filename
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.LoadTexture(System.String,System.Drawing.Image,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a bitmap into an SSTexture
            </summary>
            <param name="id">
            Id to reference the texture
            </param>
            <param name="iconImage">
            Image to load
            </param>
            <param name="tex">
            Output texture
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.LoadTexture(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads an SSTexture from the given filepath
            </summary>
            <param name="requestedFilename">
            Full filepath to load from
            </param>
            <param name="tex">
            Output texture
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.DisableExpiration">
            <summary>
            Disables texture expiration for this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.EnableExpiration">
            <summary>
            Enables texture expiration for this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.HighestPowerOfTwo(System.Int32)">
            <summary>
            Calculates the highest power of two less than or equal to the given number
            </summary>
            <param name="num">The number to find the highest power of two less than</param>
            <returns>The power of two that is less than the given number</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.SmallestPowerOfTwo(System.Int32)">
            <summary>
            Calculates the lowest power of two that will contain the given number
            </summary>
            <param name="num">The number to fit inside the power of two</param>
            <returns>The power of two that is BARELY greater than (or equal to) the given number</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.FindMaxDimensions(System.Int32@,System.Int32@)">
            <summary>
            Limits our texture loading to the limits of the device
            </summary>
            <param name="width">The max width</param>
            <param name="height">The max height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.CreateNotFoundTexture">
            <summary>
            Loads a blank texture that can be used if the normal texture is not actually found
            </summary>
            <returns>
            SSTexture that contains the blank texture
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.CreateBlackTexture">
            <summary>
            Loads a black texture
            </summary>
            <returns>
            SSTexture that contains the black texture
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.CacheFile(System.String)">
            <summary>
            When a filename is detected in the list of precached items, 
            we need to load the texture from the file and add it to the cache
            </summary>
            <param name="filename">
            File to load
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.CacheBitmap(SnapStream.ViewScape.Services.BitmapInfo)">
            <summary>
            When a bitmap is detected in the list of precached items, 
            we need to convert the bitmap to a texture and add it to the cache
            </summary>
            <param name="info">
            Object that contains the ID to store the bitmap under and the bitmap itself
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.LoadAndCacheFile(System.String)">
            <summary>
            Attempts to load the specified file
            </summary>
            <param name="requestedFilename">The image file to attempt to load</param>
            <returns>The texture object for the given file</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.TextureCache.Dispose">
            <summary>
            Disposes of any resources (currently does nothing)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.BlackTexture">
            <summary>
            A simple black texture for use by any window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.D3DDevice">
            <summary>
            The Direct3D Device used to create these textures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.PlaceHolder">
            <summary>
            The placeholder texture to be used in emergencies
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.MaxCacheElements">
            <summary>
            The maximum number of textures resident in memory in this cache
            at any given time
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.CanExpire">
            <summary>
            Tell us if we can expire textures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.ExpireTimeSpan">
            <summary>
            How long an image remains in the cache unused before it is expired
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.DiskCacheDirectory">
            <summary>
            The directory for this cache's disk cache
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.TextureCache.DiskCacheSetting">
            <summary>
            The config setting that tells us whether disk caching is enabled for this cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonAlbumCache._triedID3">
            <summary>
            Contains the list of paths we've already checked for id3 album art
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonAlbumCache.Instance">
            <summary>
            The album cache singleton used by the application
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.#ctor">
            <summary>
            Creates our album cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.LoadTexture(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a texture for the given album art name
            </summary>
            <param name="requestedFilename">The album name</param>
            <param name="tex">The loaded texture</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.GetAlbumArtPath(Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Retrieves the album art file path for the given media object
            </summary>
            <param name="media">The media object</param>
            <returns>The album art path</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.GetAlbumArt(System.String)">
            <summary>
            Gets the album art path for the given album ID
            </summary>
            <param name="albumID">The album ID</param>
            <returns>The album art path</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.GetWindowsMediaAlbumArtPath(Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Gets the windows media album art path for the given media object
            </summary>
            <param name="media">The media object</param>
            <returns>The album art path</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.GetID3AlbumArtPath(Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Gets the ID3 image path for the given media object (extracts the image if necessary)
            </summary>
            <param name="media">The media object to get the image for</param>
            <returns>The path name of the image file, otherwise string.Empty</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.GetFolder_jpgAlbumArtPath(Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Gets the folder.jpg album art path for the given media object
            </summary>
            <param name="media">The media object</param>
            <returns>The album art path</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.CreateID3AlbumArtPath(System.String,System.String,System.String)">
            <summary>
            Creates an album art path name for the given media
            </summary>
            <param name="sourceURL">The media object to use in the fallback case</param>
            <param name="albumName">The album name to use</param>
            <param name="artistName">The artist name to use</param>
            <returns>The path if one could be made</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonAlbumCache.CreateBasicAlbumArtPath(System.String)">
            <summary>
            Fallback case to create an album art filename from the media filename
            </summary>
            <param name="sourceURL">The media filename to create a filename for</param>
            <returns>The filename for the album art for this media file</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Services.BlockingTextureCache">
            <summary>
            Class that will load textures from a file into a texture cache
            Calling GetTexture will block until the file is loaded and added to the cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.BlockingTextureCache._expireTimeSpan">
            <summary>
            How long an image remains in the cache unused before it is expired
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.BlockingTextureCache._canExpire">
            <summary>
            Tell us if we can expire textures
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.BlockingTextureCache._stopThread">
            <summary>
            Signals to the loading thread to stop
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.#ctor(System.String)">
            <summary>
            Creates a new blocking texture cache with the specified name
            </summary>
            <param name="name">The name of this cache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.SaveTextureToDiskCache(System.String,SnapStream.ViewScape.Widgets.SSTexture)">
            <summary>
            Saves the given texture to the disk cache
            </summary>
            <param name="id">The unique string ID for the image in the cache</param>
            <param name="tex">The texture to be saved</param>
            <returns>True IFF the save operation completed successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.LoadTextureFromDiskCache(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a texture from the disk cache
            </summary>
            <param name="id">The unique string ID for the image in the cache</param>
            <param name="tex">The texture to be loaded</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.DiskCacheFileName(System.String)">
            <summary>
            Calculates the disk cache file name for the given ID
            Note: this method does NOT add any extensions
            since multiple users need different extensions, so they can add them themselves
            </summary>
            <param name="id">The unique string ID of the image</param>
            <returns>The ALMOST full pathname of the disk cache file (minus the extension .dds or .xml)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Initialize">
            <summary>
            Any non-device related initialization happens here.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Add the D3DDevice and initialize any D3D-dependent members
            </summary>
            <param name="dev">
            D3DDevice
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Stops the cache thread and cleans everything up
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Clear">
            <summary>
            Clears this texture cache of items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.ClearDiskCache">
            <summary>
            Clears the disk cache for this texture cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.TextureCacheThreadProc">
            <summary>
            Handles texture expiration
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Get(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Gets a cached Texture.  If the texture doesn't exist, caches the texture then returns it.
            If the texture is not found, returns a blank texture.
            </summary>
            <param name="filename">
            Filename of the texture
            </param>
            <param name="tex">
            SSTexture to output
            </param>
            <returns>
            true if we found the texture in the cache, false otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Precache(System.String)">
            <summary>
            Loads the image immediately (only here for consistency with TextureCache)
            </summary>
            <param name="filename">The filename of the image to load</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Precache(System.String,System.Drawing.Bitmap)">
            <summary>
            Loads the image immediately (only here for consistency with TextureCache)
            </summary>
            <param name="filename">The filename of the image to load (only used as the unique ID in this case)</param>
            <param name="icon">The bitmap to load</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.IsCached(System.String)">
            <summary>
            Tells us whether an image is in the cache
            </summary>
            <param name="filename">
            The filename of the image we want to check for
            </param>
            <returns>
            true IFF the cache contains the texture with the given filename
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.LoadTexture(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a SSTexture from the given filename
            </summary>
            <param name="requestedFilename">FullPath of the file to load from</param>
            <param name="tex">Output SSTexture</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.DisableExpiration">
            <summary>
            Disables texture expiration for this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.EnableExpiration">
            <summary>
            Enables texture expiration for this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.LoadTexture(System.String,System.Drawing.Image,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Loads a bitmap into an SSTexture
            </summary>
            <param name="id">
            Id to reference the texture
            </param>
            <param name="iconImage">
            Image to load
            </param>
            <param name="tex">
            Output texture
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.CreateNotFoundTexture">
            <summary>
            Loads a blank texture that can be used if the normal texture is not actually found
            </summary>
            <returns>
            SSTexture that contains the blank texture
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.FindMaxDimensions(System.Int32@,System.Int32@)">
            <summary>
            Limits our texture loading to the limits of the device
            </summary>
            <param name="width">The max width</param>
            <param name="height">The max height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.AddTextureToCache(System.String,SnapStream.ViewScape.Widgets.SSTexture)">
            <summary>
            Add the texture to the cache using the given id as an index
            Also ensures that the cache has not grown larger than max cache elements
            </summary>
            <param name="id">
            key to use when storing the texure
            </param>
            <param name="tex">
            texture to store
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BlockingTextureCache.Dispose">
            <summary>
            Disposes of any resources (currently does nothing)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.BlackTexture">
            <summary>
            A simple black texture for use by any window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.D3DDevice">
            <summary>
            The Direct3D Device used to create these textures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.Placeholder">
            <summary>
            The placeholder texture to be used in emergencies
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.MaxCacheElements">
            <summary>
            The maximum number of textures resident in memory in this cache
            at any given time
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.LRUTextures">
            <summary>
            The list of textures in LRU format (index 0 is the most recently used)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.InternalTextureCache">
            <summary>
            The actual mapping of texture name to texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.CanExpire">
            <summary>
            Tell us if we can expire textures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.ExpireTimeSpan">
            <summary>
            How long an image remains in the cache unused before it is expired
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.DiskCacheDirectory">
            <summary>
            The directory for this cache's disk cache
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BlockingTextureCache.DiskCacheSetting">
            <summary>
            The config setting that tells us whether disk caching is enabled for this cache
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.FontManager">
            <summary>
            Manages the font resources for a specific font and font size
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.FontManager._font">
            <summary>
            The font instance to use for this font manager instance
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.FontManager._drawingFont">
            <summary>
            The D3D font instance to use for this font manager instance
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.FontManager._initialized">
            <summary>
            Tells us whether or not this instance has had InitializeDeviceObjects called yet
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.FontManager._lastAccess">
            <summary>
            The last time this font was used.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.#ctor(System.Int32)">
            <summary>
            Internal method for use in the singleton for creating font managers for each of the
            font sizes supported
            </summary>
            <param name="iFontSize">
            the "em" size of the font characters (not to be confused with the pixel height)
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Initializes the font (creates the alphabet texture)
            </summary>
            <param name="dev">
            The D3D device
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Deletes all device-specific stuff
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purpose
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Restores all device-specific stuff
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purpose
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Invalidates all device-specific stuff
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purposes
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.DrawText(System.Drawing.Rectangle,System.Drawing.Color,SnapStream.ViewScape.Widgets.TextFormatFlags,Microsoft.DirectX.Direct3D.Sprite,System.String)">
            <summary>
            Draws text to the screen
            </summary>
            <param name="target">The rectangle in which to paint the text</param>
            <param name="color">The color to paint with</param>
            <param name="flags">Flags that control rendering</param>
            <param name="sprite">The sprite to paint on</param>
            <param name="text">The text to paint</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.FontManager.MeasureText(System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags,System.String)">
            <summary>
            Measures text
            </summary>
            <param name="target">The target area into which the text should be fit</param>
            <param name="flags">Flags that control rendering</param>
            <param name="text">The text to measure</param>
            <returns>The rectangle that the text will be painted to</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Services.FontManager.FontPointSize">
            <summary>
            The em size of the font in this instance
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.FontManager.FontPixelSize">
            <summary>
            The pixel size of the font
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.FontManager.LastAccess">
            <summary>
            The time this font was last used.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonFontManager">
            <summary>
            Our global object for managing fonts
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager.Instance">
            <summary>
            Handles all font manager instances for the application
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._fonts">
            <summary>
            Our table of font instances to use
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._emSizeMap">
            <summary>
            Our mapping of em size to font
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._init">
            <summary>
            Tells us whether or not we have had InitializeDeviceObjects called
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._restore">
            <summary>
            Tells us whether or not we have had RestoreDeviceObjects called
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._device">
            <summary>
            A pointer to our D3D device
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._fontRatio">
            <summary>
            Global font size ratio from ems to pixels for estimating calculations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager._timer">
            <summary>
            The timer we use to evict fonts from our cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFontManager.ExpireTimeSpan">
            <summary>
            The time span that should be used for expiring fonts from the cache.
            This will be used both to determine when a collection should be made
            as well as how old fonts can get before expiring
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.#ctor">
            <summary>
            Dummy constructor...
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Creates our font table
            </summary>
            <param name="dev">
            The D3D Device we're using to paint
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Deletes our font table
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purposes
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Calls restore on our fonts
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purposes
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Invalidates our fonts
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Empty, for our purposes
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.Clear">
            <summary>
            Deletes all fonts
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.OnTimerTick(System.Object,System.EventArgs)">
            <summary>
            Handler for timer that evicts fonts from our cache if they haven't been used in a specified interval
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.GetInstance(System.Int32)">
            <summary>
            Retrieves a font of the given PIXEL size
            </summary>
            <param name="fitInPixels">
            Size, in pixels, of the desired font manager
            </param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.StaticDraw(System.Drawing.Rectangle,System.Int32,System.Drawing.Color,SnapStream.ViewScape.Widgets.TextFormatFlags,Microsoft.DirectX.Direct3D.Sprite,System.String)">
            <summary>
            Draws some text to the screen
            </summary>
            <param name="target">The rectangle in which to paint the text</param>
            <param name="height">The pixel height to print with</param>
            <param name="color">The color to paint with</param>
            <param name="flags">Flags that control rendering</param>
            <param name="sprite">The sprite to paint on</param>
            <param name="text">The text to paint</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.StaticMeasure(System.Drawing.Rectangle,System.Int32,SnapStream.ViewScape.Widgets.TextFormatFlags,System.String)">
            <summary>
            Measures text
            </summary>
            <param name="target">The rectangle in which to paint the text</param>
            <param name="height">The pixel height to print with</param>
            <param name="flags">Flags that control rendering</param>
            <param name="text">The text to paint</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.FindBestEmFromPixel(System.Int32)">
            <summary>
            Finds the biggest Em Size font that fits in the given pixel height
            </summary>
            <param name="pixelSize">The pixel height to fit in</param>
            <returns>The Em Size that fits</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFontManager.EmFitsInPixels(System.Int32,System.Int32)">
            <summary>
            Tells whether the given em size fits in the pixel size
            </summary>
            <param name="emSize">The em size to check</param>
            <param name="pixelSize">The pixel size that the em size needs to fit in</param>
            <returns>True IFF the em size will fit in the pixels</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonIconCache">
            <summary>
            Class that will load sytem icons into textures given a full path
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonIconCache.Instance">
            <summary>
            Our global icon cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonIconCache.#ctor">
            <summary>
            Creates a new icon cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonIconCache.LoadTexture(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Given an extension, load the default system icon for that extension into an SSTexture object
            </summary>
            <param name="filename">
            Full path of the file from which to load the icon
            </param>
            <param name="tex">
            Output SSTexture object
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonIconCache.Get(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Gets a cached Icon.  If the Icon doesn't exist in the cache, it is loaded and cached.
            If the Icon is not loaded correctly, a blank texture is returned.
            </summary>
            <param name="fullPath">
            path to the object that needs the icon
            </param>
            <param name="tex">
            SSTexture to output
            </param>
            <returns>
            true if we found the texture in the cache, false otherwise
            </returns>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaSearchFilter">
            <summary>
            Defines the set of filters that may be used when searching for specific media types.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MediaSearchFilter.ConfigMinFileSize">
            <summary>
            Specifies that the "MusicSearchMinimumFileSize" config property should be used to filter media items.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MediaSearchFilter.MinFileSize">
            <summary>
            Specifies that <see cref="P:SnapStream.ViewScape.Services.MediaTypeInfo.MinFileSize">MinFileSize</see> should be used to filter media items. 
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MediaSearchFilter.Density">
            <summary>
            Specifies that <see cref="P:SnapStream.ViewScape.Services.MediaTypeInfo.MediaFolderDensity">MediaFolderDensity</see> should be used to filter media items.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MediaSearchFilter.ItemCount">
            <summary>
            Specifies that <see cref="P:SnapStream.ViewScape.Services.MediaTypeInfo.ItemCount">ItemCount</see> should be used to filter media items.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MediaSearchFilter.NameHints">
            <summary>
            Specifies that <see cref="P:SnapStream.ViewScape.Services.MediaTypeInfo.NameHints">NameHints</see> should be used to filter media items.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SearchStatus">
            <summary>
            Defines the status of the MediaSearcher object.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SearchStatus.NotSearching">
            <summary>
            The media searcher is not actively searching.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SearchStatus.GatheringData">
            <summary>
            The media searcher is gathering data before doing a full search.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SearchStatus.Searching">
            <summary>
            The media searcher is searching for media.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SearchStatus.Complete">
            <summary>
            The media searcher has completed searching.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SearchStatus.Canceling">
            <summary>
            The media searcher is in the process of cancelling.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaItemFoundHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.ViewScape.Services.MediaTypeInfo.DirectoryFound">DirectoryFound</see>
            and <see cref="E:SnapStream.ViewScape.Services.MediaTypeInfo.FileFound">FileFound</see> events of a <see cref="T:SnapStream.ViewScape.Services.MediaTypeInfo">MediaTypeInfo</see>.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.ProgressHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.ViewScape.Services.MediaSearcher.Progress">Progress</see> event of a
            <see cref="T:SnapStream.ViewScape.Services.MediaSearcher">MediaSearcher</see>.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SearchingDirectoryHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.ViewScape.Services.MediaSearcher.SearchingDirectory">SearchingDirectory</see> event of a
            <see cref="T:SnapStream.ViewScape.Services.MediaSearcher">MediaSearcher</see>.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.StatusChangedHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.ViewScape.Services.MediaSearcher.StatusChanged">StatusChanged</see> event of a
            <see cref="T:SnapStream.ViewScape.Services.MediaSearcher">MediaSearcher</see>.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaTypeInfo">
            <summary>
            Defines meta information about a media type such as "audio" or "video"
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.MediaType">
            <summary>
            The PerceivedType from the Registry of this media type
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.AddToLibrary">
            <summary>
            Determines if files of this type should be added to the media library
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.SearchFilters">
            <summary>
            The search filters that should be applied when searching for this type of media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.MediaFolderDensity">
            <summary>
            The ratio of files of this media type to all other files in a directory that must be satisfied before a
            directory that contains media of this type will be considered a directory that contains this media type
            so a density of 0.5 for "audio" files means that in any given folder at least half of the files must
            be audio before it is considered an audio directory.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.MinFileSize">
            <summary>
            The minimum file size of a file of this type.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.NameHints">
            <summary>
            A comma separated list of strings that give the searcher hints as to whether or not a directory
            should be considered a media directory of this type.  This is only used when the directory is
            empty and enables the searcher to find a directory that has not yet been used by the user to store
            any files.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.NameHintsArray">
            <summary>
            Same thing as NameHints only allows access to the array of name hints
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaTypeInfo.ItemCount">
            <summary>
            The number of items of this type that must be present in a directory before it is considered a
            media directory containing file of this media type.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaTypeInfo.DirectoryFound">
            <summary>
            Raised when a media directory of this type is found.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaTypeInfo.FileFound">
            <summary>
            Raised when a media file of this type is found.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaSearcher">
            <summary>
            Provides media searching functionality based on media type information and search filtering so that
            false positives are not counted as media directories.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.#ctor">
            <summary>
            Initializes a new instance of the MediaSearcher class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.Initialize(System.Windows.Forms.Form)">
            <summary>
            Initializes the media searcher with a form object to synchronize against.
            </summary>
            <param name="form">The form object that synchronizes event firing.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.AddDirectoryHandler(System.String,SnapStream.ViewScape.Services.MediaItemFoundHandler)">
            <summary>
            Adds a directory found handler for the given media type.
            </summary>
            <param name="mediaType">The media type, such as "audio" or "video"</param>
            <param name="handler">The handler to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.RemoveDirectoryHandler(System.String,SnapStream.ViewScape.Services.MediaItemFoundHandler)">
            <summary>
            Removes a directory found handler for the given media type.
            </summary>
            <param name="mediaType">The media type, such as "audio" or "video"</param>
            <param name="handler">The handler to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.AddFileHandler(System.String,SnapStream.ViewScape.Services.MediaItemFoundHandler)">
            <summary>
            Adds a file found handler for the given media type.
            </summary>
            <param name="mediaType">The media type, such as "audio" or "video"</param>
            <param name="handler">The handler to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.RemoveFileHandler(System.String,SnapStream.ViewScape.Services.MediaItemFoundHandler)">
            <summary>
            Removes a file found handler for the given media type.
            </summary>
            <param name="mediaType">The media type, such as "audio" or "video"</param>
            <param name="handler">The handler to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.Start">
            <summary>
            Starts a media search.
            </summary>
            <remarks>
            The search for media is performed on a background thread and event notifications are
            synchronized with the form that was specified in <see cref="M:SnapStream.ViewScape.Services.MediaSearcher.Initialize(System.Windows.Forms.Form)">Initialize</see>.
            </remarks>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MediaSearcher.Cancel">
            <summary>
            Cancels a media search if one is in progress.
            </summary>
            <remarks>
            The search will not be canclled immediately.  The thread that is performing the search will
            stop searching at the next convenient opportunity.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.MediaTypes">
            <summary>
            Gets or sets the list of media types to configure for searching.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchSystemDirectories">
            <summary>
            Gets or sets a value that indicates whether system directories should be searched.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchHiddenDirectories">
            <summary>
            Gets or sets a value that indicates whether hidden directories should be searched.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchNetworkDrives">
            <summary>
            Gets or sets a value that indicates whether network drives should be searched.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchRemovableDrives">
            <summary>
            Gets or sets a value that indicates whether removable drives should be searched.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchCdromDrives">
            <summary>
            Gets or sets a value that indicates whether CD-ROMs should be searched.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.MinFileSize">
            <summary>
            Gets or sets the minimum file size to include in search results.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.ExcludedDirectories">
            <summary>
            Gets an ArrayList of the directories that should not be searched.
            </summary>
            <remarks>
            Modifying this object when a search is in progress will have no effect.  Any changes
            made will not take effect until the next time a search is run.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchDirectories">
            <summary>
            Gets an ArrayList of the directories that should be searched.
            </summary>
            <remarks>
            Modifying this object when a search is in progress will have no effect.  Any changes
            made will not take effect until the next time a search is run.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.IsSearchRunning">
            <summary>
            Gets a value indicating whether or not a search is currently running.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SearchWasCanceled">
            <summary>
            Gets a value indicating whether or not the last search was canceled.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MediaSearcher.SeachHasCompleted">
            <summary>
            Gets a value indicating whether or not a search has been completed.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.Complete">
            <summary>
            Occurs when the media searcher has finished a search.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.Progress">
            <summary>
            Occurs as the media searcher is searching.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.SearchingDirectory">
            <summary>
            Occurs when the media searcher starts searching a directory.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.StatusChanged">
            <summary>
            Occurs when the status of a search changes.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.DirectoryFound">
            <summary>
            Occurs when a directory with any media type is encountered.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.MediaSearcher.FileFound">
            <summary>
            Occurs when a file with any media type is encountered.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaSearcher.SearchCanceledException">
            <summary>
            Used to signal that a search has been canceled
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MediaSearcher.DirectorySearchInfo">
            <summary>
            Maintains information about a directory that has been or is in the process of being searched
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonMediaSearcher">
            <summary>
            Maintains a reference to the global <see cref="T:SnapStream.ViewScape.Services.SingletonMediaSearcher">SingletonMediaSearcher</see>
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonMediaSearcher.Instance">
            <summary>
            Gets the global <see cref="T:SnapStream.ViewScape.Services.MediaSearcher">MediaSearcher</see>
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.MeshCache">
            <summary>
            Caches meshes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._meshCacheThread">
            <summary>
            The thread that processes the cache requests
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._precacheRequests">
            <summary>
            Collection of cache requests
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._lruMeshes">
            <summary>
            A list of least-recently used meshes for expiring old meshes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._meshCache">
            <summary>
            The actual cache of meshes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._maxCacheElements">
            <summary>
            The maximum number of meshes in the cache at any given time
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._D3DDevice">
            <summary>
            The Direct3D device used for this mesh cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._name">
            <summary>
            The name of this cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.MeshCache._stopThread">
            <summary>
            Signals to the loading thread to stop
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.#ctor(System.String)">
            <summary>
            Creates a new mesh cache with the given name
            </summary>
            <param name="name">The display name to give this cache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.Initialize">
            <summary>
            Initializes the cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Does any device-related init
            </summary>
            <param name="dev">The Direct3D device</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Does any device-related clean-up
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.Precache(System.String)">
            <summary>
            Tells the cache to load this mesh as soon as possible
            </summary>
            <param name="filename">The file name of the mesh</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.ClearPrecacheRequests">
            <summary>
            Tells the cache to stop loading new meshes into this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.Clear">
            <summary>
            Tells the cache to stop loading new meshes and to unload all loaded meshes
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.MeshCacheThreadProc">
            <summary>
            This function reads out of the pre-cached requests and loads the meshes 
            appropriately.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.Get(System.String,SnapStream.ViewScape.Widgets.SSMesh@)">
            <summary>
            Gets a cached Mesh.  If the mesh doesn't exist, returns a default mesh.
            </summary>
            <param name="filename">
            Filename of the cached mesh
            </param>
            <param name="mesh">
            SSMesh to output
            </param>
            <returns>
            true if we found the mesh in the cache, false otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.LoadMesh(System.String,SnapStream.ViewScape.Widgets.SSMesh@)">
            <summary>
            Loads an SSMesh from the given filepath
            </summary>
            <param name="requestedFilename">
            Full filepath to load from
            </param>
            <param name="mesh">
            Output mesh
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.CacheFile(System.String)">
            <summary>
            When a filename is detected in the list of precached items, 
            we need to load the mesh from the file and add it to the cache
            </summary>
            <param name="filename">
            File to load
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.LoadAndCacheFile(System.String)">
            <summary>
            Attempts to load the specified file
            </summary>
            <param name="requestedFilename">The mesh file to attempt to load</param>
            <returns>The mesh object for the given file</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.StopThread">
            <summary>
            Stops the cache thread
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.MeshCache.Dispose">
            <summary>
            Makes sure that we've cleaned up everything
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MeshCache.D3DDevice">
            <summary>
            The Direct3D device used for this mesh cache
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.MeshCache.MaxCacheElements">
            <summary>
            The maximum number of meshes in the cache at any given time
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonMeshCache">
            <summary>
            Caches meshes for our application
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonMeshCache.Instance">
            <summary>
            Our mesh cache singleton
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonMeshCache.#ctor">
            <summary>
            Creates our mesh cache singleton
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonFullPhotoCache">
            <summary>
            Handles photo textures and loading operations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonFullPhotoCache.Instance">
            <summary>
            Our global photo cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFullPhotoCache.#ctor">
            <summary>
            Creates a new photo cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonFullPhotoCache.FindMaxDimensions(System.Int32@,System.Int32@)">
            <summary>
            Applies our photo detail level setting to the max dimensions
            </summary>
            <param name="width">The max width</param>
            <param name="height">The max height</param>
        </member>
        <member name="T:SnapStream.ViewScape.Services.PluginRepository">
            <summary>
            Contains all of the loaded plugins
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.PluginRepository._screens">
            <summary>
            Contains the screens instantiated by the plugins
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.PluginRepository._menuItems">
            <summary>
            Contains the menu items instantiated by the plugins
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.#ctor">
            <summary>
            Creates a new plug-in repository
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.Dispose">
            <summary>
            Handles any clean-up that is necessary
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.GetScreens">
            <summary>
            Returns an array of all of the screens instantiated by the plugins
            </summary>
            <returns>
            Array of screens
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.GetMenuItems">
            <summary>
            Returns an array of all of the menu items instantiated by the plugins
            </summary>
            <returns>
            Array of menu items
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.GetSettingsMenuItems">
            <summary>
            Returns an array of all of the settings menu items instantiated by the plugins
            </summary>
            <returns>
            Array of menu items
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.GetSettingsOptionLists">
            <summary>
            Returns an array of all of the settings option lists instantiated by the plugins
            </summary>
            <returns>
            Array of option lists
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.GetOverlays">
            <summary>
            Returns an array of all of the overlay-style windows instantiated by the plugins
            </summary>
            <returns>
            Array of overlay windows
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.PluginRepository.Initialize(SnapStream.ViewScape.Widgets.ScreenBase[],SnapStream.Menus.MenuItem[],SnapStream.Menus.MenuItem[],SnapStream.ViewScape.Widgets.OptionList[],SnapStream.ViewScape.Widgets.Window[])">
            <summary>
            Initializes this repository with all of the items specified
            </summary>
            <param name="screens">The plug-in screens</param>
            <param name="menuItems">The plug-in menu items</param>
            <param name="settingsMenuItems">The plug-in settings</param>
            <param name="settingsOptionLists">The plug-in settings lists</param>
            <param name="overlays">The plug-in overlays</param>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonPluginRepository">
            <summary>
            Acts as the global application store for the plug-ins
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonPluginRepository.Instance">
            <summary>
            The global plug-in repository
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonPluginRepository.#ctor">
            <summary>
            Creates a new plug-in repository
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonConfig">
            <summary>
            Acts as the global config settings store
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonConfig.Instance">
            <summary>
            The global config store instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonConfig.#ctor">
            <summary>
            Creates a new global config store
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.Prototype">
            <summary>
            This is a class that allows us to setup named Prototypes and then use those in our skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Prototype.NameProperty">
            <summary>
            The Name property is used to associate a name with the prototypical instance.  This can be used
            to support something akin to CSS classes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Prototype.BasedOnProperty">
            <summary>
            Allows a prototype to get its starting values from a named instance of the same type
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.Prototype.SetName(SnapStream.DependencyObject,System.String)">
            <summary>
            Sets the Name property.
            </summary>
            <param name="d">The DependencyObject to set the name for</param>
            <param name="name">The name by which d will be refered to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.Prototype.GetName(SnapStream.DependencyObject)">
            <summary>
            Gets the name of a prototypical instance if it has one, else String.Empty
            </summary>
            <param name="d">The object whose name should be retrieved</param>
            <returns>The name of the object or String.Empty if the object is unnamed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.Prototype.SetBasedOn(SnapStream.DependencyObject,System.String)">
            <summary>
            Sets the values of the specified object to the same values present in the named object
            </summary>
            <param name="d">The object whose values should be set</param>
            <param name="basedOn">The named object to get the values from</param>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SkinDefaults">
            <summary>
            a map that maintains prototypical instances of skinned objects
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SkinDefaults._table">
            <summary>
            The Hashtable where all of the { Type x Name } mappings are kept
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SkinDefaults._baseUri">
            <summary>
            The BaseUri this file is being loaded from
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.#ctor">
            <summary>
            Creates a new SkinDefaults object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.SetDefaultsFor(System.Type,System.Object)">
            <summary>
            Sets the defaults on the specified object
            </summary>
            <param name="type">
            The type of the object
            The type specified here should always represent the most derived type
            of the object that is being skinned.  Specifically, typeof should
            not be used to statically bind your skinable class to its default
            because classes that inherit from your class will appear to function
            incorrectly, inheriting the defaults for your class and not for
            the derived class.  Always use Object.GetType to access the map.
            </param>
            <param name="value">
            The object
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.SetDefaultsFor(System.Type,System.String,System.Object)">
            <summary>
            Sets the defaults on the specified object usign the given prototype
            </summary>
            <param name="type">
            The type of the object
            The type specified here should always represent the most derived type
            of the object that is being skinned.  Specifically, typeof should
            not be used to statically bind your skinable class to its default
            because classes that inherit from your class will appear to function
            incorrectly, inheriting the defaults for your class and not for
            the derived class.  Always use Object.GetType to access the map.
            </param>
            <param name="prototypeName">
            The prototype name to map to
            </param>
            <param name="value">
            The object
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.GetDefaultsFor(System.Type)">
            <summary>
            Retrieves an object of the specified type with the defaults set
            </summary>
            <param name="type">The type of the object to create</param>
            <returns>The object created</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.GetDefaultsFor(System.Type,System.String)">
            <summary>
            Retrieves an object of the specified type with the defaults set
            by attempting to map to the given prototype name
            </summary>
            <param name="type">The type of the object to create</param>
            <param name="prototypeName">The prototype to map to</param>
            <returns>The object created</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.IncludeDefaults(System.String)">
            <summary>
            Loads the defaults from the specified file
            </summary>
            <param name="path">The filename to load</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.Clear">
            <summary>
            Clears the defaults
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SkinDefaults.BaseUri">
            <summary>
            The bsae URI for this defaults table
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SkinDefaults.Key">
            <summary>
            Acts a a key into our object map
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.Key.#ctor(System.String,System.Type)">
            <summary>
            Creates a new key
            </summary>
            <param name="name">The name</param>
            <param name="ownerType">The type</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.Key.Equals(System.Object)">
            <summary>
            Overriden so that it can act as a key in a Hashtable
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinDefaults.Key.GetHashCode">
            <summary>
            Overriden so that it can act as a key in a Hashtable
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.DefaultSkinnableAttribute">
            <summary>
            Attribute used to specify that a property can be set
            through the skin defaults
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.DefaultSkinnableAttribute.#ctor">
            <summary>
            Creates a new default skinnable attribute
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SkinLayer">
            <summary>
            An interface for Windows to obtain skin textures by an identifier
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.SetDefaultProperties(System.Object,System.Object)">
            <summary>
            Sets the properties that are defined in the skin defaults
            </summary>
            <param name="instance">The object to set the properties of</param>
            <param name="prototype">The prototype object to copy from</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.#ctor">
            <summary>
            Creates a new skin layer
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.Initialize(System.String,System.String)">
            <summary>
            Loads the images defined in the skin file and
            maps them to their textures
            </summary>
            <param name="config">The skin file</param>
            <param name="skinsDir">The base URI for the skin images</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Initializes any device-dependent things
            </summary>
            <param name="dev">The new Direct3D device</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Deletes any device-dependent things
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.Get(System.String,System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Retrieves the texture with the specified id and base URI
            </summary>
            <param name="id">The id of the image to look for</param>
            <param name="baseUri">The base URI to search</param>
            <param name="tex">The texture, if one was found</param>
            <returns>The status of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.Get(System.String,System.String,SnapStream.ViewScape.Widgets.SSMesh@)">
            <summary>
            Retrieves the mesh with the specified id and base URI
            </summary>
            <param name="id">The id of the mesh to look for</param>
            <param name="baseUri">The base URI to search</param>
            <param name="mesh">The mesh, if one was found</param>
            <returns>The status of the operation</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.DefaultsFor(System.Type)">
            <summary>
            Retrieves an object of the specified type with the defaults set
            </summary>
            <param name="type">The type of object to create</param>
            <returns>The created object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.DefaultsFor(System.Object)">
            <summary>
            Retrieves an object of the same type as the one specified
            with the defaults set
            </summary>
            <param name="obj">The object whose type to use</param>
            <returns>The new object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.DefaultsFor(System.Type,System.String)">
            <summary>
            Retrieves an object of the specified type using the specified prototype
            </summary>
            <param name="type">The type to create</param>
            <param name="prototypeName">The prototype to map to</param>
            <returns>The new object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.DefaultsFor(System.Object,System.String)">
            <summary>
            Retrieves an object of the specified type using the specified prototype
            </summary>
            <param name="obj">The object whose type to use</param>
            <param name="prototypeName">The prototype to map to</param>
            <returns>The new object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.IncludeDefaults(System.String)">
            <summary>
            Loads the defaults located in the specified file
            </summary>
            <param name="path">The skin defaults file to load</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SkinLayer.Dispose">
            <summary>
            Disposes of any resources
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SkinLayer.DefaultFont">
            <summary>
            The default font for this skin
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SkinLayer.DefaultFontStyle">
            <summary>
            The default font style for this skin
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SkinLayer.ScreenPath">
            <summary>
            The subdirectory in the skins directory that contains the screen files
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SkinLayer.BaseUri">
            <summary>
            The base URI of this skin
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonSkinLayer">
            <summary>
            The global skin layer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonSkinLayer.Instance">
            <summary>
            The actual global skin layer instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonSkinLayer.#ctor">
            <summary>
            Creates a new global skin layer
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.VolumeEventArgs">
            <summary>
            Arguments passed when the volume or mute changes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.VolumeEventArgs._mute">
            <summary>
            The current mute value (True = muted)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.VolumeEventArgs._volume">
            <summary>
            The current volume value (0 to 100)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.VolumeEventArgs.#ctor(System.Boolean,System.Int32)">
            <summary>
            Creates new volume event args
            </summary>
            <param name="m">The mute value</param>
            <param name="vol">The volume value</param>
        </member>
        <member name="P:SnapStream.ViewScape.Services.VolumeEventArgs.Mute">
            <summary>
            The current mute value (True = muted)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.VolumeEventArgs.Volume">
            <summary>
            The current volume value (0 to 100)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.DefaultSoundList">
            <summary>
            Contains the filenames of the default sounds
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.Move">
            <summary>
            The sound played when moving
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.NoMove">
            <summary>
            The sound played when the desired actio could not be performed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.Cancel">
            <summary>
            The sound played when navigating back or cancelling an operation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.Select">
            <summary>
            The sound played when something is selected or activated
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.Jump">
            <summary>
            The sound played when moving a large distance
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.BackGroundMusic">
            <summary>
            The ambient background music (not currently used)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.DefaultSoundList.PhotoChange">
            <summary>
            The sound played when the changing photos
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.DefaultSoundList.#ctor">
            <summary>
            Creates a new default sound list (don't use this)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.Sounds">
            <summary>
            A flag enumeration that contains the possible default sounds
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.Move">
            <summary>
            The sound played when moving
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.NoMove">
            <summary>
            The sound played when the desired actio could not be performed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.Cancel">
            <summary>
            The sound played when navigating back or cancelling an operation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.Select">
            <summary>
            The sound played when something is selected or activated
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.Jump">
            <summary>
            The sound played when moving a large distance
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.BackGroundMusic">
            <summary>
            The ambient background music (not currently used)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.PhotoChange">
            <summary>
            The sound played when the changing photos
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.Sounds.All">
            <summary>
            All of the current default sounds
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SoundCache">
            <summary>
            Handles dynamically loading, storing, and playing sounds.
            Also handles volume and mute control.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._MIN_UPDATE_SECONDS">
            <summary>
            Time between polling of the system volume state
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._MIN_SYSTEM_VOLUME">
            <summary>
            Minimum system volue
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._MAX_SYSTEM_VOLUME">
            <summary>
            Maximum system volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._SYSTEM_VOLUME_INC">
            <summary>
            System volume increment
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._systemVolumeMonitorThread">
            <summary>
            Thread to monitor the system volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._updateSeconds">
            <summary>
            The amount in seconds to wait before checking the system volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._stopSoundThread">
            <summary>
            Signals the sound thread to stop
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._stopSystemVolumeThread">
            <summary>
            Signals the system volume monitor thread to stop
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SoundCache._DSDevice">
            <summary>
            The DirectSound device used to create our sound objects
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.#ctor">
            <summary>
            Creates a new sound cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.Initialize(System.String)">
            <summary>
            Initializes the sound cache and turns on sound effects
            </summary>
            <param name="soundsDir">The sounds directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.FinishInit">
            <summary>
            Turns on sounds after initialization
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.InitializeDeviceObjects(Microsoft.DirectX.DirectSound.Device)">
            <summary>
            Handles all device-specific init
            </summary>
            <param name="dev">The DirectSound device</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Handles all device-specific disposal
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.SoundCacheThreadProc">
            <summary>
            The main looping thread of this cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.SystemVolumeMonitorProc">
            <summary>
            Monitors the system volume and mute state
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.Precache(System.String)">
            <summary>
            Precaches the specified sound file
            </summary>
            <param name="filename">The sound file to precache</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.PlaySound(System.String)">
            <summary>
            Plays the specified sound file
            </summary>
            <param name="filename">The sound file to play</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.LoadSound(System.String,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
            <summary>
            Returns an Audio object that the caller will be responsible for disposing.
            If the sound can't be found, the output will be a null value.
            </summary>
            <param name="filename">
            Filename for the sound to be loaded
            </param>
            <param name="soundOut">
            Audio object that will contain the new sound
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.IncreaseVolume">
            <summary>
            Increases the volume used in audio playback
            </summary>
            <returns>True IFF the volume was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.DecreaseVolume">
            <summary>
            Decreases the volume used in audio playback
            </summary>
            <returns>True IFF the volume was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.IncreaseSystemVolume">
            <summary>
            Increases the system volume
            </summary>
            <returns>
            True if the volume changed
            False otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.DecreaseSystemVolume">
            <summary>
            Decreases the system volume
            </summary>
            <returns>
            True if the volume changed
            False otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.NotPlayingAnything">
            <summary>
            Tells us whether we are playing any sounds atm
            </summary>
            <returns>True IFF a sound is still playing</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SoundCache.Dispose">
            <summary>
            Handles any special object destruction needs
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.Mute">
            <summary>
            Whether media is muted
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.MuteSoundEffects">
            <summary>
            Whether UI sound effects are muted
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.Volume">
            <summary>
            The current application volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.MaxCacheElements">
            <summary>
            The maximum number of sound clips to keep in memory at one time
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.SystemMute">
            <summary>
            The system mute
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.SystemVolume">
            <summary>
            The system volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.SoundCache.SystemVolumeUpdateSeconds">
            <summary>
            The number of seconds between system volume checks
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.SoundCache.VolumeChanged">
            <summary>
            Occurs when the application volume and/or mute change
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Services.SoundCache.SystemVolumeChanged">
            <summary>
            Occurs when the system volume and/or mute change
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SoundCache.VolumeEventHandler">
            <summary>
            Template for handling volume change events
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonSoundCache">
            <summary>
            Our global sound cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonSoundCache.Instance">
            <summary>
            The actual global sound cache instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonSoundCache.#ctor">
            <summary>
            Creates a new global sound cache (don't use this)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.CacheStatus">
            <summary>
            Describes the cache status of a texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.CacheStatus.NotFound">
            <summary>
            The texture was not found on disk or in the cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.CacheStatus.Loading">
            <summary>
            The texture was found on disk and is still loading
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.CacheStatus.Found">
            <summary>
            The texture was found in the cache
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.TextureDetailLevel">
            <summary>
            Describes the level of texture detail to use when loading large images
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureDetailLevel.Low">
            <summary>
            Images are loaded into textures no bigger than
            the current screen resolution
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureDetailLevel.Medium">
            <summary>
            Images are loaded into textures no bigger than
            twice the current screen resolution
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.TextureDetailLevel.High">
            <summary>
            Images are loaded into textures no bigger than
            the maximum size allowed by the video device
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.BitmapInfo">
            <summary>
            Encapsulates parameters used to define how to load
            a bitmap into a texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.BitmapInfo._id">
            <summary>
            ID used to reference the bitmap
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.BitmapInfo._bitmap">
            <summary>
            Bitmap to load into the texture cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.BitmapInfo.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            Creates a new bitmap info object
            </summary>
            <param name="id">The id this bitmap should be mapped with</param>
            <param name="loadMe">The bitmap to load</param>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BitmapInfo.ID">
            <summary>
            ID used to reference the bitmap
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Services.BitmapInfo.BitmapToLoad">
            <summary>
            Bitmap to load into the texture cache
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonTextureCache">
            <summary>
            Our global ui texture cache
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonTextureCache.Instance">
            <summary>
            The actual instance of our global ui texture cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonTextureCache.#ctor">
            <summary>
            Creates our global ui texture cache
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Services.SingletonThumbnailCache">
            <summary>
            This will hold Textures for the thumbnails retrieved through the thumbnail creator
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Services.SingletonThumbnailCache.Instance">
            <summary>
            The actual instance of our global thumbnail cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonThumbnailCache.#ctor">
            <summary>
            Creates our global thumbnail cache
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonThumbnailCache.LoadTexture(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Overridden to attempt to load a thumbnail for the file
            </summary>
            <param name="filename">The file to load a thumbnail of</param>
            <param name="tex">The texture loaded</param>
        </member>
        <member name="M:SnapStream.ViewScape.Services.SingletonThumbnailCache.Get(System.String,SnapStream.ViewScape.Widgets.SSTexture@)">
            <summary>
            Retrieves the thumbnail for the given file
            </summary>
            <param name="filename">The file to get the thumbnail of</param>
            <param name="tex">The texture, if one was found</param>
            <returns>True IFF there was a thumbnail loaded for this file</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Util.VertexProcessingType">
            <summary>
            Enumeration of all possible D3D vertex processing types
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.VertexProcessingType.Software">
            <summary>
            Use the Direct3D Software vertex emulation (SLOW!)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.VertexProcessingType.Mixed">
            <summary>
            Use a mix of both hardware and software vertex processing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.VertexProcessingType.Hardware">
            <summary>
            Use the hardware for all possible vertex processing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.VertexProcessingType.PureHardware">
            <summary>
            ONLY use the hardware for vertex processing
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.GraphicsAdapterInfo">
            <summary>
            Info about a display adapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsAdapterInfo.AdapterOrdinal">
            <summary>
            The index of this adapter in directx
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsAdapterInfo.AdapterDetails">
            <summary>
            The detailed information about this adapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsAdapterInfo.DisplayModeList">
            <summary>
            Available display modes for this adapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsAdapterInfo.DeviceInfoList">
            <summary>
            List of device infos for this adapter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsAdapterInfo.ToString">
            <summary>
            Overridden to print out the description of this adapter's details
            </summary>
            <returns>The Description of this adapter's details</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Util.GraphicsDeviceInfo">
            <summary>
            Info about a D3D device, including a list of DeviceCombos (see below) 
            that work with the device
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsDeviceInfo.AdapterOrdinal">
            <summary>
            The index of this adapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsDeviceInfo.DevType">
            <summary>
            The device type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsDeviceInfo.Caps">
            <summary>
            The capabilities of this device
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.GraphicsDeviceInfo.DeviceComboList">
            <summary>
            List of device combos for this device
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsDeviceInfo.ToString">
            <summary>
            Overridden to print out the device type
            </summary>
            <returns>The device type</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Util.DepthStencilMultiSampleConflict">
            <summary>
            Info about a depth/stencil buffer format that is incompatible with a
            multisample type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DepthStencilMultiSampleConflict.DepthStencilFormat">
            <summary>
            The depth format
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DepthStencilMultiSampleConflict.MultiSampleType">
            <summary>
            The multisample type
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.DeviceCombo">
            <summary>
            A combination of adapter format, back buffer format, and windowed/fullscreen 
            that is compatible with a particular D3D device (and the app)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.AdapterOrdinal">
            <summary>
            The index of the device for this combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.DevType">
            <summary>
            The device type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.AdapterFormat">
            <summary>
            The adapter format
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.BackBufferFormat">
            <summary>
            The back-buffer format
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.IsWindowed">
            <summary>
            Whether this is a windowed device combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.DepthStencilFormatList">
            <summary>
            List of depth formats supported in this combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.MultiSampleTypeList">
            <summary>
            List of multisample types supported in this combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.MultiSampleQualityList">
            <summary>
            List of ints (maxQuality per multisample type)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.DepthStencilMultiSampleConflictList">
            <summary>
            List of depth-multisample conflicts for this combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.VertexProcessingTypeList">
            <summary>
            List of VertexProcessingTypes for this combo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DeviceCombo.PresentIntervalList">
            <summary>
            List of supported present intervals for this combo
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.DisplayModeComparer">
            <summary>
            Used to sort Displaymodes
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.DisplayModeComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare two display modes
            </summary>
            <param name="x">The left side of the comparison</param>
            <param name="y">The right side of the comparison</param>
        </member>
        <member name="T:SnapStream.ViewScape.Util.D3DEnumeration">
            <summary>
            Enumerates available adapters, devices, modes, etc.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.ConfirmDeviceCallback">
            <summary>
            The confirm device callback
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AdapterInfoList">
            <summary>
            List of D3DAdapterInfos
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinFullscreenWidth">
            <summary>
            The app minimum fullscreen width.
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinFullscreenHeight">
            <summary>
            The app minimum fullscreen height.
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinColorChannelBits">
            <summary>
            The app minimum color bits per channel in adapter format.
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinAlphaChannelBits">
            <summary>
            The app minimum alpha bits per pixel in back buffer format
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinDepthBits">
            <summary>
            The app minimum depth bits
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppMinStencilBits">
            <summary>
            The app minimum stencil bits
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppUsesDepthBuffer">
            <summary>
            Whether the app uses the depth buffer
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppUsesMixedVP">
            <summary>
            Whether the app can take advantage of mixed vertex processing mode
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppRequiresWindowed">
            <summary>
            Whether windowed mode is required
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DEnumeration.AppRequiresFullscreen">
            <summary>
            Whether fullscreen mode is required
            Set this before calling Enumerate() to get the results you want
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.Enumerate">
            <summary>
            Enumerates available D3D adapters, devices, modes, etc.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.EnumerateDevices(SnapStream.ViewScape.Util.GraphicsAdapterInfo,System.Collections.ArrayList)">
            <summary>
            Enumerates D3D devices for a particular adapter
            </summary>
            <param name="adapterInfo">The adapter to enumerate</param>
            <param name="adapterFormatList">The formats to use</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.EnumerateDeviceCombos(SnapStream.ViewScape.Util.GraphicsDeviceInfo,System.Collections.ArrayList)">
            <summary>
            Enumerates DeviceCombos for a particular device
            </summary>
            <param name="deviceInfo">The device to enumerate</param>
            <param name="adapterFormatList">The formats to use</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.BuildDepthStencilFormatList(SnapStream.ViewScape.Util.DeviceCombo)">
            <summary>
            Adds all depth/stencil formats that are compatible with the device and app to
            the given deviceCombo
            </summary>
            <param name="deviceCombo">The device combo for this list</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.BuildMultiSampleTypeList(SnapStream.ViewScape.Util.DeviceCombo)">
            <summary>
            Adds all multisample types that are compatible with the device and app to
            the given deviceCombo
            </summary>
            <param name="deviceCombo">The device combo to build this list for</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.BuildDepthStencilMultiSampleConflictList(SnapStream.ViewScape.Util.DeviceCombo)">
            <summary>
            Finds any depthstencil formats that are incompatible with multisample types and
            builds a list of them.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.BuildVertexProcessingTypeList(SnapStream.ViewScape.Util.GraphicsDeviceInfo,SnapStream.ViewScape.Util.DeviceCombo)">
            <summary>
            Adds all vertex processing types that are compatible with the device and app to
            the given deviceCombo
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DEnumeration.BuildPresentIntervalList(SnapStream.ViewScape.Util.GraphicsDeviceInfo,SnapStream.ViewScape.Util.DeviceCombo)">
            <summary>
            Adds all present intervals that are compatible with the device and app to
            the given deviceCombo
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.D3DEnumeration.ConfirmDeviceCallbackType">
            <summary>
            The confirm device delegate which is used to determine if a device 
            meets the needs of the simulation
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.D3DSettings">
            <summary>
            Current D3D settings: adapter, device, mode, formats, etc.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.IsWindowed">
            <summary>
            Whether we are in windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedAdapterInfo">
            <summary>
            The adapter infor for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedDeviceInfo">
            <summary>
            The device info for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedDeviceCombo">
            <summary>
            The device combo for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedDisplayMode">
            <summary>
            The display mode for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedDepthStencilBufferFormat">
            <summary>
            The depth format for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedMultisampleType">
            <summary>
            The multisample type for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedMultisampleQuality">
            <summary>
            The multisample quality for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedVertexProcessingType">
            <summary>
            The vertex processing mode for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedPresentInterval">
            <summary>
            The present interval for windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedWidth">
            <summary>
            The windowed width
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.WindowedHeight">
            <summary>
            The windowed height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenAdapterInfo">
            <summary>
            The adapter info for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenDeviceInfo">
            <summary>
            The device info for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenDeviceCombo">
            <summary>
            The device combo for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenDisplayMode">
            <summary>
            The display mode for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenDepthStencilBufferFormat">
            <summary>
            The depth format for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenMultisampleType">
            <summary>
            The multisample type for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenMultisampleQuality">
            <summary>
            The multisample quality for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenVertexProcessingType">
            <summary>
            The vertex processing type for fullscreen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettings.FullscreenPresentInterval">
            <summary>
            The present interval for fullscreen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettings.Clone">
            <summary>
            Clone the d3d settings class
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.AdapterInfo">
            <summary>
            The adapter information
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.DeviceInfo">
            <summary>
            The device information
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.DeviceCombo">
            <summary>
            The device combo
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.AdapterOrdinal">
            <summary>
            The adapters ordinal
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.DevType">
            <summary>
            The type of device this is
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.BackBufferFormat">
            <summary>
            The back buffers format
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.DisplayMode">
            <summary>
            The display mode
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.DepthStencilBufferFormat">
            <summary>
            The Depth stencils format
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.MultisampleType">
            <summary>
            The multisample type
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.MultisampleQuality">
            <summary>
            The multisample quality
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.VertexProcessingType">
            <summary>
            The vertex processing type
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.D3DSettings.PresentInterval">
            <summary>
            The presentation interval
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.D3DSettingsForm">
            <summary>
            A form to allow the user to change the current D3D settings.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettingsForm.settings">
            <summary>
            The settings for this form
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.D3DSettingsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.#ctor(SnapStream.ViewScape.Util.D3DEnumeration,SnapStream.ViewScape.Util.D3DSettings)">
            <summary>
            Constructor.  Pass in an enumeration and the current D3D settings.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.AdapterChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected adapter by rebuilding the device 
            list.  Updating the selected device will trigger updates of the 
            rest of the dialog.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.DeviceChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected device by resetting the 
            fullscreen/windowed radio buttons.  Updating these buttons
            will trigger updates of the rest of the dialog.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.WindowedFullscreenChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of windowed/fullscreen state by rebuilding the
            adapter format list, resolution list, and refresh rate list.
            Updating the selected adapter format will trigger updates of the 
            rest of the dialog.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.FormatResolution(System.Int32,System.Int32)">
            <summary>
            Converts the given width and height into a formatted string
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.FormatRefreshRate(System.Int32)">
            <summary>
            Converts the given refresh rate into a formatted string
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.AdapterFormatChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected adapter format by rebuilding the
            resolution list and back buffer format list.  Updating the selected 
            resolution and back buffer format will trigger updates of the rest 
            of the dialog.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.ResolutionChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected resolution by rebuilding the
            refresh rate list.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.RefreshRateChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected refresh rate.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.BackBufferFormatChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected back buffer format by rebuilding
            the depth/stencil format list, multisample type list, and vertex
            processing type list.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.DepthStencilBufferFormatChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected depth/stencil buffer format.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.MultisampleTypeChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected multisample type.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.MultisampleQualityChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected multisample quality.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.VertexProcessingChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected vertex processing type.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.D3DSettingsForm.PresentIntervalChanged(System.Object,System.EventArgs)">
            <summary>
            Respond to a change of selected vertex processing type.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.GraphicsUtility">
            <summary>
            Various helper functions for graphics samples
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.#ctor">
            <summary>
            Private Constructor 
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.InitMaterial(System.Drawing.Color)">
            <summary>
            Initializes a Material structure, setting the diffuse and ambient
            colors. It does not set emissive or specular colors.
            </summary>
            <param name="c">The ambient and diffuse color</param>
            <returns>A defined material</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.InitLight(Microsoft.DirectX.Direct3D.Light,Microsoft.DirectX.Direct3D.LightType,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a light, setting the light position. The
            diffuse color is set to white; specular and ambient are left as black.
            </summary>
            <param name="light">Which light to initialize</param>
            <param name="ltType">The type</param>
            <param name="x">The x-position of the light</param>
            <param name="y">The y-position of the light</param>
            <param name="z">The z-position of the light</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.CreateTexture(Microsoft.DirectX.Direct3D.Device,System.String,Microsoft.DirectX.Direct3D.Format)">
            <summary>
            Helper function to create a texture. It checks the root path first,
            then tries the DXSDK media path (as specified in the system registry).
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.CreateTexture(Microsoft.DirectX.Direct3D.Device,System.String)">
            <summary>
            Helper function to create a texture. It checks the root path first,
            then tries the DXSDK media path (as specified in the system registry).
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetCubeMapViewMatrix(Microsoft.DirectX.Direct3D.CubeMapFace)">
            <summary>
            Returns a view matrix for rendering to a face of a cubemap.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetRotationFromCursor(System.Windows.Forms.Form,System.Single)">
            <summary>
            Returns a quaternion for the rotation implied by the window's cursor position
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetRotationFromCursor(System.Windows.Forms.Form)">
            <summary>
            Returns a quaternion for the rotation implied by the window's cursor position
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.D3DXQuaternionUnitAxisToUnitAxis2(Microsoft.DirectX.Vector3,Microsoft.DirectX.Vector3)">
            <summary>
            Axis to axis quaternion double angle (no normalization)
            Takes two points on unit sphere an angle THETA apart, returns
            quaternion that represents a rotation around cross product by 2*THETA.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.D3DXQuaternionAxisToAxis(Microsoft.DirectX.Vector3,Microsoft.DirectX.Vector3)">
            <summary>
            Axis to axis quaternion 
            Takes two points on unit sphere an angle THETA apart, returns
            quaternion that represents a rotation around cross product by theta.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetColorChannelBits(Microsoft.DirectX.Direct3D.Format)">
            <summary>
            Gets the number of ColorChanelBits from a format
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetAlphaChannelBits(Microsoft.DirectX.Direct3D.Format)">
            <summary>
            Gets the number of alpha channel bits 
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetDepthBits(Microsoft.DirectX.Direct3D.DepthFormat)">
            <summary>
            Gets the number of depth bits
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.GetStencilBits(Microsoft.DirectX.Direct3D.DepthFormat)">
            <summary>
            Gets the number of stencil bits
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsUtility.CreateVertexShader(Microsoft.DirectX.Direct3D.Device,System.String)">
            <summary>
            Assembles and creates a file-based vertex shader
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.GraphicsArcBall">
            <summary>
            An arc ball class
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.SetWindow(System.Int32,System.Int32,System.Single)">
            <summary>
            Set the window dimensions
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.ScreenToVector(System.Int32,System.Int32)">
            <summary>
            Screen coords to a vector
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.OnContainerMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the containers mouse button is down
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.OnContainerMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the containers mouse button has been released
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsArcBall.OnContainerMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the containers mouse is moving
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.Radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.RightHanded">
            <summary>
            Whether this ball is right-handed
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.RotationMatrix">
            <summary>
            The rotation matrix for this ball
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.RotationDeltaMatrix">
            <summary>
            The rotation delta matrix for this ball
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.TranslationMatrix">
            <summary>
            The translation matrix for this ball
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.TranslationDeltaMatrix">
            <summary>
            The translation delta matrix for this ball
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsArcBall.IsBeingDragged">
            <summary>
            Whether this ball is being dragged
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.GraphicsMesh">
            <summary>
            Handles our meshes
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The initial filename</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.#ctor">
            <summary>
            Creates a new graphics mesh
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.Create(Microsoft.DirectX.Direct3D.Device,System.String)">
            <summary>
            Creates a new mesh
            </summary>
            <param name="device">The device used to create the mesh</param>
            <param name="filename">the file to load</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.SetVertexFormat(Microsoft.DirectX.Direct3D.Device,Microsoft.DirectX.Direct3D.VertexFormats)">
            <summary>
            Set the flexible vertex format
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Restore the device objects after the device was reset
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Invalidate our local mesh
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.Dispose">
            <summary>
            Clean up any resources
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.Render(Microsoft.DirectX.Direct3D.Device,System.Boolean,System.Boolean)">
            <summary>
            Actually draw the mesh
            </summary>
            <param name="device">The device used to draw</param>
            <param name="canDrawOpaque">Can draw the opaque parts of the mesh</param>
            <param name="canDrawAlpha">Can draw the alpha parts of the mesh</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.Render(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Draw the mesh with opaque and alpha 
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.GraphicsMesh.DisposeLocalBuffers(System.Boolean,System.Boolean)">
            <summary>
            Cleans up the local vertex buffers/index buffers
            </summary>
            <param name="systemBuffers"></param>
            <param name="localBuffers"></param>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.SystemMesh">
            <summary>
            The system memory mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.LocalMesh">
            <summary>
            The local memory mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.IsUsingMaterials">
            <summary>
            Should we use the mesh materials
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.SystemVertexBuffer">
            <summary>
            Get the vertex buffer assigned to the system mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.LocalVertexBuffer">
            <summary>
            Get the vertex buffer assigned to the Local mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.SystemIndexBuffer">
            <summary>
            Get the Index buffer assigned to the system mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.GraphicsMesh.LocalIndexBuffer">
            <summary>
            Get the Index buffer assigned to the Local mesh
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.DirectXTimer">
            <summary>
            Enumeration for various actions our timer can perform
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.Reset">
            <summary>
            Reset the timer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.Start">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.Stop">
            <summary>
            Stop the timer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.Advance">
            <summary>
            Advance the timer
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.GetAbsoluteTime">
            <summary>
            Get the absolute time
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.GetApplicationTime">
            <summary>
            Get the application time
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.DirectXTimer.GetElapsedTime">
            <summary>
            Get the elapsed time
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.DXUtil">
            <summary>
            Generic utility functions for our samples
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.DXUtil.timeGetTime">
            <summary>
            Gets the current time
            </summary>
            <returns>The time that has elapsed since windows started</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Util.DXUtil.Timer(SnapStream.ViewScape.Util.DirectXTimer)">
            <summary>
            Performs timer opertations. Use the following commands:
            
                     DirectXTimer.Reset - to reset the timer
                     DirectXTimer.Start - to start the timer
                     DirectXTimer.Stop - to stop (or pause) the timer
                     DirectXTimer.Advance - to advance the timer by 0.1 seconds
                     DirectXTimer.GetAbsoluteTime - to get the absolute system time
                     DirectXTimer.GetApplicationTime - to get the current time
                     DirectXTimer.GetElapsedTime - to get the time that elapsed between TIMER_GETELAPSEDTIME calls
            
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.DXUtil.FindMediaFile(System.String,System.String)">
            <summary>
            Returns a valid path to a DXSDK media file
            </summary>
            <param name="path">Initial path to search</param>
            <param name="filename">Filename we're searching for</param>
            <returns>Full path to the file</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Util.DXUtil.AppendDirectorySeparator(System.String)">
            <summary>
            Returns a valid string with a directory separator at the end.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.DXUtil.SdkMediaPath">
            <summary>
            Returns the DirectX SDK media path
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.RegistryValue">
            <summary>
            Encapsulates a registry value for launching purposes
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.RegistryValue.#ctor">
            <summary>
            Creates a new blank registry value object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.RegistryValue.#ctor(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Creates a new registry value object with the given parameters set
            </summary>
            <param name="baseKey">The base key</param>
            <param name="subKeyPath">The subkey path</param>
            <param name="valueName">The value name</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.RegistryValue.GetRegistryValue">
            <summary>
            Retrieves the registry value
            </summary>
            <returns>The registry value</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Util.RegistryValue.BaseKey">
            <summary>
            The base key of this registry key
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.RegistryValue.SubKeyPath">
            <summary>
            The subkey path for this registry key
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.RegistryValue.ValueName">
            <summary>
            The value name of this registry key
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Util.Launcher">
            <summary>
            Handles launching another application
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_XPOSITION">
            <summary>
            Parameter that sets the x-position of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_YPOSITION">
            <summary>
            Parameter that sets the y-position of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_WIDTH">
            <summary>
            Parameter that sets the width of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_HEIGHT">
            <summary>
            Parameter that sets the height of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_BORDER">
            <summary>
            Parameter that sets the border of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._TAG_DISPLAYMODE">
            <summary>
            Parameter that sets the display mode of the launched app
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._SETFOCUS_TIMEOUT">
            <summary>
            Timeout (in seconds) for the loop that waits to give the application focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._exePath">
            <summary>
            Registry location of the value that contains the directory we want to launch the exe from
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._exeName">
            <summary>
            Reigstry location of the value that contains the executable name we want to launch
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._exeFullPath">
            <summary>
            Registry location of the value that contains the fullpath (dir + exe) that we want to launch
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._fullpath">
            <summary>
            Full path that we want to launch from
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._borderOnValue">
            <summary>
            Value to substitute when the form border is present
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._borderOffValue">
            <summary>
            Value to substitute when the form border is not present
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._modeWindowedValue">
            <summary>
            Value to substitute when the form is in windowed mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._modeFullscreenValue">
            <summary>
            Value to substitute when the form is in fullscreen mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._commandLine">
            <summary>
            Command line string to parse
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._finalCommandLine">
            <summary>
            Command line after the substitutions have been made
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Util.Launcher._giveFocus">
            <summary>
            Determines if the launched application should be given focus
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.#ctor">
            <summary>
            Creates a new launcher object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.Launch">
            <summary>
            Launches the current executable with the current command line.  Does not perform substitutions
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.Launch(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Launches the current executable with the current command line.
            Performs the substitutions with the values passed in.
            </summary>
            <param name="xpos">The x position of the launched app</param>
            <param name="ypos">The y position of the launched app</param>
            <param name="width">The width of the launched app</param>
            <param name="height">The height of the launched app</param>
            <param name="hasBorders">Whether the launched app has borders</param>
            <param name="windowed">Whether the launched app is in windowed mode</param>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.PopulateFullPath">
            <summary>
            This function will populate the fullpath variable
            Steps:
             1. If the full path is already populated, return that value
             2. If the _exeFullPath RegistryValue is not null, use that value to populate the full path
             3. If the _exePath and _exeName RegistryValues are not null, use them to populate the full path
             4. ELSE do nothing
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.GetCommandLineArgs(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Replaces the TAGS found in the command line with the proper form values
            then returns the new command line.
            </summary>
            <param name="xpos">The x position</param>
            <param name="ypos">The y position</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="hasBorders">Whether the app has borders</param>
            <param name="windowed">Whether the app is windowed</param>
            <returns>
            Command line to use when launching the exe
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Util.Launcher.InternalLaunch">
            <summary>
            Helper function that launches an external process
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.FullExecutablePath">
            <summary>
            The full path to the executable to launch
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.RegPath">
            <summary>
            The registry value for the path to the executable
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.RegExeName">
            <summary>
            The registry value for the executable filename
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.RegFullExecutablePath">
            <summary>
            The registry value for the full executable path
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.BorderOnValue">
            <summary>
            Value to substitute when the form border is present
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.BorderOffValue">
            <summary>
            Value to substitute when the form border is not present
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.DisplayModeWindowedValue">
            <summary>
            Value to substitute when the form is in windowed mode
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.DisplayModeFullscreenValue">
            <summary>
            Value to substitute when the form is in fullscreen mode
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.CommandLine">
            <summary>
            Command line string to parse
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Util.Launcher.GiveFocus">
            <summary>
            Determines if the launched application should be given focus
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.AlbumGrid">
            <summary>
            A grid for displaying music albums
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Grid">
            <summary>
            A simple grid for displaying items on the screen
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.AnimationWindow">
            <summary>
            A Window object with fading built-in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow.DefaultFadeInTicks">
            <summary>
            The default number of ticks to fade in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow.DefaultFadeOutTicks">
            <summary>
            The default number of ticks to fade out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow._fader">
            <summary>
            The animation fader for this window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow._defaultFadeOut">
            <summary>
            The default number of ticks to fade out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow._defaultFadeIn">
            <summary>
            The default number of ticks to fade in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow._fadeOutFloor">
            <summary>
            The alpha value to fade out to
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AnimationWindow._fadeInCeiling">
            <summary>
            The alpha value to fade in to
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.#ctor">
            <summary>
            Initializes a new instance of the <c>AnimationWindow</c> class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FrameMove(System.DateTime)">
            <summary>
            Overridden to perform fade on a frame by frame basis.
            </summary>
            <param name="currentTime">The time stamp used in animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to fade in, if we're visible
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeTo(System.Int32)">
            <summary>
            Fades this AnimationWindow to a specific alpha value.
            </summary>
            <param name="end">The alpha value to fade to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeTo(System.Int32,System.Int32)">
            <summary>
            Fades this AnimationWindow to a specific alpha value.
            </summary>
            <param name="ticks">The amount of time to perform the fade</param>
            <param name="end">The alpha value to fade to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeIn">
            <summary>
            Fades in with the default fade-in ticks
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeIn(System.Int32)">
            <summary>
            Fades-in with the specified number of clock ticks
            </summary>
            <param name="ticks">Number of ticks to fade</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeOut">
            <summary>
            Fades out with the default number of ticks
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.FadeOut(System.Int32)">
            <summary>
            Fades out with the specified number of ticks
            </summary>
            <param name="ticks">The number of clock ticks to fade</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.RaiseHidingEvent(System.Int32)">
            <summary>
            Raises our hiding event
            </summary>
            <param name="ticks">Number of clock ticks we'll be fading</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AnimationWindow.RaiseShowingEvent(System.Int32)">
            <summary>
            Raises our showing event
            </summary>
            <param name="ticks">Number of clock ticks we'll be fading</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AnimationWindow.Fading">
            <summary>
            Indicates whether this AnimationWindow is performing any fading
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AnimationWindow.FadingIn">
            <summary>
            Indicates whether this AnimationWindow is fading in
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AnimationWindow.FadingOut">
            <summary>
            Indicates whether this AnimationWindow is fading out
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AnimationWindow.DefaultFadeOut">
            <summary>
            The default number of ticks to fade out
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AnimationWindow.DefaultFadeIn">
            <summary>
            The default number of ticks to fade in
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.AnimationWindow.Hiding">
            <summary>
            Inform anyone who cares that we are hiding
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.AnimationWindow.Showing">
            <summary>
            Inform anyone who cares that we are showing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._ITEM_SCALING_FACTOR">
            <summary>
            This number is used to scale the items in the grid for spacing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._items">
            <summary>
            Our internal list of grid items (base type must be GridItem)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._verticalItems">
            <summary>
            The number of vertical items in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._horizontalItems">
            <summary>
            The number of horizontal items in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._firstIndex">
            <summary>
            The first visible item index
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._selectedIndex">
            <summary>
            The selected item index
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._mouseDownItem">
            <summary>
            The index where the last mouse down event happened (reset on mouse up events)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._mustRebuild">
            <summary>
            Tells us whether we need to rebuild the grid (did we add items?)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._scrollBar">
            <summary>
            Our scrollbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._upKeys">
            <summary>
            Key codes that scroll up in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._downKeys">
            <summary>
            Key codes that scroll down in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._pageUpKeys">
            <summary>
            Key codes that page up in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._pageDownKeys">
            <summary>
            Key codes that page down in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._leftKeys">
            <summary>
            Key codes that scroll left in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._rightKeys">
            <summary>
            Key codes that scroll right in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._executeKeys">
            <summary>
            Key codes that execute the current grid entry
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Grid._playKeys">
            <summary>
            Key codes that play the current grid entry
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.#ctor">
            <summary>
            A simple constructor that initializes any object variables
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.AddItem(SnapStream.ViewScape.Widgets.GridItem)">
            <summary>
            Adds a new grid item.
            </summary>
            <param name="item">
            This is the item to be added.
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.InsertItem(System.Int32,SnapStream.ViewScape.Widgets.GridItem)">
            <summary>
            Inserts a grid item at the given index
            </summary>
            <param name="index">The index to insert the item at</param>
            <param name="item">This is the item to be added.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.RemoveItem(SnapStream.ViewScape.Widgets.GridItem)">
            <summary>
            Removes a grid item.
            </summary>
            <param name="item">
            This is the item to be removed.
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.GetItem(System.Int32)">
            <summary>
            Allows the consumer to get a grid item by index
            </summary>
            <param name="index">
            The index of the item to get
            </param>
            <returns>
            The item at the specified id, if not found then null
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.ClearGrid">
            <summary>
            Clears the grid of all items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.ChangeSelectedIndex(System.Int32)">
            <summary>
            Changes the selected index
            </summary>
            <param name="newIndex">The new index</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.ScrollBarNeeded">
            <summary>
            Tells us whether we need to show the scrollbar
            </summary>
            <returns>True IFF we should show the scrollbar</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.UpdateScrollBar">
            <summary>
            Updates the scrollbar's values
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.Rebuild">
            <summary>
            Rebuilds the grid.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.EnsureSelectedIndexVisible">
            <summary>
            Ensures that the selected index is a visible item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our bounds and then recalculates the bounds of our visible items
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles key down messages
            </summary>
            <param name="sender">
            The sender of the message
            </param>
            <param name="e">
            The input parameters describing the key event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse wheel events
            </summary>
            <param name="sender">
            The sender of the message
            </param>
            <param name="e">
            Parameters used to describe the mouse wheel event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse move events
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Parameters used to describe the mouse move event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse button down events
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Parameters used to describe this mouse down event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse button up events
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            Parameters used to describe this mouse up event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.FrameMove(System.DateTime)">
            <summary>
            Overridden to rebuild the grid if needed
            </summary>
            <param name="currentTime">The current animation time stamp</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.OnScrollBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our scrollbar scroll events
            </summary>
            <param name="sender">The scrollbar</param>
            <param name="args">Contains the new position and some other info</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.RaiseSelectedEvent">
            <summary>
            Raises the selected event to our selected event handlers
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.RaisePlayedEvent">
            <summary>
            Raises the played event to our played event handlers
            </summary>
            <returns>True IFF the event was marked as handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Grid.RaiseExecutedEvent">
            <summary>
            Raises the executed event to our executed event handlers
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.VerticalItems">
            <summary>
            The number of visible vertical grid items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.HorizontalItems">
            <summary>
            The number of visible horizontal items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.FirstIndex">
            <summary>
            The index of the first visible item (top-left)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.LastIndex">
            <summary>
            The index of the last visible item (bottom-right)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.SelectedIndex">
            <summary>
            The index of the selected grid item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.SelectedRow">
            <summary>
            The currently selected row (0-based)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.SelectedColumn">
            <summary>
            The currently selected column (0-based)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.TotalRows">
            <summary>
            The total number of rows in this grid (dependent on current count)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.TotalColumns">
            <summary>
            The total number of columns in this grid (not dependent on current count)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.SelectedItem">
            <summary>
            The currently selected grid item, otherwise null
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.ItemHeight">
            <summary>
            The screen height of a grid item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.Count">
            <summary>
            The number of items currently in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.UpKeys">
            <summary>
            Key codes that scroll up in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.DownKeys">
            <summary>
            Key codes that scroll down in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.PageUpKeys">
            <summary>
            Key codes that page up in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.PageDownKeys">
            <summary>
            Key codes that page down in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.LeftKeys">
            <summary>
            Key codes that scroll left in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.RightKeys">
            <summary>
            Key codes that scroll right in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.ExecuteKeys">
            <summary>
            Key codes that execute the current grid entry
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Grid.PlayKeys">
            <summary>
            Key codes that play the current grid entry
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Grid.Selected">
            <summary>
            Our grid item selected event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Grid.Executed">
            <summary>
            Our grid item executed event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Grid.Played">
            <summary>
            Our grid item played event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Grid.SelectedEventHandler">
            <summary>
            Format for grid item selected event handlers
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Grid.ExecutedEventHandler">
            <summary>
            Format for grid item executed event handlers
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Grid.PlayedEventHandler">
            <summary>
            Format for grid item played event handlers
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.IStringList">
            <summary>
            Defines an object can be represented as an array of strings
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IStringList.Strings">
            <summary>
            Retrieves the list of strings representing this object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._EMPTY_TEXT">
            <summary>
            The text to display when there are no albums in the media library
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._UNKNOWN">
            <summary>
            The text to display when a field is unknown or invalid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._albumsToLoad">
            <summary>
            List of albums in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._loadedAlbums">
            <summary>
            Allows us to easily keep track of which albums are loaded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._shouldLoadAlbums">
            <summary>
            Flag that tells us whether or not we should be loading albums.
            If set to false any loads that are in progress will be aborted.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._loadingAlbums">
            <summary>
            Flag that tells us whether we are currently loading albums.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._albumsLoaded">
            <summary>
            Whether or not the albums are completely loaded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._emptyText">
            <summary>
            The text to display the empty message
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumGrid._exitKeys">
            <summary>
            Key codes that raise our exit event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.#ctor">
            <summary>
            Creates a new album grid
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle exit keys
            </summary>
            <param name="sender">Not used</param>
            <param name="e">KeyEventArgs</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.DisposeCore">
            <summary>
            Overriden to ensure that the loading thread has stopped
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.FrameMove(System.DateTime)">
            <summary>
            Overriden to allow loading of any unloaded album items
            </summary>
            <param name="currentTime">Time stamp used for animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.StartLoadingAlbumGrid">
            <summary>
            Starts loading of the album art
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.PauseLoadingAlbumGrid">
            <summary>
            Pauses loading of the album art
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.GetSelectedAlbumName">
            <summary>
            Retrieves the album name of the selected album
            </summary>
            <returns>The selected album name</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.GetSelectedAlbumID">
            <summary>
            Retrieves the album id of the selected album
            </summary>
            <returns>The selected album id</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.AlbumLoadingProc">
            <summary>
            Does the actual work of loading albums
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.AddAlbumItem(SnapStream.ViewScape.Widgets.AlbumItem)">
            <summary>
            Adds an album
            </summary>
            <param name="item">The album to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.OnMediaLibraryChanged(System.Object,SnapStream.ViewScape.Widgets.LibraryChangedEventArgs)">
            <summary>
            Handles the LibraryChanged event
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumGrid.RaiseExitEvent">
            <summary>
            Raises our exit event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumGrid.EmptyText">
            <summary>
            The text to display the empty message
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumGrid.AreAlbumsLoaded">
            <summary>
            True if all albums are loaded, false otherwise
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumGrid.ExitKeys">
            <summary>
            Key codes that raise our exit event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.AlbumGrid.Exit">
            <summary>
            Signals that the grid wishes to exit
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumGrid.SnapStream#ViewScape#Widgets#IStringList#Strings">
            <summary>
            The list of albums in the grid as a string array
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.AlbumArtSource">
            <summary>
            Specifies which source to use for album art
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumArtSource.Auto">
            <summary>
            Automatically determine and use the appropriate album art source
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumArtSource.Folder_jpg">
            <summary>
            Use Folder.jpg images as album art
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumArtSource.WindowsMediaPlayer">
            <summary>
            Use Windows Media Player album art
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumArtSource.ID3">
            <summary>
            Use ID3-embedded album art
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayListStatus">
            <summary>
            Specifies the status of the items of the playlist in conjunction
            with the current playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayListStatus.NotQueued">
            <summary>
            None of the items of this playlist are in the current playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayListStatus.PartiallyQueued">
            <summary>
            Some of the items of this playlist are in the current playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayListStatus.FullyQueued">
            <summary>
            All of the items of this playlist are in the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.AlbumItem">
            <summary>
            A grid item that displays a music album
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GridItem">
            <summary>
            An item displayed in a grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GridItem._selected">
            <summary>
            Whether or not this item is selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GridItem._animator">
            <summary>
            The animator that controls this item's position
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GridItem.#ctor">
            <summary>
            Creates a new grid item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GridItem.FrameMove(System.DateTime)">
            <summary>
            Animates us to our newest set position
            </summary>
            <param name="currentTime">
            The current time stamp for animation
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GridItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This override sets the new bounds to our animator instead of setting our actual
            bounds, if we are visible
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GridItem.Selected">
            <summary>
            Whether this grid item is selected or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._ALBUM_DEFAULT_FILE">
            <summary>
            The default album image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._HIGHLIGHT_FILE">
            <summary>
            The highlight image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._FLASH_TIME">
            <summary>
            100-ns intervals for the highlight to flash (1s)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._MIN_FLASH_OPACITY">
            <summary>
            The lowest opacity value used in highlight flashing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._MAX_FLASH_OPACITY">
            <summary>
            The highest opacity value used in highlight flashing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._queuedStateImage">
            <summary>
            The image for the queued state of this album's items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._albumName">
            <summary>
            The name of this album
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._albumID">
            <summary>
            The id of this album
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._highlightAlpha">
            <summary>
            The current alpha value for the highlight texture pulsing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.AlbumItem._alphaAnimator">
            <summary>
            Flashes the highlight image
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumItem.#ctor(System.String)">
            <summary>
            Creates a new album item
            </summary>
            <param name="albumID">The album id of the new album</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumItem.FrameMove(System.DateTime)">
            <summary>
            Calculates the alpha value for the highlight
            </summary>
            <param name="currentTime">
            The time stamp used in animation
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.AlbumItem.Render">
            <summary>
            Overridden to paint the album art image and highlight
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumItem.AlbumArtPath">
            <summary>
            The default image for this album
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumItem.HighlightAlpha">
            <summary>
            The current alpha value for the highlight texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumItem.AlbumName">
            <summary>
            The name of this album
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumItem.AlbumID">
            <summary>
            The id of this album
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.AlbumItem.QueuedStateImage">
            <summary>
            The image for the queued state of this album's items
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FadingEventArgs">
            <summary>
            Provides data for the <c>Showing</c> and <c>Hiding</c> events.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FadingEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the FadingEventArgs class.
            </summary>
            <param name="ticks">The timespan in ticks over which the fade will occur.</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FadingEventArgs.Ticks">
            <summary>
            The timespan in ticks over which the fade will occur.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FadingEventHandler">
            <summary>
            Represents a method that will handle the <c>Showing</c> or <c>Hiding</c> event of a AnimationWindow
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Animator">
            <summary>
            Class used for animation.
            1. Used to animate from a start rectangle to an end rectangle over a period of time.
            2. Used to animate from a minimum value to a maximum value over a period of time.
            3. Used to oscillate from a minimum value to a maximum value and back repeatedly.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._DEFAULT_SPAN">
            <summary>
            Default animation span
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._startRect">
            <summary>
            Start rectangle for animation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._endRect">
            <summary>
            End rectangle for animation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._animationSpan">
            <summary>
            Time span to perform the animation or oscillation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._minValue">
            <summary>
            Minimum value used for oscillation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._maxValue">
            <summary>
            Maximum value for osciallation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._lastAction">
            <summary>
            Time the last action (reset) occurred
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._startPosition">
            <summary>
            Position of the start rectangle (relative or absolute) to its parent
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Animator._endPosition">
            <summary>
            Position of the end rectangle (relative or absolute) to its parent
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.#ctor">
            <summary>
            Creates a default animator object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Creates an animator object with the given start and end rectangles
            </summary>
            <param name="start">Start rectangle</param>
            <param name="end">End rectangle</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates an animator object with the given minimum and maximum values
            </summary>
            <param name="minValue">Minimum value</param>
            <param name="maxValue">Maximum value</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.Reset(System.DateTime)">
            <summary>
            Restarts the animation at the given time
            </summary>
            <param name="Now">Time to use to reset the last action</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.Animate(System.DateTime)">
            <summary>
            Returns the intermediate rectangle between the start rectangle and the end 
            rectangle given the current time and the time of the last action
            </summary>
            <param name="now">Current time</param>
            <returns>Intermediate rectangle</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.AnimateValue(System.DateTime)">
            <summary>
            Returns the intermediate value between the minimum value and the maximum value
            given the current time and the time of the last action
            </summary>
            <param name="now">Current time</param>
            <returns>Intermediate value</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.Oscillate(System.DateTime)">
            <summary>
            Oscillates from the minimum value to the maximumvalue and back.
            The time for one iteration (min to max to min) is the animationSpan.
            </summary>
            <param name="now">Current time</param>
            <returns>Value from minimum value to maximum value</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.Active(System.DateTime)">
            <summary>
            Determines if animation is happening given the current time
            </summary>
            <param name="now">Current time</param>
            <returns>True if we are animating, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.AdjustBounds(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Calculates the relative positions of the animations given the application width and height
            </summary>
            <param name="topLevelBounds">Current bounds of the toplevel window</param>
            <param name="baseWidth">Base width for this screen</param>
            <param name="baseHeight">Base height for this screen</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Animator.GetAnimationFraction(System.DateTime)">
            <summary>
            Gets the fraction of the difference between the minimum and maximum value
            </summary>
            <param name="now">Current time</param>
            <returns>Fraction of the difference between the minimum and maximum value</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.Start">
            <summary>
            Start rectangle for animation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.End">
            <summary>
            End rectangle for animation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AnimationSpan">
            <summary>
            Time span to perform the animation or oscillation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.MinimumValue">
            <summary>
            Minimum value used for oscillation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.MaximumValue">
            <summary>
            Maximum value used for oscillation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.LastAction">
            <summary>
            Time the last action (reset) occurred
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.RelativeStartBounds">
            <summary>
            Bounds of the start rectangle relative to its parent
            Note: These bounds will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.StartX">
            <summary>
            X value of the start rectangle relative to its parent
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.StartY">
            <summary>
            Y value of the start rectangle relative to its parent
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.StartWidth">
            <summary>
            Width of the start rectangle
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.StartHeight">
            <summary>
            Height of the start rectangle
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsoluteStartBounds">
            <summary>
            Absolute bounds of the start rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsStartX">
            <summary>
            Absolute X value of the start rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsStartY">
            <summary>
            Absolute Y value of the start rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsStartWidth">
            <summary>
            Absolute width of the start rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsStartHeight">
            <summary>
            Absolute height of the start rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.RelativeEndBounds">
            <summary>
            Bounds of the end rectangle relative to its parent
            Note: These bounds will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.EndX">
            <summary>
            X value of the end rectangle relative to its parent
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.EndY">
            <summary>
            Y value of the end rectangle relative to its parent
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.EndWidth">
            <summary>
            Width of the end rectangle
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.EndHeight">
            <summary>
            Height of the end rectangle
            Note: This value will be scaled with the application width and height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsoluteEndBounds">
            <summary>
            Absolute bounds of the end rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsEndX">
            <summary>
            Absolute X value of the end rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsEndY">
            <summary>
            Absolute Y value of the end rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsEndWidth">
            <summary>
            Absolute width of the end rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Animator.AbsEndHeight">
            <summary>
            Absolute height of the end rectangle relative to its parent
            Note: Bounds will NOT be scaled
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ItemActivatedEventHandler">
            <summary>
            Represents the method that will handle the ItemActivated event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ItemActivatedArgs">
            <summary>
            Class that contains the ItemActivated event arguments
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ItemActivatedArgs._activatedIndex">
            <summary>
            The index of the activated item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ItemActivatedArgs._handled">
            <summary>
            Flag that indicates whether the ItemActivated event was handled
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ItemActivatedArgs.#ctor">
            <summary>
            Initializes a new instance of the ItemActivatedArgs class
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ItemActivatedArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ItemActivatedArgs class with the specified ActivatedIndex
            </summary>
            <param name="index">Index of the activated item</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ItemActivatedArgs.ActivatedIndex">
            <summary>
            The index of the activated item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ItemActivatedArgs.Handled">
            <summary>
            Flag that indicates whether the ItemActivated event was handled
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.BaseList">
            <summary>
            This class only handles functionality that will be common to all lists.
            Since we have vertical and horizontal lists which are intrinsically different, 
            this class does not handle any UI display functionality.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._defaultItemImage">
            <summary>
            The default background image for all items that are not selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._highlightItemImage">
            <summary>
            The default background image for all items that are selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._items">
            <summary>
            Contains the BaseListItems that have been added to the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._mouseDownSelection">
            <summary>
            The index of the item on which mouse down was clicked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._menuName">
            <summary>
            The ID for the menu that this list is associated with
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._autoPlaySounds">
            <summary>
            The sounds the list should play automatically
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._executeKeys">
            <summary>
            The key codes that execute the current list item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._playKeys">
            <summary>
            The key codes that play the current list item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._selectedIndex">
            <summary>
            Index of the currently selected item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._scrollBar">
            <summary>
            Our scrollbar, needs to be created by CreateScrollBar() (children should override)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._scrollBarEnabled">
            <summary>
            Whether the scrollbar is enabled or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseList._itemsToSeparators">
            <summary>
            Contains the separators that have been added to the list indexed by their
            associated items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.#ctor">
            <summary>
            Initializes a new instance of the BaseList class
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overriden to handle execute and play key presses
            </summary>
            <param name="sender">Not used</param>
            <param name="e">KeyEventArgs</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle mouse down events on the list and its items
            </summary>
            <param name="sender">Not used</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle mouse up events on the list and its items
            </summary>
            <param name="sender">Not used</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle mouse move events on the list and its items
            </summary>
            <param name="sender">Not used</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.AddChildCore(System.Object)">
            <summary>
            Overriden to handle adding an item to the list
            </summary>
            <param name="child">Item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.AddItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Adds the given item to the list
            </summary>
            <param name="item">Item to add to the list</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.RemoveItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Removes the selected item from the list
            </summary>
            <param name="item">
            Item to remove
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.Clear">
            <summary>
            Clears all items from the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.CreateScrollBar">
            <summary>
            Creates the scrollbar object. child methods can override this to
            make a real scrollbar that is usable
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.FindPreviousIndex">
            <summary>
            Starts at the currently selected item and searches for the 
            previous selectable item
            </summary>
            <returns>
            Index of the previous selectable item or -1
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.FindPreviousIndex(System.Int32)">
            <summary>
            Starts at the startIndex and searches for the 
            previous selectable item
            </summary>
            <param name="startIndex">
            Index to start the search from
            </param>
            <returns>
            Index of the previous selectable item or -1
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.FindNextIndex">
            <summary>
            Starts at the currently selected item and searches for the 
            next selectable item
            </summary>
            <returns>
            Index of the next selectable item or -1
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.FindNextIndex(System.Int32)">
            <summary>
            Starts at the startIndex and searches for the 
            next selectable item
            </summary>
            <param name="startIndex">
            Index to start the search from
            </param>
            <returns>
            Index of the next selectable item or -1
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.ScrollBarNeeded">
            <summary>
            Tells us whether the scrollbar needs to be painted at the moment
            in this instance, we just return whether the scrollbar is enabled or not
            </summary>
            <returns>Whether the scrollbar should be painted</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.UpdateScrollBar">
            <summary>
            Updates the scrollbar's values
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.AddSeparator(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Adds a separator to the list
            </summary>
            <param name="separator">The separator to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.ShouldPlaySound(SnapStream.ViewScape.Services.Sounds)">
            <summary>
            Determines if the list should play the specified sound
            </summary>
            <param name="sound">The type of sound to play</param>
            <returns>true if the list should play a sound, false if some
            other component will be playing the appropriate sounds</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnScrollBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our scroll bar events
            </summary>
            <param name="sender">In this case, the scrollbar</param>
            <param name="sea">Our params to get information on the scroll event</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.OnReloadMenu(System.String,SnapStream.Menus.Menu)">
            <summary>
            Handles the ReloadHandler event
            </summary>
            <param name="menuId">Not used</param>
            <param name="menu">Menu used to reload this list</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Raises our item activated event
            </summary>
            <param name="index">The index of the activated item in the list</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.RaiseItemPlayedEvent(System.Int32)">
            <summary>
            Raises our item played event
            </summary>
            <param name="index">The index of the played item in the list</param>
            <returns>True IFF the event was handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseList.RaiseSelectedIndexChangedEvent">
            <summary>
            Raises our selected index changed event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.DefaultItemImage">
            <summary>
            The default background image for all items that are not selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.HighlightItemImage">
            <summary>
            The default background image for all items that are selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.SelectedItem">
            <summary>
            Gets or sets the selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.Items">
            <summary>
            Gets the array of items in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.AutoPlaySounds">
            <summary>
            The sounds the list should play automatically
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.ScrollBar">
            <summary>
            Our scrollbar for this list instance
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.Menu">
            <summary>
            Gets or sets the menu name for the list
            Loads the menu from the menu manager
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.ExecuteKeys">
            <summary>
            The key codes that execute the current list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseList.PlayKeys">
            <summary>
            The key codes that play the current list item
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.BaseList.ItemActivated">
            <summary>
            Informs our consumer that the selected item was executed/activated
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.BaseList.ItemPlayed">
            <summary>
            Informs the consumer that the selected item was played
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.BaseList.SelectedIndexChanged">
            <summary>
            Informs the consumer that the selected index has changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.BaseListItem">
            <summary>
            Provides the base class for any list item.
            Note: animation is included in this base class.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._selected">
            <summary>
            Flag that determines if this item is selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._selectable">
            <summary>
            Flag that determines if this item is selectable
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._defaultImage">
            <summary>
            The background image for this item when it is not selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._highlightImage">
            <summary>
            The background image for this item when it is selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._activateAction">
            <summary>
            The action to execute when this item is activated
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._menuItem">
            <summary>
            The menu item information for this list item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BaseListItem._animator">
            <summary>
            Allows for the item to animate itself
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseListItem.#ctor">
            <summary>
            Initializes a new instance of the BaseListItem class
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseListItem.RaiseActivatedEvent">
            <summary>
            Triggers the Activated event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseListItem.RaisePlayedEvent">
            <summary>
            Triggers the Played event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseListItem.FrameMove(System.DateTime)">
            <summary>
            Overriden to handle item animation
            </summary>
            <param name="currentTime">Time stamp to use for animations</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BaseListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overriden to handle item animation
            </summary>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.Selected">
            <summary>
            Flag that determines if this item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.Selectable">
            <summary>
            Flag that determines if this item is selectable
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.DefaultImage">
            <summary>
            The background image for this item when it is not selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.HighlightImage">
            <summary>
            The background image for this item when it is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.Animator">
            <summary>
            Allows for the item to animate itself
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.ActivateAction">
            <summary>
            The action to execute when this item is activated
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BaseListItem.MenuItem">
            <summary>
            The menu item information for this list item
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.BaseListItem.Activated">
            <summary>
            Occurs when an item is executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.BaseListItem.Played">
            <summary>
            Occurs when an item is played
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Button">
            <summary>
            Represents a button which can be clicked by the user to initiate an action.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._defaultImage">
            <summary>
            The default (unhighlighted/unpressed) background for this button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._focusImage">
            <summary>
            The background when the mouse is over this button or it has "focus"
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._selectImage">
            <summary>
            The background when the button is clicked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._hover">
            <summary>
            Whether the mouse is hovering over this button or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._down">
            <summary>
            Whether this button is down or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Button._clickAction">
            <summary>
            The action fired when this button is clicked
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.#ctor">
            <summary>
            Creates a new button
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard/remote support for buttons that have focus
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard/remote support for buttons that have focus
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse events related to our button qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">The mouse position and button</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse events related to our button qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">The mouse position and button</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnMouseOver(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse events related to our button qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">The mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse events related to our button qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">The mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnLostFocus">
            <summary>
            Overridden to reset our background to the default
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.OnFocus">
            <summary>
            Overridden to set our background to the focus background
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.SetDefaultBackground">
            <summary>
            Sets the default background
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.SetFocusBackground">
            <summary>
            Sets the focus background
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.SetSelectBackground">
            <summary>
            Sets the highlight/selected background
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.FireClick">
            <summary>
            Raises our button clicked event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Button.RaiseClickedEvent(System.EventArgs)">
            <summary>
            Raises our button click event
            </summary>
            <param name="e">
            Empty Args
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.Image">
            <summary>
            Gets or sets the default image for the button.
            </summary>
            <remarks>
            The default image is the background that will be used when the user is not interacting with the button.
            This property can be set in SkinDefaults.xml.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.FocusImage">
            <summary>
            Gets or sets the focus image for the button.
            </summary>
            <remarks>
            The focus image is the background that will be used when the user is hovering over the button.
            This property can be set in SkinDefaults.xml.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.SelectImage">
            <summary>
            Gets or sets the selected image for the button.
            </summary>
            <remarks>
            The selected image is the background that will be used when the user is clicking the button.
            This property can be set in SkinDefaults.xml.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.ClickAction">
            <summary>
            The action fired when this button is clicked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.Hover">
            <summary>
            Whether the mouse is hovering over this button or not
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Button.Down">
            <summary>
            Whether this button is down or not
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Button.Click">
            <summary>
            Occurs when our button is clicked
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CheckType">
            <summary>
            The different types of checks that can be performed before adding a menu item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckType.None">
            <summary>
            No checks needed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckType.IsBTVInstalled">
            <summary>
            Checks to see whether Beyond TV is installed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckType.IsQuickDVDInstalled">
            <summary>
            Checks to see whether Quick DVD is installed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuChecks">
            <summary>
            Handles menu item adding checks
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuChecks.PassesCheck(SnapStream.ViewScape.Widgets.CheckType)">
            <summary>
            Determines whether the specified check passed or failed
            </summary>
            <param name="type">The type of check to perform</param>
            <returns>True IFF the check passed</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CenteredMenu">
            <summary>
            Displays a centered highlight underneath which the list of items scrolls
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextList">
            <summary>
            List used to display textual items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextList._upKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextList._downKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextList._pageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextList._pageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.#ctor">
            <summary>
            Creates a new text list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.CreateScrollBar">
            <summary>
            Creates our vertical scrollbar instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.ScrollBarNeeded">
            <summary>
            Tells us whether to paint the scrollbar
            </summary>
            <returns>Whether the scrollbar should be painted</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.OnScrollBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our scroll events by using ChangeSelectedIndex instead of the base method
            which only sets the SelectedIndex, which isn't enough for us
            </summary>
            <param name="sender">The scrollbar</param>
            <param name="sea">Params used to find out more about the scroll event</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle list navigation
            </summary>
            <param name="sender">The sender of the key event</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle list navigation
            </summary>
            <param name="sender">The sender of this mouse event</param>
            <param name="e">Contains the mouse wheel delta</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the scrollbar and update the list items properly
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.FrameMove(System.DateTime)">
            <summary>
            Overridden to rebuild the list, handling any animation of items
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.Clear">
            <summary>
            Overridden to reset the top visible item when clearing
            otherwise, the list gets into some really weird state
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.RemoveItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Overridden to signal that the list needs to be rebuilt
            </summary>
            <param name="item">The list item being removed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.AddChildCore(System.Object)">
            <summary>
            Overridden to add list separators and text list items appropriately
            </summary>
            <param name="child">The child object being added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.AddItem(SnapStream.ViewScape.Widgets.TextListItem)">
            <summary>
            Adds a new text list item
            </summary>
            <param name="item">The text list item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.AddTextItem(System.String)">
            <summary>
            Creates and adds a new text list item for the given text
            </summary>
            <param name="text">The text displayed in the new text list item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.AddTextItem(System.String,System.String)">
            <summary>
            Creates and adds a new text list item for the given text and value
            </summary>
            <param name="textToSet">The text displayed in the new text list item</param>
            <param name="valueToSet">The value assigned to the new text list item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.ScrollUp">
            <summary>
            Scrolls up 1 item in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.ScrollDown">
            <summary>
            Scrolls down 1 item in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.FindString(System.String)">
            <summary>
            Finds the list items with the given displayed text
            </summary>
            <param name="s">The text to match</param>
            <returns>The items found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.FindString(System.String,System.Boolean)">
            <summary>
            Finds the list items with the given displayed text, possibly ignoring case
            </summary>
            <param name="s">The text to match</param>
            <param name="ignoreCase">Whether to ignore the case when comparing text</param>
            <returns>The items found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.AddTextDefaults(SnapStream.ViewScape.Widgets.TextListItem)">
            <summary>
            Adds the item to the list and adds the list defaults to the item
            </summary>
            <param name="item">
            Item to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.ChangeSelectedIndex(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Will attempt to change the selecteIndex to the newindex.
            If change is successful, the list will be rebuilt.
            </summary>
            <param name="newIndex">
            Index to set as selected
            </param>
            <param name="useAnimation">
            True to animate on rebuild
            </param>
            <param name="playSound">
            Whether to play sounds for navigation events
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.UpdateBuildParameters">
            <summary>
            Calculates all of the padding and item sizes.
            Should be called any time one of the parameters change.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.RebuildBounds(System.Boolean)">
            <summary>
            Rebuild the bounds of the items in the list
            </summary>
            <param name="useAnimation"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.UpdateTopVisibleItem">
            <summary>
            Ensures that the selected item is visible
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.JumpDownIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.JumpUpIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.HandleSeparatorBounds(SnapStream.ViewScape.Widgets.BaseListItem,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Properly sets the bounds on a list separator item
            </summary>
            <param name="item">The list item above the list separator</param>
            <param name="newBounds">The new bounds of the list item</param>
            <param name="useAnimation">Whether to use animation</param>
            <param name="itemVisible">Whether the list item above this separator is visible</param>
            <param name="fadeTicks">The number of ticks to fade out if we need to hide this separator</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Overridden to play the select sound when an item is activated
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextList.CreateObject(System.Type)">
            <summary>
            Creates new text list items and list separators
            with the proper defaults set for this list
            </summary>
            <param name="type">The type to create</param>
            <returns>The created object or null</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.DefaultItemTextColor">
            <summary>
            The default unselected text color for items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.DefaultItemTextHeightPercent">
            <summary>
            The default text height percent for items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.HighlightItemTextColor">
            <summary>
            The default text color for selected items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.SelectedItem">
            <summary>
            The currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.SelectedIndex">
            <summary>
            The index of the currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.VisibleItems">
            <summary>
            The number of visible items at any given time
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.GridPadding">
            <summary>
            Percent of the height that you wish to pad as a decimal (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.UpKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.DownKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.PageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.PageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.GridPaddingPixels">
            <summary>
            The number of pixels to pad between items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.ItemHeight">
            <summary>
            The current height of items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.ItemWidth">
            <summary>
            The current width of items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextList.SnapStream#ViewScape#Widgets#IStringList#Strings">
            <summary>
            An array of the text in the items in this list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CenteredMenu._FADE_TICKS">
            <summary>
            The number of ticks to fade the menu items in and out
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.#ctor">
            <summary>
            Creates a new centered menu
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.AddMenuItem(System.String,System.String,SnapStream.ViewScape.Util.Launcher)">
            <summary>
            Adds a menu item
            </summary>
            <param name="displayText">The text to display as the name</param>
            <param name="displayGraphic">The graphic to display</param>
            <param name="appLauncher">The app launcher tied to this item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.AddMenuItem(System.String,System.String,System.String)">
            <summary>
            Adds a menu item
            </summary>
            <param name="displayText">The text to display as the name</param>
            <param name="displayGraphic">The graphic to display</param>
            <param name="windowToShow">The screen/window to display when this menu item is activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.AddMenuItem(SnapStream.ViewScape.Widgets.MenuListItem)">
            <summary>
            Adds a menu item
            </summary>
            <param name="item">The new menu item to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to swallow the mouse move messages so the list class
            doesn't spoil our animation
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.AddMenuItemHelper(SnapStream.ViewScape.Widgets.MenuListItem)">
            <summary>
            Adds the item to the list
            Adds the default settings for the ceneterd menu items if necessary
            </summary>
            <param name="item">
            Item to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.RebuildBounds(System.Boolean)">
            <summary>
            Rebuilds the bounds of all of our list items and animates things
            </summary>
            <param name="useAnimation">Whether or not to animate the list items</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Overridden to
            </summary>
            <param name="index">The index of the item that was activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.AddChildCore(System.Object)">
            <summary>
            Overridden to add the new child as a menu item if it is one
            </summary>
            <param name="child">The child object being added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CenteredMenu.CreateObject(System.Type)">
            <summary>
            Overridden to create a new menu item
            </summary>
            <param name="type">The type being created</param>
            <returns>The menu item we created, otherwise null</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CheckBox">
            <summary>
            A user-clickable checkbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._defaultImage">
            <summary>
            The default background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._hoverImage">
            <summary>
            The background image when the mouse is over the checkbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._pressedImage">
            <summary>
            The background image when the mouse button is down on the checkbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._disabledImage">
            <summary>
            The background image when this checkbox is disabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._checkImage">
            <summary>
            The foreground image when this checkbox is checked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._hover">
            <summary>
            Whether the mouse is over this checkbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._down">
            <summary>
            Whether the mouse button is down on this checkbox
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._checked">
            <summary>
            Whether this checkbox is checked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._hideBackgroundWithMouse">
            <summary>
            Tells us whether we should hide the background image when the mouse hides
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._mouseActive">
            <summary>
            State variable for the mouse active state
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBox._clickAction">
            <summary>
            The action to perform when this checkbox is clicked
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.#ctor">
            <summary>
            Creates a new checkbox
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle our button-like qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the mouse button and position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle our button-like qualities
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the mouse button and position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnMouseOver(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to show our hover image
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to show our default image
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard/remote input when this checkbox has focus
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard/remote input when this checkbox has focus
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to detect mouse active state
            </summary>
            <param name="msg">Contains the message</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.Render">
            <summary>
            Overridden to draw the correct background and foreground
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBox.RaiseClickedEvent(System.EventArgs)">
            <summary>
            Raises our button click event
            </summary>
            <param name="e">
            Empty Args
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.CheckImage">
            <summary>
            The foreground image when this checkbox is checked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.DefaultImage">
            <summary>
            The default background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.HoverImage">
            <summary>
            The background image when the mouse is over the checkbox
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.PressedImage">
            <summary>
            The background image when the mouse button is down on the checkbox
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.DisabledImage">
            <summary>
            The background image when this checkbox is disabled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.HideBackgroundWithMouse">
            <summary>
            Tells us whether we should hide the background image when the mouse hides
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.Checked">
            <summary>
            Whether this checkbox is checked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.Enabled">
            <summary>
            Whether this control is enabled or not
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBox.ClickAction">
            <summary>
            The action to perform when this checkbox is clicked
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.CheckBox.Click">
            <summary>
            Occurs when this checkbox is clicked
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CheckBoxListItem">
            <summary>
            A list item with a label and a checkbox
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextListItem">
            <summary>
            A list item that displays some text
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.#ctor">
            <summary>
            Creates a new text list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.#ctor(System.String)">
            <summary>
            Creates a new text list item with the given text
            </summary>
            <param name="textToSet">The text to be displayed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.#ctor(System.String,System.Object)">
            <summary>
            Creates a new text list item with the given text and value
            </summary>
            <param name="textToSet">The text to be displayed</param>
            <param name="valueToSet">The underlying list item value</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to set the bounds on the list items for animation
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.SetBoundsInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x">x position in pixels</param>
            <param name="y">y position in pixels</param>
            <param name="width">width in pixels</param>
            <param name="height">height in pixels</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextListItem.AddTextCore(System.String)">
            <summary>
            Overridden to set the text on the text window
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.HorizontalAlign">
            <summary>
            The horizontal alignment of the text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.VerticalAlign">
            <summary>
            The vertical alignment of the text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.Ellipses">
            <summary>
            Specifies how to ellipsize the text in this object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.Text">
            <summary>
            The text displayed in this list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.DefaultTextColor">
            <summary>
            The unselected text color
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.HighlightTextColor">
            <summary>
            The selected text color
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.TextOffsetPercent">
            <summary>
            The percent of this window's width to shave off of the text window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.TextHeightPercent">
            <summary>
            The percent of this window's height to shave off of the text window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.Selected">
            <summary>
            Whether this list item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.TextWindow">
            <summary>
            The text window that contains the text for this list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.Value">
            <summary>
            The value associated with this list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextListItem.MenuItem">
            <summary>
            Overridden to display a menu item as a text list item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBoxListItem._checkBox">
            <summary>
            The checkbox for this list item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CheckBoxListItem._checkBoxPadding">
            <summary>
            The percent of padding to use around the checkbox
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.#ctor">
            <summary>
            Creates a new checkbox list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.#ctor(System.String)">
            <summary>
            Creates a new checkbox list item with the given label
            </summary>
            <param name="text">The label for this list item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.#ctor(System.String,System.Object)">
            <summary>
            Creates a new checkbox list item with the given label and value
            </summary>
            <param name="text">The label for this list item</param>
            <param name="itemValue">The value for this list item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.#ctor(System.String,System.Object,System.Double)">
            <summary>
            Creates a new checkbox list item with the given label, value, and padding
            </summary>
            <param name="text">The label for this list item</param>
            <param name="itemValue">The value for this list item</param>
            <param name="checkBoxPadding">The percent of padding to use around the checkbox</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.InitializeDefaults">
            <summary>
            Common init steps
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to apply the checkbox padding
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.RaiseCheckBoxChangedEvent">
            <summary>
            Raises our checkbox changed event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CheckBoxListItem.OnCheckBoxClick(System.Object,System.EventArgs)">
            <summary>
            Handles our check box being clicked by raising our own event
            </summary>
            <param name="sender">The check box</param>
            <param name="e">Contains the checked state</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBoxListItem.CheckBox">
            <summary>
            The checkbox for this list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBoxListItem.Checked">
            <summary>
            Whether the checkbox is checked or not
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CheckBoxListItem.CheckBoxPadding">
            <summary>
            The percent of padding to use around the checkbox
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.CheckBoxListItem.CheckBoxChanged">
            <summary>
            Informs the consumer that our checkbox has changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DateTimeDisplay">
            <summary>
            A window that displays the date and time in a variety of formats
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextWindow">
            <summary>
            A Window that paints text to itself
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextWindow._text">
            <summary>
            The text to be painted
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextWindow._textColor">
            <summary>
            The color in which to paint the above-mentioned text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextWindow._fontSize">
            <summary>
            The pixel height of the font to request
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextWindow._fontPosition">
            <summary>
            Used to scale the font size correctly
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextWindow._format">
            <summary>
            The text format flags that control how the text is rendered
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.#ctor">
            <summary>
            Does nothing
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.CalculateExtents">
            <summary>
            Calculates the extents of the text drawn by this Text object
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to set the font size to the height
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.AdjustBounds">
            <summary>
            Overridden to adjust the font size properly
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.Render">
            <summary>
            Renders our text to the screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextWindow.AddTextCore(System.String)">
            <summary>
            Set the current text
            </summary>
            <param name="text">
            Text to set
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.Format">
            <summary>
            Format flags that control how text will be drawn.  This gives a single property that can be set to control the alignment,
            ellipsizing, and multiline flags.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.HorizontalAlign">
            <summary>
            The horizontal text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.VerticalAlign">
            <summary>
            The vertical text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.Ellipses">
            <summary>
            Specifies how to ellipsize the text in this object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.Text">
            <summary>
            The text to be painted
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.Color">
            <summary>
            The color in which to paint the above-mentioned text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.FontPixelSize">
            <summary>
            The pixel height of the font to request
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.FontSize">
            <summary>
            The relative height of the font to request
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextWindow.Multiline">
            <summary>
            Whether or not to use multiple lines
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DateTimeDisplay._format">
            <summary>
            The format for the date/time to be displayed in
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DateTimeDisplay.#ctor">
            <summary>
            Creates a new date/time display window
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DateTimeDisplay.FrameMove(System.DateTime)">
            <summary>
            Overridden to snag the most recent time for display
            </summary>
            <param name="currentTime">The current time stamp used in animation</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DateTimeDisplay.FormatString">
            <summary>
            The format for the date/time to be displayed in
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectoryBrowser">
            <summary>
            A directory-based browser
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectoryBrowser._navigator">
            <summary>
            The directory navigator for this browser
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectoryBrowser._heading">
            <summary>
            The heading text displayed at the top
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectoryBrowser._selectedDirectoryInfo">
            <summary>
            The selected directory text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectoryBrowser._selectedDirectoryInfoFormat">
            <summary>
            The format string applied to the selected directory
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.#ctor">
            <summary>
            Creates a new directory browser
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.Cancel(System.Object,System.EventArgs)">
            <summary>
            Calls the Canceled event on this object
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle the cancel key being pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.UpdateSelectedDirectoryText">
            <summary>
            Updates the selected directory text with the currently selected directory
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.OnItemActivated(System.Object,SnapStream.ViewScape.Widgets.ItemActivatedArgs)">
            <summary>
            Overridden to call our DirectorySelected event
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryBrowser.OnSelectedDirectoryChanged(System.Object,System.EventArgs)">
            <summary>
            Updates our selected directory text when the selected directory changes
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.SelectedDirectory">
            <summary>
            The selected directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.SelectedDirectoryInfo">
            <summary>
            The DirectoryInfo object representing the selected directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.Navigator">
            <summary>
            The directory navigator for this browser
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.Heading">
            <summary>
            The heading text displayed at the top
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.SelectedDirectoryText">
            <summary>
            The selected directory text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.SelectedDirectoryFormat">
            <summary>
            The format string applied to the selected directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryBrowser.HeadingText">
            <summary>
            The actual text string displayed in the heading
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectoryBrowser.Canceled">
            <summary>
            Occurs when the object is canceled
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectoryBrowser.DirectorySelected">
            <summary>
            Occurs when a directory is selected
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectoryNavigator">
            <summary>
            Allows navigation and selection of directories on the user's machine.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.#ctor">
            <summary>
            Initializes a new instance of the DirectoryNavigator class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.Refresh">
            <summary>
            Reloads the current directory.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectDirectory(System.String)">
            <summary>
            Browses to the parent of the specified directory and selects the specified directory in the directory list.
            </summary>
            <param name="directory">The directory to select</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectDirectory(System.IO.DirectoryInfo)">
            <summary>
            Browses to the parent of the specified directory and selects the specified directory in the directory list.
            </summary>
            <param name="di">The directory to select</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.BrowseDirectory(System.String)">
            <summary>
            Browses to the specified directory, displaying the contents of the directory in a list.
            </summary>
            <param name="directory">The directory to browse to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.BrowseDirectory(System.IO.DirectoryInfo)">
            <summary>
            Browses to the specified directory, displaying the contents of the directory in a list.
            </summary>
            <param name="directory">The directory to browse to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Raises the ItemActivated event.
            </summary>
            <param name="index">The index of the activated item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.RaiseSelectedIndexChangedEvent">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigator.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard navigation.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The args</param>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectedDirectoryChanged">
            <summary>
            Occurs when a directory is selected.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectoryNavigator.BrowsingDirectoryChanged">
            <summary>
            Occurs when a new directory is browsed to.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.HasStartedBrowsing">
            <summary>
            Gets a value indicating whether or not the user has started browsing.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.RootDirectoryName">
            <summary>
            Gets or sets the root directory name.
            </summary>
            <remarks>
            This value is used to determine the name of the root directory (such as "My Computer") that will
            be presented to the user.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.RootDirectoryImage">
            <summary>
            Gets or sets the image to use for the root directory.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.BackItemImage">
            <summary>
            Gets or sets the image to use for the back item.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.BackItemTextFormat">
            <summary>
            Gets or sets a string that determines what the name of the back item will be.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectItemImage">
            <summary>
            Gets or sets the image to use for the select item.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectItemTextFormat">
            <summary>
            Gets or sets a string that determines what the name of the select item will be.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectedDirectory">
            <summary>
            Gets or sets the selected directory.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectedDirectoryInfo">
            <summary>
            Gets or sets the selected directory as a DirectoryInfo object.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.BrowsingDirectory">
            <summary>
            Gets or sets the directory that is being browsed.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.BrowsingDirectoryInfo">
            <summary>
            Gets or sets the directory that is being browsed as a DirectoryInfo object.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.ShowHiddenDirectories">
            <summary>
            Gets or sets a value indicating whether or not hidden directories should be shown.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.ShowNetworkDirectories">
            <summary>
            Gets or sets a value indicating whether or not network directories should be shown.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.ShowRemovableDrives">
            <summary>
            Gets or sets a value indicating whether or not removable drives should be shown.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.ShowCdromDrives">
            <summary>
            Gets or sets a value indicating whether or not CD-ROMs should be shown.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigator.SelectedItem">
            <summary>
            Gets or sets the selected item in the current view.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem">
            <summary>
            A list item that represents a directory on the user's machine.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.#ctor">
            <summary>
            Initializes a new instance of the DirectoryNavigatorItem class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DirectoryNavigatorItem class.
            </summary>
            <param name="image">The image for this item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the DirectoryNavigatorItem class.
            </summary>
            <param name="text">The text for this item</param>
            <param name="image">The image for this item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Initializes a new instance of the DirectoryNavigatorItem class.
            </summary>
            <param name="di">The DirectoryInfo object for the directory this item represents</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the DirectoryNavigatorItem class.
            </summary>
            <param name="di">The DirectoryInfo object for the directory this item represents</param>
            <param name="useFullPath">Indicates whether or not the full path should be displayed for this item or just the name</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.Render">
            <summary>
            Overridden to render our thumbnails for us
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.SetBoundsInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the thumbnails and back folder/graphic
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.DirectoryInfo">
            <summary>
            Gets or sets the DirectoryInfo associated with this item.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.ContainsDirectories">
            <summary>
            Gets a value indicating whether or not this directory has any child directories.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.DisplayArrow">
            <summary>
            Gets or sets a value indicating whether or not an arrow should be drawn for directories that have children.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.ImagePadding">
            <summary>
            Gets or sets the amount of padding to place around the <see cref="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.Image">Image</see>.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.Image">
            <summary>
            Gets or sets the image that should be displayed for this item.
            </summary>
            <remarks>
            This value will only be used if this DirectoryNavigatorItem is not associated with a directory.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryNavigatorItem.IconBounds">
            <summary>
            Gets the bounds of the icon to draw.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectorySelectorMode">
            <summary>
            Determines the mode that a <see cref="T:SnapStream.ViewScape.Widgets.DirectorySelector">DirectorySelector</see> will operate in.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectorySelectorMode.Select">
            <summary>
            The DirectorySelector will allow selection of multiple directory items.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DirectorySelectorMode.View">
            <summary>
            The DirectorySelector will only allow viewing of directories.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectorySelector">
            <summary>
            Allows the selection and viewing of multiple directories.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectorySelector.#ctor">
            <summary>
            Initializes a new instance of the DirectorySelector class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectorySelector.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard navigation.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event parameters</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.DirectoryList">
            <summary>
            Gets the list that will be used to display directories to the user.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.SelectedDirectoryText">
            <summary>
            Gets the TextWindow that will be used to dispay the selected directory name.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.SelectedDirectoryFormat">
            <summary>
            Gets or sets a value that will be used to determine how the selected directory text is formatted.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.Directories">
            <summary>
            Gets or sets an ArrayList of the directories to display to the user.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.SelectAllText">
            <summary>
            Gets or sets the text to use for the "Select All" list option.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.SelectAllImage">
            <summary>
            Gets or sets the image to use for the "Select All" list option.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.DoneText">
            <summary>
            Gets or sets the text to use for the "Done" list option.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.DoneImage">
            <summary>
            Gets or sets the image to use for the "Done" list option.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.RootDirectoryName">
            <summary>
            Gets or sets the root directory name.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.RootDirectoryImage">
            <summary>
            Gets or sets the root directory image.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.SelectedDirectories">
            <summary>
            Gets an ArrayList of all the directories the user currently has selected.
            </summary>
            <remarks>
            If the <see cref="P:SnapStream.ViewScape.Widgets.DirectorySelector.Mode">Mode</see> property indicates that this selector is just
            viewing directories this property will return an empty ArrayList.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectorySelector.Mode">
            <summary>
            Gets or sets the mode this DirectorySelector is operating in.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectorySelector.Canceled">
            <summary>
            Occurs when the DirectorySelector is cancels.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DirectorySelector.DirectoriesSelected">
            <summary>
            Occurs when the user has finished selecting directories.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DummyForm">
            <summary>
            A bogus form to make the wmp interop stuff compile correctly
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DummyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DummyForm.#ctor">
            <summary>
            Creates a new dummy form
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DummyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DummyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DVDEventHandler">
            <summary>
            Delegate for handling a dvd event from us
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DVDMoviePanel">
            <summary>
            Provides us with a dvd render target that can send us the dvd events
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MoviePanel">
            <summary>
            A simple panel for overlay DirectShow video to render to
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MoviePanel._lastX">
            <summary>
            The last mouse move x coordinate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MoviePanel._lastY">
            <summary>
            The last mouse move y coordinate
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MoviePanel.#ctor">
            <summary>
            Creates our panel
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MoviePanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to ignore repeat mouse moves
            </summary>
            <param name="e">Contains the mouse pointer position</param>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDMoviePanel.WM_DVD_EVENT">
            <summary>
            The windows message dvd event code
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDMoviePanel.#ctor">
            <summary>
            Does nothing, for now
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDMoviePanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Intercepts dvd events and sends them to our consumers
            </summary>
            <param name="m">
            a windows message
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDMoviePanel.RaiseDVDEvent">
            <summary>
            Notify our consumers of a dvd event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.DVDMoviePanel.DVDEvent">
            <summary>
            Our event that we notify when a dvd event occurs
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DvdMode">
            <summary>
            Describes the dvd state we are in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DvdMode.Normal">
            <summary>
            Playback mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DvdMode.Still">
            <summary>
            Still-frame menu mode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DvdMode.Buttons">
            <summary>
            Button menu mode
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DolbyChannels">
            <summary>
            Describes the different dolby channel settings
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DolbyChannels.Two">
            <summary>
            Two Speaker Dolby
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DolbyChannels.Six">
            <summary>
            5.1 Speaker Dolby
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DolbyChannels.Eight">
            <summary>
            7.1 Speaker Dolby
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DolbyChannels.Spdif">
            <summary>
            SPDIF pass-through
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DVDPlayer">
            <summary>
            A simple DVD player based off of the DirectShow video player
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VideoPlayer">
            <summary>
            A simple DirectShow-based video player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.ASPECT_RATIO_CONFIG">
            <summary>
            The name of the video aspect ratio setting in the settings file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.MPEG2_ASPECT_RATIO_CONFIG">
            <summary>
            The name of the mpeg-2 aspect ratio control setting in the settings file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.WS_CHILD">
            <summary>
            Windows Style for a child
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.WS_CLIPCHILDREN">
            <summary>
            Windows Style for clipping child windows
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.WS_CLIPSIBLINGS">
            <summary>
            Windows Style for clipping siblings
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.VFW_S_DUPLICATE_NAME">
            <summary>
            DirectShow return code from RenderFile telling us that it modified the name of the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._MUTE_VOLUME">
            <summary>
            The DX volume value for mute
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._MIN_VOLUME">
            <summary>
            The DX volume value for 0
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._MAX_VOLUME">
            <summary>
            The DX volume value for 100
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._SEEK_ONE">
            <summary>
            The slowest seeking rate (2 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._SEEK_TWO">
            <summary>
            The medium seeking rate (20 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._SEEK_THREE">
            <summary>
            The fastest seeking rate (60 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._MIN_POSITION">
            <summary>
            The very first position in a file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._DEFAULT_SEEK_INTERVAL">
            <summary>
            The default seek interval (in seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._FF_TEXT">
            <summary>
            The display text for fast-forwarding
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._RW_TEXT">
            <summary>
            The display text for rewinding
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._PLAY_TEXT">
            <summary>
            The display text for playing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._PAUSE_TEXT">
            <summary>
            The display text for paused
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._STOP_TEXT">
            <summary>
            The display text for stopped
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._ERROR_MSG">
            <summary>
            The error msg displayed when the video couldn't be played
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._ERROR_DIALOG_TIMEOUT_MS">
            <summary>
            The number of milliseconds of showing before the error dialog times out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._RETURN_TEXT">
            <summary>
            The text for returning to the previous screen when playback ends
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._RESTART_TEXT">
            <summary>
            The text for restarting playback when playback ends
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._END_DIALOG_TIMEOUT_MS">
            <summary>
            The number of milliseconds of showing before the end dialog times out to return to the previous screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.ResetOptionsCmd">
            <summary>
            Resets the aspect ratio and any other options we have
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._initialized">
            <summary>
            Whether this instance is done initializing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._open">
            <summary>
            Whether this instance has a graph open
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._graph">
            <summary>
            The DirectShow graph for this player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._control">
            <summary>
            The DirectShow control interface for this player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._mediaEvent">
            <summary>
            The DirectShow media events interface for this player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._seeking">
            <summary>
            The DirectShow media seeking interface for this player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._video">
            <summary>
            The DirectShow video window interface for this player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._renderTarget">
            <summary>
            Our render target (must be a System.Windows.Forms.Control)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._rotCookie">
            <summary>
            Our cookie for the graph in the ROT
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._hud">
            <summary>
            Our hud
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._lastSeekPosition">
            <summary>
            The last position we seeked to (is "seeked" a word?)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._lastSeekTime">
            <summary>
            The last time we performed a seek operation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._seekRate">
            <summary>
            Our current seeking rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._skipFDuration">
            <summary>
            The duration of forward skips in ticks
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._skipBDuration">
            <summary>
            The duration of backward skips in ticks
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._seekInterval">
            <summary>
            The number of ticks between each set position operation of a seek
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._graphState">
            <summary>
            Our own state of the graph, since the graph lies like a bitch
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._seekingState">
            <summary>
            The graph state before we started seeking
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._cancelID">
            <summary>
            The index of our cancel item in the options
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._aspectRatioID">
            <summary>
            The index of our aspect ratio item in the options
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._resetID">
            <summary>
            The index of our reset item in the options
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._cutList">
            <summary>
            Our cut list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._errorDialog">
            <summary>
            The box that pops up if the video can't be played
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._aspectRatioOption">
            <summary>
            Our aspect ratio option item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._endDialog">
            <summary>
            Our end of playback dialog
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._restartIndex">
            <summary>
            The menu ID for the restart playback item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._returnIndex">
            <summary>
            The menu ID for the return to previous screen item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._windowLeft">
            <summary>
            Our video panel's X position in the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._windowTop">
            <summary>
            Our video panel's Y position in the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._exitKeys">
            <summary>
            Key codes that exit the player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._playKeys">
            <summary>
            Key codes that plays playback
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._pauseKeys">
            <summary>
            Key codes that pauses playback
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._stopKeys">
            <summary>
            Key codes that stop playback
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._skipForwardKeys">
            <summary>
            Key codes that skip forward
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._skipBackwardKeys">
            <summary>
            Key codes that skip backward
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._rewindKeys">
            <summary>
            Key codes that rewind
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._fastForwardKeys">
            <summary>
            Key codes that fast-forward
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._nextSChapKeys">
            <summary>
            Key codes that skip to the next smart chapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer._prevSChapKeys">
            <summary>
            Key codes that skip to the previous smart chapter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.#ctor">
            <summary>
            Creates our video panel and hud and performs all init operations
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.CreateRenderTarget">
            <summary>
            Called only during construction to create our render target
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OpenFile(System.String)">
            <summary>
            Creates a graph and tries to play the given video file
            </summary>
            <param name="filename">
            The video file to attempt to render
            </param>
            <returns>
            The status of the graph building process
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OpenFile(System.String,System.Boolean)">
            <summary>
            Creates a graph and tries to play the given video file
            </summary>
            <param name="filename">
            The video file to attempt to render
            </param>
            <param name="mpeg2ARControl">
            Whether or not to allow mpeg2 aspect ratio control
            </param>
            <returns>
            The status of the graph building process
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.CloseFile">
            <summary>
            Closes and destroys the current graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.AttachVideo">
            <summary>
            Attaches the video window to our environment and adds our graph to the ROT
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.DetachVideo">
            <summary>
            Removes our video window from our environment and removes our graph from the ROT
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.Play">
            <summary>
            Tries to play the graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.Pause">
            <summary>
            Tries to pause the graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.Stop">
            <summary>
            Emulates stopping by pausing the graph and resetting the position to zero
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.SkipForward">
            <summary>
            Skips forward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.SkipBack">
            <summary>
            Skips backward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FastForward">
            <summary>
            Toggles the current seeking rate in the forward direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.Rewind">
            <summary>
            Toggles the current seeking rate in the reverse direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.NextSmartChapter">
            <summary>
            Skips ahead to the next smart chapter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.PrevSmartChapter">
            <summary>
            Skips back to the previous smart chapter
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.GetInterfaces(System.String)">
            <summary>
            Creates all of the needed DirectShow interfaces
            </summary>
            <param name="file">The file to render</param>
            <returns>
            The status of the graph building process so far
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ReleaseInterfaces">
            <summary>
            Releases all of the DirectShow interfaces
            </summary>
            <returns>
            true IFF the operation was completely successful
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnWindowResize(System.Object,System.EventArgs)">
            <summary>
            Handles resize events on our render target
            </summary>
            <param name="sender">
            Don't care
            </param>
            <param name="ea">
            Don't care
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.EmulateSeeking(System.DateTime)">
            <summary>
            Emulates a seeking operation by setting the current position
            </summary>
            <param name="currentTime">
            Time stamp, in ticks, to use for seeking
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ShowEndDialog">
            <summary>
            Shows our end of playback dialog
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ShowErrorDialog">
            <summary>
            Shows our error in playback dialog
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ExitSafely">
            <summary>
            Exits our screen safely
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.AddFilterToGraph(System.Guid,System.String,SnapStream.ViewScape.DirectShow.IGraphBuilder@,SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Attempts to add a filter of the given CLSID to the graph
            </summary>
            <param name="classID">The CLSID of the filter you wish to add</param>
            <param name="name">The name of the filter (only for show)</param>
            <param name="graph">The filter graph</param>
            <param name="filter">Outputs the filter that was added</param>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.CreateFilterFromGuid(System.Guid)">
            <summary>
            Creates a new filter from the given class id
            </summary>
            <param name="classID">The guid of the filter to create</param>
            <returns>The filter that we created or null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FindFilter(System.Guid,SnapStream.ViewScape.DirectShow.IGraphBuilder@,SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Finds the first filter with the given CLSID in the graph
            </summary>
            <param name="classID">The CLSID to look for</param>
            <param name="graph">The filter graph</param>
            <param name="filter">The filter that was found</param>
            <returns>True IFF a filter was found matching the given CLSID</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FindFilter(System.Guid,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Says whether a filter with the given CLSID is in the graph
            </summary>
            <param name="classID">The CLSID to look for</param>
            <param name="graph">The filter graph</param>
            <returns>True IFF a filter was found matching the given CLSID</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ConnectFilterToPin(SnapStream.ViewScape.DirectShow.IBaseFilter,SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Connects a filter to a given pin on another filter
            </summary>
            <param name="filter">The filter to be connected</param>
            <param name="knownPin">The known pin on another filter</param>
            <param name="graph">The filter graph</param>
            <returns>True IFF a connection was made successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ConnectPins(SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IPin,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Connects two pins
            </summary>
            <param name="outPin">The output pin to be connected</param>
            <param name="inPin">The input pin to be connected</param>
            <param name="graph">The filter graph</param>
            <returns>True IFF the connection was made successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FindPin(SnapStream.ViewScape.DirectShow.IBaseFilter,System.String,System.Guid,System.Guid,System.Guid,SnapStream.ViewScape.DirectShow.PinDirection,SnapStream.ViewScape.DirectShow.IPin@)">
            <summary>
            Looks for a pin on the given filter
            </summary>
            <param name="filter">The filter to find a pin on</param>
            <param name="name">The name of the pin to look for (can be null)</param>
            <param name="majorType">The Media Type of the pin</param>
            <param name="subType">The Media SubType of the pin</param>
            <param name="format">The Media Format of the pin</param>
            <param name="dir">The direction of the pin's flow (input/output)</param>
            <param name="pin">The pin that was found</param>
            <returns>True IFF a pin was found that matched the criteria</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.RemoveDirectConnects(SnapStream.ViewScape.DirectShow.IBaseFilter@,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Attempts to remove any filter directly connected to the given filter
            </summary>
            <param name="filter">The filter to be quarantined</param>
            <param name="graph">The filter graph</param>
            <returns>True IFF the operation was carried out with no fatal errors</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ParseCutList(System.String)">
            <summary>
            Attempts to load the cutlist from the given file
            </summary>
            <param name="filename">The filename of the video file we're viewing</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OverlayNeeded(SnapStream.ViewScape.DirectShow.IBaseFilter@,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Tells us whether the overlay filter is needed in the graph (output pin connected?)
            and removes it if it is not needed
            </summary>
            <param name="overlay">The overlay mixer filter</param>
            <param name="graph">The graph</param>
            <returns>True IFF the overlay mixer is hooked up in the graph</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.TurnOffAutoAR(SnapStream.ViewScape.DirectShow.IBaseFilter@)">
            <summary>
            Turns off auto aspect ratio correction on the overlay mixer
            </summary>
            <param name="overlay">The overlay mixer</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.RemoveAllExcept(SnapStream.ViewScape.DirectShow.IBaseFilter@,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Removes all filters from the given graph, except the one specified
            </summary>
            <param name="filter">The filter that should not be removed</param>
            <param name="graph">The graph to remove the filters from</param>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.PrintGraph(SnapStream.ViewScape.DirectShow.IGraphBuilder)">
            <summary>
            Prints the graph
            </summary>
            <param name="graph">The graph to print</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FormatTime(System.Int64)">
            <summary>
            Takes a time, in ticks, and converts it to HH:MM:SS
            </summary>
            <param name="time">
            The time to be converted
            </param>
            <returns>
            The input formatted as a HH:MM:SS string
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnVolumeChanged(System.Object,SnapStream.ViewScape.Services.VolumeEventArgs)">
            <summary>
            Handles volume change events (note, we ignore this event if we're seeking)
            </summary>
            <param name="sender">
            Don't care, but probably the SingletonSoundCache
            </param>
            <param name="vea">
            Contains the new mute and volume values
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.SetVolume(System.Boolean,System.Int32)">
            <summary>
            Sets our volume and mute variables in DirectShow
            </summary>
            <param name="mute">
            true IFF we are to mute sound
            </param>
            <param name="volume">
            0 to 100 indicating the volume level
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.ResetOptions">
            <summary>
            Resets our options to the defaults
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.SyncOptions">
            <summary>
            Reads the current config to the options
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.UsingRoxio(SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Says whether the graph contains the roxio video decoder
            </summary>
            <param name="graph">The graph</param>
            <returns>True IFF the graph contains the roxio video decoder</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.FrameMove(System.DateTime)">
            <summary>
            Emulates seeking and updates the hud
            </summary>
            <param name="currentTime">
            Time stamp to use in all calculations involving the "current time"
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles key down messages
            </summary>
            <param name="sender">
            The sender of the message
            </param>
            <param name="e">
            The input parameters describing the key event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse up events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the button and position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle smart chapters
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the delta value to determine strength and direction</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnVisibleChanged(System.EventArgs)">
            <summary>
            Adds or removes the video panel from the environment
            </summary>
            <param name="e">
            Empty, I think!
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle home and back events properly
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.DisposeCore">
            <summary>
            Overridden to close the graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnPlayClick(System.Object,System.EventArgs)">
            <summary>
            Handles the play button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnPauseClick(System.Object,System.EventArgs)">
            <summary>
            Handles the pause button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnStopClick(System.Object,System.EventArgs)">
            <summary>
            Handles the stop button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnNextClick(System.Object,System.EventArgs)">
            <summary>
            Handles the next button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnPreviousClick(System.Object,System.EventArgs)">
            <summary>
            Handles the previous button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnFastForwardClick(System.Object,System.EventArgs)">
            <summary>
            Handles the fast-forward button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnRewindClick(System.Object,System.EventArgs)">
            <summary>
            Handles the rewind button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnOptionClick(System.Object,System.EventArgs)">
            <summary>
            Handles the option button being clicked on the hud
            </summary>
            <param name="sender">
            The hud
            </param>
            <param name="e">
            Empty
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnExitClick(System.Object,System.EventArgs)">
            <summary>
            Handles the exit button being clicked on the hud
            </summary>
            <param name="sender">The hud</param>
            <param name="e">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnHudSetPosition(System.Object,SnapStream.ViewScape.Widgets.PositionEventArgs)">
            <summary>
            Handles when the hud tells us to change the position (probably from the trackbar)
            </summary>
            <param name="sender">The hud</param>
            <param name="pea">Empty</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnRenderTargetMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Does nothing
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnRenderTargetMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Does nothing
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnRenderTargetMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Toggles the hud when the left mouse button is clicked
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnResetOptions(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Handles the reset button in the options window being pressed
            </summary>
            <param name="sender">The reset option</param>
            <param name="args">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnSelectorIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles events where selectors in our video options were changed
            </summary>
            <param name="sender">The selector that is changed</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnEndDialogExecuted(System.Object,SnapStream.ViewScape.Widgets.MenuBoxEventArgs)">
            <summary>
            Handles our end playback dialog having an item selected
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the selected index</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnEndDialogCanceled(System.Object,SnapStream.ViewScape.Widgets.MenuBoxEventArgs)">
            <summary>
            Handles our end playback dialog being canceled
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnEndDialogTimeout(System.Object,System.EventArgs)">
            <summary>
            Handles our end playback dialog timing out
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnErrorDialogExecuted(System.Object,SnapStream.ViewScape.Widgets.MenuBoxEventArgs)">
            <summary>
            Handles our error dialog being executed
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnErrorDialogCanceled(System.Object,SnapStream.ViewScape.Widgets.MenuBoxEventArgs)">
            <summary>
            Handles our error dialog being canceled
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.OnErrorDialogTimeout(System.Object,System.EventArgs)">
            <summary>
            Handles our error dialog timing out
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VideoPlayer.RaiseExitEvent">
            <summary>
            Raises our exit event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.Hud">
            <summary>
            The video hud for this video player
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.Position">
            <summary>
            get - returns the current tick time stamp in the file
            set - tries to set our position to the given tick time stamp
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.PositionString">
            <summary>
            Retrieves our current position as a time string
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.Duration">
            <summary>
            Retrieves our current file duration
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.DurationString">
            <summary>
            Retrieves our current file duration as a time string
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.Rate">
            <summary>
            Our current playback/seeking rate
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.SeekInterval">
            <summary>
            The number of ticks between each set position operation of a seek
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.ErrorDialog">
            <summary>
            The box that pops up if the video can't be played
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.EndDialog">
            <summary>
            Our end of playback dialog
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.ExitKeys">
            <summary>
            Key codes that exit the player
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.PlayKeys">
            <summary>
            Key codes that plays playback
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.PauseKeys">
            <summary>
            Key codes that pauses playback
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.StopKeys">
            <summary>
            Key codes that stop playback
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.SkipForwardKeys">
            <summary>
            Key codes that skip forward
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.SkipBackwardKeys">
            <summary>
            Key codes that skip backward
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.RewindKeys">
            <summary>
            Key codes that rewind
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.FastForwardKeys">
            <summary>
            Key codes that fast-forward
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.NextSChapKeys">
            <summary>
            Key codes that skip to the next smart chapter
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.PrevSChapKeys">
            <summary>
            Key codes that skip to the previous smart chapter
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.RenderTarget">
            <summary>
            Our current render target
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VideoPlayer.GraphState">
            <summary>
            Retrieves the state of the filter graph
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.VideoPlayer.Exit">
            <summary>
            Our exit event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio">
            <summary>
            The different aspect ratio modes we support
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio.Auto">
            <summary>
            Uses the preferred aspect ratio specified in the video stream
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio.Stretch">
            <summary>
            Stetches the video to fit the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio.FourByThree">
            <summary>
            Resizes to a 4:3 ratio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio.SixteenByNine">
            <summary>
            Resizes to a 16:9 ratio
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.AspectRatio.Letterboxed">
            <summary>
            Resizes to a 16:9 in 4:3 ratio
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus">
            <summary>
            Describes the status of the graph building process
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.OK">
            <summary>
            The graph was built without any problems
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.FilterCreationFailure">
            <summary>
            The graph could not be built because a filter could not be created
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.FilterUseFailure">
            <summary>
            The graph could not be built because a filter was unable to connect properly
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.InvalidFilter">
            <summary>
            The graph could not be built because a filter was not found or not able to be used
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.InvalidMedia">
            <summary>
            The graph could not be built because the media was invalid or malformatted or not supported
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.DirectShowFailure">
            <summary>
            The graph could not be built because DirectShow couldn't build the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.AlreadyOpen">
            <summary>
            The graph could not be built because it's already open
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.TurnOffMpeg2AR">
            <summary>
            The graph could be built, but closed and requested it be rebuilt with MPEG-2 aspect ratio turned off
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus.UnknownFailure">
            <summary>
            The graph could not be built for an unknown reason
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer.DOLBY_CHANNELS_CONFIG">
            <summary>
            The id for the dolby channels config setting
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer.WM_DVD_EVENT">
            <summary>
            Windows Message ID for DVD events
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._VIDEO_FILTER_NAME">
            <summary>
            The name to call our video filter in the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._AUDIO_FILTER_NAME">
            <summary>
            The name to call our audio filter in the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdPanel">
            <summary>
            Our render target to replace the default video player target
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdInfo">
            <summary>
            DirectShow interface for receiving information about the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdControl">
            <summary>
            DirectShow interface for controlling the graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdGraph">
            <summary>
            DirectShow interface for creating the dvd graph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._chapter">
            <summary>
            Current chapter in the current title on the dvd
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._title">
            <summary>
            Current title on the dvd
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._position">
            <summary>
            Current position in the current chapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._duration">
            <summary>
            Duration of the current title
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._mode">
            <summary>
            The state of the playback of the dvd
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._error">
            <summary>
            A text window for printing a simple error msg
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._nextDvdPath">
            <summary>
            The path to try on the next OpenFile operation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dolbyChannelsOption">
            <summary>
            The option item for our dolby channels setting
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._audioStreamOption">
            <summary>
            The option item for our audio stream selection
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._subPictureOption">
            <summary>
            The option item for our sub picture selection
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._nextChapterKeys">
            <summary>
            Key codes to jump to the next DVD Chapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._prevChapterKeys">
            <summary>
            Key codes to jump to the previous DVD Chapter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdNavLeftKeys">
            <summary>
            Key codes to navigate left on the DVD Menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdNavRightKeys">
            <summary>
            Key codes to navigate right on the DVD Menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdNavUpKeys">
            <summary>
            Key codes to navigate up on the DVD Menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdNavDownKeys">
            <summary>
            Key codes to navigate down on the DVD Menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._dvdNavEnterKeys">
            <summary>
            Key codes to select the current entry on the DVD Menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._rootMenuKeys">
            <summary>
            Key codes to jump to the Root Menu of the DVD
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.DVDPlayer._titleMenuKeys">
            <summary>
            Key codes to jump to the Title Menu of the DVD
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.#ctor">
            <summary>
            Overrides the default render target and signs up to receive the events from it
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.CreateRenderTarget">
            <summary>
            Overrides the default render target with our dvd panel that can send us dvd events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnMediaInserted">
            <summary>
            Performs any actions necessary when new media is inserted
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnMediaRemoved">
            <summary>
            Performs any actions necessary when media is removed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.GetVideoFilters">
            <summary>
            Gets a list of supported video filters installed on this system
            </summary>
            <returns>A sorted list with the name of the filter and the class id</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.GetAudioFilters">
            <summary>
            Gets a list of supported audio filters installed on this system
            </summary>
            <returns>A sorted list with the name of the filter and the class id</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.UsingCyberLinkFilters">
            <summary>
            Tells the consumer whether the CyberLink filters are installed and whether they are being used
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OpenFile">
            <summary>
            Allows the directshow stuff to just randomly pick the first dvd drive it finds
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OpenFile(System.String)">
            <summary>
            Creates the dvd graph and gets things running
            </summary>
            <param name="directory">
            The path of the directory to try to render
            </param>
            <returns>
            The status of the graph building process
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.CloseFile">
            <summary>
            Closes the dvd graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.GetInterfaces(System.String)">
            <summary>
            Obtains our directshow dvd interfaces
            </summary>
            <param name="file">The file to render</param>
            <returns>
            The status of the graph building process
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.ReleaseInterfaces">
            <summary>
            Releases our directshow interfaces
            </summary>
            <returns>
            true IFF the operation was completely successful
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.Rewind">
            <summary>
            Performs a rewind operation only if we're in normal playback mode
            </summary>
            <returns>
            whether we actually tried to rewind
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.FastForward">
            <summary>
            Performs a fast forward operation only if we're in normal playback mode
            </summary>
            <returns>
            whether we actually tried to fast forward
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.Stop">
            <summary>
            Performs a stop operation only if we're in normal playback mode
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.Pause">
            <summary>
            Performs a pause operation only if we're in normal playback mode
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnNextClick(System.Object,System.EventArgs)">
            <summary>
            Overridden to play the next chapter
            </summary>
            <param name="sender">The next button on the hud</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnPreviousClick(System.Object,System.EventArgs)">
            <summary>
            Overridden to play the previous chapter
            </summary>
            <param name="sender">The previous button on the hud</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.ShowEndDialog">
            <summary>
            Make sure that the end dialog is never shown in the dvd player
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to not use the base class method (so that we don't open and close on visibility
            </summary>
            <param name="e">
            Empty, I think!
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resets all the bounds on our children
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles key down messages
            </summary>
            <param name="sender">
            The sender of the message
            </param>
            <param name="e">
            The input parameters describing the key event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to stop the hud from showing up while in menu mode
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the button and mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDLeft">
            <summary>
            Performs a dvd left keypress
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDRight">
            <summary>
            Performs a dvd right keypress
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDUp">
            <summary>
            Performs a dvd up key press
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDDown">
            <summary>
            Performs a dvd down key press
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDEnter">
            <summary>
            Performs a dvd enter key press
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDPlayPrevChap">
            <summary>
            Plays the previous chapter in the current title
            </summary>
            <returns>True IFF the chapter was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDPlayNextChap">
            <summary>
            Plays the next chapter in the current title
            </summary>
            <returns>True IFF the chapter was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDRootMenu">
            <summary>
            Attempts to change to the dvd root menu
            </summary>
            <returns>True IFF the change was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.DVDTitleMenu">
            <summary>
            Attempts to change to the dvd title menu
            </summary>
            <returns>True IFF the change was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.InsertAVFilters(System.Guid,System.Guid,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Attempts to insert the given audio and video filters into the graph
            </summary>
            <param name="audioFilter">CLSID of the audio filter to be inserted</param>
            <param name="videoFilter">CLSID of the video filter to be inserted</param>
            <param name="graph">The filter graph</param>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.TurnOffClosedCaption">
            <summary>
            Attempts to turn off closed-captions
            </summary>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.SetTitleAndChapters(System.Int32,System.Int32)">
            <summary>
            Sets the current title and chapter and retrieves the number of chapters in the current title
            </summary>
            <param name="titleNum">The current title number</param>
            <param name="chapterNum">The current chapter number</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.GetTotalTime">
            <summary>
            Retrieves the total time for the current title from the dvd
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.FixGraph(System.Guid,System.Guid,SnapStream.ViewScape.DirectShow.IGraphBuilder@)">
            <summary>
            Fixes the DVD graph with the given audio and video filters
            Note: call RenderDvdVideoVolume BEFORE calling this method 
            </summary>
            <param name="audioFilter">The audio filter to be inserted</param>
            <param name="videoFilter">The video filter to be inserted</param>
            <param name="graph">The graph builder for the graph to be fixed</param>
            <returns>True IFF the operation was a complete success</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.RenderDvdVideoVolume(System.String,System.Guid,System.Guid,SnapStream.ViewScape.DirectShow.IGraphBuilder@,SnapStream.ViewScape.DirectShow.DvdRenderStatus@)">
            <summary>
            Renders the dvd path specified
            </summary>
            <param name="path">The path to render</param>
            <param name="audio">The class id of the audio filter</param>
            <param name="video">The class id of the video filter</param>
            <param name="graph">The graph</param>
            <param name="status">The status of the operation (not completely set properly)</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.SetDolbyMode(SnapStream.ViewScape.DirectShow.IBaseFilter)">
            <summary>
            Sets the number of dolby channels defined in the config
            </summary>
            <param name="filter">The audio filter</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.SetDolbyMode(SnapStream.ViewScape.DirectShow.IBaseFilter,SnapStream.ViewScape.Util.AU_OUTPUT)">
            <summary>
            Attempts to set the number of dolby channels
            </summary>
            <param name="filter">The audio filter</param>
            <param name="channels">The number of channels to enable</param>
            <returns>True IFF there were no problems</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.InMenuMode">
            <summary>
            Tells us whether we're in a menu mode or not
            </summary>
            <returns>True IFF we're in a menu</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.PopulateOptions">
            <summary>
            Populates our audio stream and subpicture options
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.ClearOptions">
            <summary>
            Clears out the audio stream and subpicture options
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.SetErrorText(SnapStream.ViewScape.Widgets.VideoPlayer.GraphBuildStatus)">
            <summary>
            Sets the error text for the appropriate error
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnRenderTargetMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse move events over the dvd playback area
            </summary>
            <param name="sender">
            Don't care!
            </param>
            <param name="e">
            Holds the coords of the mouse pointer
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnRenderTargetMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse up msgs over the dvd playback area
            </summary>
            <param name="sender">
            Don't know, don't care!
            </param>
            <param name="e">
            Holds the coords of the mouse pointer
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnDVDEvent">
            <summary>
            Handles all dvd events
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnCmdComplete(System.Int32,System.Int32)">
            <summary>
            This is basically a placeholder for now.  it shouldn't be getting called
            because we never issue a dvd command that isn't blocking
            </summary>
            <param name="param1">
            first param of the event
            </param>
            <param name="param2">
            second param of the event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.ToggleOptionsCommand_Execute(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Hooking into this event to repopulate our options
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnDolbyChannelsChanged(System.Object,System.EventArgs)">
            <summary>
            Handles when our dolby channels option is changed
            </summary>
            <param name="sender">The option list item</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnAudioStreamChanged(System.Object,System.EventArgs)">
            <summary>
            Changes to the new selected audio stream
            </summary>
            <param name="sender">The selector</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DVDPlayer.OnSubPictureChanged(System.Object,System.EventArgs)">
            <summary>
            Changes to the new selected subpicture stream
            </summary>
            <param name="sender">The selector</param>
            <param name="e">Don't care</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.ErrorText">
            <summary>
            A text window for printing a simple error msg
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.Position">
            <summary>
            get - returns our current position
            set - attempts to tell the graph to play the dvd at the given position
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.Duration">
            <summary>
            The duration of the current title
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.Open">
            <summary>
            Tells the consumer whether the dvd player is open and running
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.NextChapterKeys">
            <summary>
            Key codes to jump to the next DVD Chapter
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.PrevChapterKeys">
            <summary>
            Key codes to jump to the previous DVD Chapter
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.DvdNavLeftKeys">
            <summary>
            Key codes to navigate left on the DVD Menu
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.DvdNavRightKeys">
            <summary>
            Key codes to navigate right on the DVD Menu
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.DvdNavUpKeys">
            <summary>
            Key codes to navigate up on the DVD Menu
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.DvdNavDownKeys">
            <summary>
            Key codes to navigate down on the DVD Menu
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.DvdNavEnterKeys">
            <summary>
            Key codes to select the current entry on the DVD Menu
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.RootMenuKeys">
            <summary>
            Key codes to jump to the Root Menu of the DVD
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DVDPlayer.TitleMenuKeys">
            <summary>
            Key codes to jump to the Title Menu of the DVD
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Fader">
            <summary>
            Implements basic fading animation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Fader._DEFAULT_START">
            <summary>
            The default start of fading alpha value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Fader._DEFAULT_END">
            <summary>
            The default end of fading alpha value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Fader._start">
            <summary>
            The start of fading alpha value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Fader._end">
            <summary>
            The end of fading alpha value
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Fader.#ctor">
            <summary>
            Creates a new fader with default start and end alpha values
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Fader.#ctor(System.Byte,System.Byte)">
            <summary>
            Creates a new fader with the specified start and end alpha values
            </summary>
            <param name="start">The start of fading alpha value</param>
            <param name="end">The end of fading alpha value</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Fader.Fade(System.DateTime)">
            <summary>
            Retrieves the current alpha value in the fade process
            </summary>
            <param name="timeStamp">The current timestamp</param>
            <returns>The alpha value for this time int he fade process</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Fader.Start">
            <summary>
            The start of fading alpha value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Fader.End">
            <summary>
            The end of fading alpha value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Fader.FadeSpan">
            <summary>
            The duration for the fade to take place
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileBrowser">
            <summary>
            A simple file browser
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._extensions">
            <summary>
            The file extension filter to be applied to this browser (.* = all)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._rootDirs">
            <summary>
            The list of directories in the top level
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._usingDirs">
            <summary>
            Whether or not we're using a list of top-level directories instead of
            straight browsing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._directory">
            <summary>
            The current directory that we're displaying
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._browser">
            <summary>
            The browse view that we're currently using
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._topLevelDirName">
            <summary>
            The name of the top level virtual directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._dirText">
            <summary>
            The text to display the current directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._itemText">
            <summary>
            The text to display the currently selected item's display name
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._itemNumText">
            <summary>
            The text to display the currently selected item's location in the current directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._views">
            <summary>
            The list of different browse views for this browser
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._changeViewHandler">
            <summary>
            Our view change handler
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._backKeys">
            <summary>
            Input key codes for going back
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileBrowser._viewKeys">
            <summary>
            Input key codes for changing the current view
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.#ctor">
            <summary>
            Creates a new file browser
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.#ctor(System.String)">
            <summary>
            Creates a new file browser
            </summary>
            <param name="directoriesSetting">
            The name of the config setting that holds
            the array of root directories for this browser
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.CommonInit(System.String)">
            <summary>
            Creates a new file browser
            </summary>
            <param name="directoriesSetting">
            The name of the config setting that holds
            the array of root directories for this browser
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our back and view key codes
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the key code that was pressed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle the back msg properly, since some of our children don't
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.AddChildCore(System.Object)">
            <summary>
            Overridden to add the browse views to our collection of browse views
            Can also add strings to the list of extensions
            </summary>
            <param name="child">The child or string to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.AddTextCore(System.String)">
            <summary>
            Overridden to add an extension to the list of extensions
            </summary>
            <param name="text">
            string containing the new extension to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.NavigateToDirectory(System.String)">
            <summary>
            Attempts to navigate to the specified directory
            </summary>
            <param name="dir">The directory to navigate to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetFiles(System.IO.DirectoryInfo)">
            <summary>
            Retrieves the files in the given directory that satisfy our filters
            </summary>
            <param name="dir">The directory to look in</param>
            <returns>The files found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetFiles(SnapStream.ViewScape.Widgets.FileItem,System.String@)">
            <summary>
            Retrieves the files in the given directory that satisfy our filters
            </summary>
            <param name="item">The file or directory to start with</param>
            <param name="startingFile">The file that was passed in</param>
            <returns>The files found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetFilesRecursive(System.IO.DirectoryInfo)">
            <summary>
            Retrieves the files in the given directory and its subdirectories that satisfy our filters
            Note: this only recurses as far as the MaxFileDirectoryRecursion setting tells it to
            </summary>
            <param name="dir">The directory to look in</param>
            <returns>The files found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetFilesRecursive(System.IO.DirectoryInfo,System.Int32)">
            <summary>
            Retrieves the files in the given directory and its subdirectories that satisfy our filters
            </summary>
            <param name="dir">The directory to look in</param>
            <param name="maxRecursion">The maximum number of directories to recurse</param>
            <returns>The files found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetFilesRecursive(SnapStream.ViewScape.Widgets.FileItem,System.String@)">
            <summary>
            Retrieves the files in the given directory and its subdirectories that satisfy our filters
            Note: this only recurses as far as the MaxFileDirectoryRecursion setting tells it to
            </summary>
            <param name="item">The file or directory to start with</param>
            <param name="startingFile">The file that was passed in</param>
            <returns>The files found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.SwitchView">
            <summary>
            Cycles through our views from the current one to the next one
            </summary>
            <returns>True IFF the view was switched</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.BuildView">
            <summary>
            Builds our view with the current directory (if no current directory, then the top level)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.BuildView(System.String)">
            <summary>
            Builds our view with the given directory path
            </summary>
            <param name="path">The directory to be viewed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.ShowRootDirectory">
            <summary>
            Builds our view of the top level directory
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.ShowCurrentDirectory">
            <summary>
            Builds our view of the current directory
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.LoadRootObjects(System.Collections.ArrayList,System.String)">
            <summary>
            Loads the top level list of directories
            </summary>
            <param name="dirs">The array of directories in the top level</param>
            <param name="directoriesSetting">
            The name of the config setting that holds
            the array of root directories for this browser
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.CheckIfLastIsAChild(System.IO.DirectoryInfo)">
            <summary>
            Determines whether the given directory is a child of the current directory
            </summary>
            <param name="last">The directory to check</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.TryToGoBack">
            <summary>
            Attempts to navigate backwards (go "up" a directory)
            </summary>
            <returns>True IFF the navigation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.IsRelativeOfRootDirs(System.IO.DirectoryInfo)">
            <summary>
            Determines whether the given directory descends from the current directory
            </summary>
            <param name="youngDir">The directory to check</param>
            <returns>True IFF the given dir descends from the current directory</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.IsOlderRelative(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Determines if the right directory descends from the left directory
            </summary>
            <param name="older">The possible older relative</param>
            <param name="younger">The possible younger relative</param>
            <returns>True IFF the right directory descends from the left directory</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.ShowView(SnapStream.ViewScape.Widgets.IBrowseView)">
            <summary>
            Shows the given view
            </summary>
            <param name="view">The view to show</param>
            <returns>True IFF the view was shown successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.SyncText(SnapStream.ViewScape.Widgets.FileItem,System.Int32,System.Int32)">
            <summary>
            Updates our text displays
            </summary>
            <param name="item">The file item that is currently selected</param>
            <param name="itemNum">The item number (index+1) of the currently selected item</param>
            <param name="itemCount">The total number of items in the browser</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.AddNewExtenstion(System.String)">
            <summary>
            Adds a new extension to our list of extensions to display
            </summary>
            <param name="newExtension">The file extension to add (include the '.')</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetSortedDirectories(System.IO.DirectoryInfo)">
            <summary>
            Properly sorts directory names that include the chars between 'Z' and 'a'
            </summary>
            <param name="parentDir">The parent directory to retrieve the subdirs from</param>
            <returns>The sorted subdirs</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.GetSortedFiles(System.IO.DirectoryInfo)">
            <summary>
            Properly sorts file names that include the chars between 'Z' and 'a'
            </summary>
            <param name="parentDir">The parent directory to retrieve the files from</param>
            <returns>The sorted files</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnDirectoriesChanged(System.Object,System.EventArgs)">
            <summary>
            Reloads the root directories when they change via the settings screen
            </summary>
            <param name="sender">the Setting that changed</param>
            <param name="e">don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnDirectoryNavigated(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles a directory navigated event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the new directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnFileExecuted(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles a file executed event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the file item that was executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnBrowseItemPlayed(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles a file played event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the file item that was played</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.OnItemChanged(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles an item changed event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the file item that is now selected</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.ChangeViewCommand_Execute(System.Object,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Handles our view changed event
            </summary>
            <param name="sender">Don't care</param>
            <param name="args">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.RaiseBrowseItemPlayedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our played event
            </summary>
            <param name="item">The item to be played</param>
            <returns>True IFF the played event was marked as handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.RaiseBrowseItemExecutedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our executed event
            </summary>
            <param name="item">The item to be executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.RaiseBrowseItemSelectedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our item selected event
            </summary>
            <param name="item">The item that was selected</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileBrowser.RaiseDirectoryNavigatedEvent">
            <summary>
            Raises our directory navigated event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.Extensions">
            <summary>
            The file extension filter to be applied to this browser (.* = all)
            Setting this adds the new file extension
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.DirText">
            <summary>
            The text to display the current directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.TopLevelDirectoryName">
            <summary>
            The name of the top level virtual directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.ItemText">
            <summary>
            The text to display the currently selected item's display name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.ItemNumText">
            <summary>
            The text to display the currently selected item's location in the current directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.UsingDirs">
            <summary>
            Whether or not we're using a list of top-level directories instead of
            straight browsing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.CurrentDirectory">
            <summary>
            The current directory we're viewing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.ChangeViewCommand">
            <summary>
            Specifies which command to attach our view change handler to
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.CurrentBrowser">
            <summary>
            The current browse view being used
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.SelectedIndex">
            <summary>
            The currently selected item index in the browse view
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.BackKeys">
            <summary>
            Input key codes for going back
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.ViewKeys">
            <summary>
            Input key codes for changing the current view
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileBrowser.BrowseItemExecuted">
            <summary>
            Tells the consumer that the selected item was executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileBrowser.BrowseItemPlayed">
            <summary>
            Tells the consumer that the selected item was played
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileBrowser.BrowseItemSelected">
            <summary>
            Tells the consumer that the selected item was changed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileBrowser.DirectoryNavigated">
            <summary>
            Tells the consumer that the current directory was changed
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileBrowser.SnapStream#ViewScape#Widgets#IStringList#Strings">
            <summary>
            Returns the items in the browser
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileGrid">
            <summary>
            A simple file browser grid view.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.IBrowseView">
            <summary>
            The basic interface necessary for the FileBrowser to browse something (list, grid, etc.)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.Clear">
            <summary>
            Clears all of the file items from the browse view
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.AddItem(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.AddItem(System.IO.DirectoryInfo,System.Boolean,System.String)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
            <param name="displayName">The display name for the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.AddItem(System.IO.FileInfo)">
            <summary>
            Adds a new file item for a file
            </summary>
            <param name="fi">The file to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.GetFileItem(System.Int32)">
            <summary>
            Allows the consumer to get the file item at the specified index
            </summary>
            <param name="index">The index of the file item to get</param>
            <returns>The file item if it was found, otherwise null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.IBrowseView.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the file item from one index to another
            </summary>
            <param name="current">The index of the item to move</param>
            <param name="destination">The new index of the item</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IBrowseView.Count">
            <summary>
            This should always return the number of file items in the browse view
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IBrowseView.CurrentIndex">
            <summary>
            The index of the currently selected file item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IBrowseView.CurrentItem">
            <summary>
            This should always return the currently selected file item
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.IBrowseView.FileExecuted">
            <summary>
            Informs the file browser that a file needs to be executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.IBrowseView.DirectoryNavigated">
            <summary>
            Informs the file browser that a new directory was entered
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.IBrowseView.BrowseItemPlayed">
            <summary>
            Informs the file browser that the selected item would like to be played
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.IBrowseView.BrowseItemChanged">
            <summary>
            Informs the file browser that the currently selected item has changed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.#ctor">
            <summary>
            Creates a file grid
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseExecutedEvent">
            <summary>
            Overridden to raise our file executed or directory navigated event when appropriate
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaisePlayedEvent">
            <summary>
            Overridden to raise our item played event
            </summary>
            <returns>True IFF the play event was handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseSelectedEvent">
            <summary>
            Overridden to raise our item changed event when appropriate
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.Clear">
            <summary>
            Clears all of the file items from the browse view
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.AddItem(System.IO.DirectoryInfo,System.Boolean,System.String)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
            <param name="displayName">The display name for the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.AddItem(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.AddItem(System.IO.FileInfo)">
            <summary>
            Adds a new file item for a file
            </summary>
            <param name="fi">The file to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the file item from one index to another
            </summary>
            <param name="current">The index of the item to move</param>
            <param name="destination">The new index of the item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.GetFileItem(System.Int32)">
            <summary>
            Allows the consumer to get the file item at the specified index
            </summary>
            <param name="index">The index of the file item to get</param>
            <returns>The file item if it was found, otherwise null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseFileExecutedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our file executed event for the given file
            </summary>
            <param name="item">The file that is to be executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseDirectoryNavigatedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our directory navigated event for the given directory
            </summary>
            <param name="item">The directory that we changed TO</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseBrowseItemPlayedEvent">
            <summary>
            Raises our item played event
            </summary>
            <returns>True IFF the event was handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGrid.RaiseBrowseItemChangedEvent">
            <summary>
            Raises our item changed event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGrid.Count">
            <summary>
            This should always return the number of file items in the browse view
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGrid.CurrentIndex">
            <summary>
            The index of the currently selected file item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGrid.CurrentItem">
            <summary>
            This should always return the currently selected file item
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileGrid.FileExecuted">
            <summary>
            Informs the file browser that a file needs to be executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileGrid.DirectoryNavigated">
            <summary>
            Informs the file browser that a new directory was entered
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileGrid.BrowseItemPlayed">
            <summary>
            Informs the file browser that the selected item would like to be played
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileGrid.BrowseItemChanged">
            <summary>
            Informs the file browser that the currently selected item has changed
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGrid.SnapStream#ViewScape#Widgets#IStringList#Strings">
            <summary>
            Returns the items in the browser
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileGridItem">
            <summary>
            Will display the thumbnail or the icon for a specific file item
            Handles links properly as well
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._HIGHLIGHT_FILE">
            <summary>
            The highlight file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._FLASH_TIME">
            <summary>
            100-ns intervals for the highlight to flash (1s)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._MIN_FLASH_OPACITY">
            <summary>
            The lowest opacity value used in highlight flashing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._MAX_FLASH_OPACITY">
            <summary>
            The highest opacity value used in highlight flashing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._fileItem">
            <summary>
            This stores all of the information necessary when dealing with a file item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._backFolder">
            <summary>
            This window is used to display the "Back" icon's folder
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._backGraphic">
            <summary>
            This window is used to display the "Back" icon
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._highlight">
            <summary>
            This is the highlight window whose color will oscillate when an item is selected
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._alphaAnimator">
            <summary>
            Flashes the highlight texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._name">
            <summary>
            This is the text that will appear to the user
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconBounds">
            <summary>
            These are the bounds that are used to display the icon whether it is the back graphic or the icon, or the thumbnail
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconXPercent">
            <summary>
            Holds the percent of the item width to offset the icon in the x direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconYPercent">
            <summary>
            Holds the percent of the item height to offset the icon in the Y direction
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconWidthPercent">
            <summary>
            Holds the percent of the item width to use as the icon width
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconHeightPercent">
            <summary>
            Holds the percent of the item height to use as the icon height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileGridItem._iconNamePadding">
            <summary>
            Holds the percent of the item height to use as padding between the icon
            and the name
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.#ctor">
            <summary>
            Creates a new generic FileGridItem
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Creates a new file grid item for the specified directory
            </summary>
            <param name="di">The directory that this item represents</param>
            <param name="parent">True IFF this directory is the parent of the currently displayed directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.#ctor(System.IO.DirectoryInfo,System.Boolean,System.String)">
            <summary>
            Creates a new file grid item for the specified directory
            </summary>
            <param name="di">The directory that this item represents</param>
            <param name="parent">True IFF this directory is the parent of the currently displayed directory</param>
            <param name="displayName">The display name for the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.#ctor(System.IO.FileInfo)">
            <summary>
            Creates a new file grid item for the specified file
            </summary>
            <param name="fi">The file that this item represents</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.AddCommonElements">
            <summary>
            Creates a new file grid item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.FrameMove(System.DateTime)">
            <summary>
            Overridden to animate our flashing highlight on the selected item
            </summary>
            <param name="currentTime">Current time stamp used in animations</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.Render">
            <summary>
            Overridden to render our thumbnails for us
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileGridItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the thumbnails and back folder/graphic
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.FileItem">
            <summary>
            This stores all of the information necessary when dealing with a file item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.BackFolder">
            <summary>
            This window is used to display the "Back" icon's folder
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.BackGraphic">
            <summary>
            This window is used to display the "Back" icon
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.Highlight">
            <summary>
            This is the highlight window whose color will oscillate when an item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.NameTextObject">
            <summary>
            This is the text that will appear to the user
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.IconXPercent">
            <summary>
            Holds the percent of the item width to offset the icon in the x direction
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.IconYPercent">
            <summary>
            Holds the percent of the item height to offset the icon in the Y direction
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.IconWidthPercent">
            <summary>
            Holds the percent of the item width to use as the icon width
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.IconHeightPercent">
            <summary>
            Holds the percent of the item height to use as the icon height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.IconNamePadding">
            <summary>
            Holds the percent of the item height to use as padding between the icon
            and the name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileGridItem.Selected">
            <summary>
            Overridden to set visibility as well
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileItem">
            <summary>
            Abstracts the differences between handling a file, a directory, and a link
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem.Extension_Lnk">
            <summary>
            The file extension for a link
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem.Extension_Exe">
            <summary>
            The file extension for an executable
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem.Extension_Dir">
            <summary>
            The file extension for a directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._fileInfo">
            <summary>
            Internal use only.
            Stores the FileInfo object passed in or the FileInfo object of a link to a file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._directoryInfo">
            <summary>
            Internal use only.
            Stores the DirectoryInfo object passed in or the DirectoryInfo object of a link to a directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._dereferencedPath">
            <summary>
            Returns the full path associated with the item
            This is the full target path in the case of a shortcut
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._displayName">
            <summary>
            This is the filename portion of the original path passed in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._isFile">
            <summary>
            True if the item is a file
            True if the item is a link pointing to a file
            False if the item is a directory
            False if the item is a link pointing to a directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._isLink">
            <summary>
            True if the item is a link
            False otherwise
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileItem._isBackLink">
            <summary>
            True if the item represents a pointer to a parent directory
            False otherwise
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileItem.#ctor">
            <summary>
            Protected Constructor to be used by inheriting classes that want to set their own internal variables
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileItem.#ctor(System.IO.DirectoryInfo)">
            <summary>
            Creates a new file item for a directory
            </summary>
            <param name="di">The directory that this item represents</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileItem.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Creates a new file item for a directory
            </summary>
            <param name="di">The directory that this item represents</param>
            <param name="isBackLink">Whether or not this directory is a backlink</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileItem.#ctor(System.IO.FileInfo)">
            <summary>
            Creates a new file item for the given file
            </summary>
            <param name="fi">The file that this item represents</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.FullPath">
            <summary>
            Returns the full path associated with the item
            This is the full target path in the case of a shortcut
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.DisplayName">
            <summary>
            This is the filename portion of the original path passed in
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.IsFile">
            <summary>
            True if the item is a file
            True if the item is a link pointing to a file
            False if the item is a directory
            False if the item is a link pointing to a directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.IsLink">
            <summary>
            True if the item is a link
            False otherwise
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.IsBackLink">
            <summary>
            True if the item represents a pointer to a parent directory
            False otherwise
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.DirectoryInfo">
            <summary>
            The DirectoryInfo object for this file item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileItem.FileInfo">
            <summary>
            The FileInfo object for this file item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MyComputerFileItem">
            <summary>
            A file item that represents the "My Computer" object in windows
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MyComputerFileItem.MY_COMPUTER_PATH">
            <summary>
            The path to this item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MyComputerFileItem.#ctor">
            <summary>
            Creates a new my computer file item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MyComputerFileItem.#ctor(System.Boolean)">
            <summary>
            Creates a new my computer file item, specifying whether it's a backlink
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MyComputerFileItem.IsFile">
            <summary>
            Always false
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MyComputerFileItem.IsLink">
            <summary>
            Always false
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileList">
            <summary>
            A browse view that shows files in a list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.#ctor">
            <summary>
            Creates a new file list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Overridden to raise our file executed or directory navigated event when appropriate
            </summary>
            <param name="index">The index of the item that was activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseItemPlayedEvent(System.Int32)">
            <summary>
            Overridden to raise our browse view played event
            </summary>
            <param name="index">The index of the played item</param>
            <returns>True IFF the event was handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseSelectedIndexChangedEvent">
            <summary>
            Overridden to raise our item changed event when appropriate
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.AddItem(System.IO.DirectoryInfo,System.Boolean,System.String)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
            <param name="displayName">The display name for the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.AddItem(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Adds a new file item for a directory
            </summary>
            <param name="di">The directory to be added</param>
            <param name="parent">True IFF this file item is a parent of the current viewed directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.AddItem(System.IO.FileInfo)">
            <summary>
            Adds a new file item for a file
            </summary>
            <param name="fi">The file to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the file item from one index to another
            </summary>
            <param name="current">The index of the item to move</param>
            <param name="destination">The new index of the item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.GetFileItem(System.Int32)">
            <summary>
            Allows the consumer to get the file item at the specified index
            </summary>
            <param name="index">The index of the file item to get</param>
            <returns>The file item if it was found, otherwise null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseFileExecutedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our file executed event for the given file
            </summary>
            <param name="item">The file that is to be executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseDirectoryNavigatedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our directory navigated event for the given directory
            </summary>
            <param name="item">The directory that we changed TO</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseBrowseItemPlayedEvent(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Raises our item played event
            </summary>
            <param name="item">The item that was played</param>
            <returns>True IFF the event was handled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileList.RaiseBrowseItemChangedEvent">
            <summary>
            Raises our item changed event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileList.Count">
            <summary>
            This should always return the number of file items in the browse view
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileList.CurrentIndex">
            <summary>
            The index of the currently selected file item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileList.CurrentItem">
            <summary>
            This should always return the currently selected file item
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileList.FileExecuted">
            <summary>
            Informs the file browser that a file needs to be executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileList.DirectoryNavigated">
            <summary>
            Informs the file browser that a new directory was entered
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileList.BrowseItemChanged">
            <summary>
            Informs the file browser that the currently selected item has changed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileList.BrowseItemPlayed">
            <summary>
            Informs the file browser that the current item needs to be played
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileListItem">
            <summary>
            A list item that represents a file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileListItem._fileItem">
            <summary>
            The selected file item when this event was raised
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileListItem._backFolder">
            <summary>
            The window to contain our back folder and graphic
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileListItem._backGraphic">
            <summary>
            The window to contain our back graphic
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FileListItem._iconBounds">
            <summary>
            These are the bounds that are used to display the icon whether it is the back graphic or the icon, or the thumbnail
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.#ctor">
            <summary>
            Creates a new file list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.#ctor(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Creates a new file list item for the given directory
            </summary>
            <param name="di">The directory that this item represents</param>
            <param name="parent">True IFF this directory is the parent of the currently displayed directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.#ctor(System.IO.DirectoryInfo,System.Boolean,System.String)">
            <summary>
            Creates a new file list item for the given directory
            </summary>
            <param name="di">The directory that this item represents</param>
            <param name="parent">True IFF this directory is the parent of the currently displayed directory</param>
            <param name="displayName">The display name for the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.#ctor(System.IO.FileInfo)">
            <summary>
            Creates a new file list item for the given file
            </summary>
            <param name="fi">The file that this item represents</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.AddCommonElements">
            <summary>
            Populates the common elements of a file list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.FrameMove(System.DateTime)">
            <summary>
            Overriden to handle syncing of the file list item and the displayed elements
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.Render">
            <summary>
            Overridden to render our thumbnails for us
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the thumbnails and back folder/graphic
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileListItem.FileItem">
            <summary>
            The selected file item when this event was raised
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileListItem.BackFolder">
            <summary>
            This window is used to display the "Back" icon's folder
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.FileListItem.BackGraphic">
            <summary>
            This window is used to display the "Back" icon
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectoryChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:SnapStream.ViewScape.Widgets.FileSearch.DirectoryChanged">DirectoryChanged</see> event.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ProgressEventArgs">
            <summary>
            The progress status for this event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressEventArgs._current">
            <summary>
            The current progress value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressEventArgs._min">
            <summary>
            The starting progress value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressEventArgs._max">
            <summary>
            The final progress value
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new set of progress args
            </summary>
            <param name="current">The current progress value</param>
            <param name="min">The starting progress value</param>
            <param name="max">The final progress value</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressEventArgs.Current">
            <summary>
            The current progress value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressEventArgs.Minimum">
            <summary>
            The starting progress value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressEventArgs.Maximum">
            <summary>
            The final progress value
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.DirectoryChangedEventArgs.#ctor(System.Boolean,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of the DirectoryChangedEventArgs class.
            </summary>
            <param name="updateProgress">Specifies whether or not the progress should be updated</param>
            <param name="directoryFullName">The full name of the directory being searched</param>
            <param name="current">The number of directories that have been searched</param>
            <param name="min">The minimum number of directories to search.  Should always be 0</param>
            <param name="max">The total number of directories to be searched.</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryChangedEventArgs.UpdateProgress">
            <summary>
            Gets a value indicating whether or not the progress of the search operation should be updated.
            </summary>
            <remarks>
            The progress is only updated for top level search directories because it is cost
            prohibitive to recursively calculate the total number of directories that are searched.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.DirectoryChangedEventArgs.DirectoryFullName">
            <summary>
            Gets the full path of the directory being searched.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.DirectoryChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.ViewScape.Widgets.FileSearch.DirectoryChanged">DirectoryChanged</see> event
            on the <see cref="T:SnapStream.ViewScape.Widgets.FileSearch">FileSearch</see> class.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FileSearch">
            <summary>
            Implements file searching based on a set of extensions.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesRecursive(System.IO.DirectoryInfo,System.Collections.ArrayList)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesRecursive(System.IO.DirectoryInfo,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <param name="searchSystemDirectories">Specifies whether or not system directories should be searched</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesRecursive(System.IO.DirectoryInfo,System.Collections.ArrayList,System.Boolean,System.Boolean)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <param name="searchSystemDirectories">Specifies whether or not system directories should be searched</param>
            <param name="searchHiddenDirectories">Specifies whether or not hidden directories should be searched</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesRecursive(System.IO.DirectoryInfo,System.Collections.ArrayList,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <param name="searchSystemDirectories">Specifies whether or not system directories should be searched</param>
            <param name="searchHiddenDirectories">Specifies whether or not hidden directories should be searched</param>
            <param name="minFileSize">Specifies the minimum file size to include in the search results</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesRecursive(System.IO.DirectoryInfo,System.Collections.ArrayList,System.Boolean,System.Boolean,System.Int32,System.Collections.ArrayList)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <param name="searchSystemDirectories">Specifies whether or not system directories should be searched</param>
            <param name="searchHiddenDirectories">Specifies whether or not hidden directories should be searched</param>
            <param name="minFileSize">Specifies the minimum file size to include in the search results</param>
            <param name="directoryExclusions">Specifies the directories to exclude while searching</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.FileSearch.FindFilesHelper(System.IO.DirectoryInfo,System.Collections.ArrayList,System.Boolean,System.Boolean,System.Int32,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Recursively searches the specified directory looking for files that have specific extensions.
            </summary>
            <param name="topLevel">The top level directory to search</param>
            <param name="extensions">The extensions to search for</param>
            <param name="searchSystemDirectories">Specifies whether or not system directories should be searched</param>
            <param name="searchHiddenDirectories">Specifies whether or not hidden directories should be searched</param>
            <param name="minFileSize">Specifies the minimum file size to include in the search results</param>
            <param name="directoryExclusions">Specifies the directories to exclude while searching</param>
            <param name="topmostCaller">Specifies that the caller of this method was top level caller</param>
            <returns>An ArrayList of the files that were found.</returns>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.FileSearch.DirectoryChanged">
            <summary>
            Occurs when a new directory is searched.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HAlignment">
            <summary>
            Horizontal Text Alignment Values
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HAlignment.Left">
            <summary>
            Left-Aligned text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HAlignment.Right">
            <summary>
            Right-Aligned text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HAlignment.Center">
            <summary>
            Horizontally centered text
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VAlignment">
            <summary>
            Vertical Text Alignment Values
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VAlignment.Top">
            <summary>
            Top-Aligned text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VAlignment.Bottom">
            <summary>
            Bottom-Aligned text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VAlignment.Middle">
            <summary>
            Vertically centered text
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.EllipsesFormat">
            <summary>
            The different types of ellipses we can use
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.EllipsesFormat.None">
            <summary>
            No ellipsizing of text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.EllipsesFormat.End">
            <summary>
            Ellipsizing of text occurs at the end of the string, if needed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.EllipsesFormat.Path">
            <summary>
            Ellipsizing of the text occurs inside the string (assuming it's a path string), if needed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextFormatFlags">
            <summary>
            Format flags for the text to use with the backend
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.None">
            <summary>
            No formatting is specified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Top">
            <summary>
            Text appears at the very top of the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Middle">
            <summary>
            Text is vertically centered
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Bottom">
            <summary>
            Text appears at the very bottom of the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Left">
            <summary>
            Text appears at the left side of the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Center">
            <summary>
            Text is horizontally centered
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Right">
            <summary>
            Text appears at the right side of the window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.EndEllipsize">
            <summary>
            Text is ellipsized at the end of the string, if needed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.PathEllipsize">
            <summary>
            Text is ellipsized in the middle of the string (assuming it's a path string), if needed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextFormatFlags.Multiline">
            <summary>
            Text is allowed to run onto multiple lines
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Font">
            <summary>
            A D3D-based font that provides line-wrapping, word-wrapping,
            text alignment, ellipsizing, and drop-shadows
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._systemFont">
            <summary>
            The system font used to create our font texture map
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._pixelHeight">
            <summary>
            This font's character pixel height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._spaceWidth">
            <summary>
            The width of the ' ' character
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._device">
            <summary>
            The device object which is associated with this font
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._textures">
            <summary>
            An array of textures that each contain several glyphs all in the same pixel size
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._textureCount">
            <summary>
            The number of textures in our list.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._textureWidth">
            <summary>
            The width of our textures
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font._textureHeight">
            <summary>
            The height of our textures
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.#ctor(System.Drawing.Font)">
            <summary>
            Create a new font object
            </summary>
            <param name="f">The system font to use</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.InitializeDeviceObjects(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Initialize the device objects
            </summary>
            <param name="dev">The grpahics device used to initialize</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Delete the device objects
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Probably empty event args...</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.RestoreDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Restore the font after a device has been reset
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Probably empty event args...</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.InvalidateDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Release internal device objects because they are no longer valid
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Probably empty event args...</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CacheGlyphs(System.String,SnapStream.ViewScape.Widgets.Font.GlyphData[]@,SnapStream.ViewScape.Widgets.Font.GlyphTexture[]@)">
            <summary>
            Does all the work of ensuring each glyph in a string is in a texture.  Also
            returns all the information needed to render the glyphs to screen
            </summary>
            <param name="text">The text to create glyphs for</param>
            <param name="textures">Returns the GlyphTexture for each GlyphData</param>
            <param name="glyphs">Returns a GlyphData object for every character in the string</param>
            <returns>The number of glyphs cached.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreateEmptyGlyphRun(System.Single)">
            <summary>
            Creates any empty GlyphRun that has 0 width, 
            </summary>
            <param name="height">The height of the run</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreateGlyphRun(SnapStream.ViewScape.Widgets.Font.GlyphData[],SnapStream.ViewScape.Widgets.Font.GlyphTexture[],System.Int32,System.Int32,System.Single,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags)">
            <summary>
            Creates a GlyphRun from data provided by FormatText
            </summary>
            <param name="glyphs">The array of glyphs from which to pull data</param>
            <param name="textures">The array of textures from which to pull data</param>
            <param name="start">The start index of the data</param>
            <param name="count">The number of glyphs to include in the run</param>
            <param name="width">The width of the run</param>
            <param name="target">The target area into which the run is positioned</param>
            <param name="flags">Flags that control how the run looks</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreateRepeatingGlyphRun(SnapStream.ViewScape.Widgets.Font.GlyphData,SnapStream.ViewScape.Widgets.Font.GlyphTexture,System.Int32,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags)">
            <summary>
            Creates a glyph run of repeating characters
            </summary>
            <param name="glyph">The glyph to repeat</param>
            <param name="texture">The texture that contains the glyph</param>
            <param name="count">How many times the glyph should be repeated</param>
            <param name="target">The target area into which the run is positioned</param>
            <param name="flags">Flags that control how the run looks</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreatePathEllipsizedGlyphRun(SnapStream.ViewScape.Widgets.Font.GlyphData[],SnapStream.ViewScape.Widgets.Font.GlyphTexture[],System.Int32,System.Int32,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags,System.Single,SnapStream.ViewScape.Widgets.Font.GlyphData,SnapStream.ViewScape.Widgets.Font.GlyphTexture)">
            <summary>
            Creates a GlyphRun whose contents will be clipped to the target area by ellipsizing the text
            so that as much of the string after the last path separator will be visible
            </summary>
            <param name="glyphs">The array of glyphs from which to pull data</param>
            <param name="textures">The array of textures from which to pull data</param>
            <param name="runStart">The glyph index of the start of the run</param>
            <param name="i">The index of the glyph that caused the output to overflow</param>
            <param name="target">The target area into which the run is positioned</param>
            <param name="flags">Flags that control how the run looks</param>
            <param name="x">The current width of the run</param>
            <param name="eGlyph">The GlyphData for the '.' character</param>
            <param name="eTexture">The GlyphTexture that contains the '.' character</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreateEndEllipsizedGlyphRun(SnapStream.ViewScape.Widgets.Font.GlyphData[],SnapStream.ViewScape.Widgets.Font.GlyphTexture[],System.Int32,System.Int32,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags,System.Single,SnapStream.ViewScape.Widgets.Font.GlyphData,SnapStream.ViewScape.Widgets.Font.GlyphTexture)">
            <summary>
            Creates a GlyphRun whose contents will be clipped to the target area by ellipsizing the text at the end
            </summary>
            <param name="glyphs">The array of glyphs from which to pull data</param>
            <param name="textures">The array of textures from which to pull data</param>
            <param name="runStart">The glyph index of the start of the run</param>
            <param name="i">The index of the glyph that caused the output to overflow</param>
            <param name="target">The target area into which the run is positioned</param>
            <param name="flags">Flags that control how the run looks</param>
            <param name="x">The current width of the run</param>
            <param name="eGlyph">The GlyphData for the '.' character</param>
            <param name="eTexture">The GlyphTexture that contains the '.' character</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.CreateEllipsizedGlyphRun(SnapStream.ViewScape.Widgets.Font.GlyphData[],SnapStream.ViewScape.Widgets.Font.GlyphTexture[],System.Int32,System.Int32,System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags,System.Single)">
            <summary>
            Creates a GlyphRun whose contents will be clipped to the target area by ellipsizing the text
            </summary>
            <param name="glyphs">The array of glyphs from which to pull data</param>
            <param name="textures">The array of textures from which to pull data</param>
            <param name="runStart">The glyph index of the start of the run</param>
            <param name="i">The index of the glyph that caused the output to overflow</param>
            <param name="target">The target area into which the run is positioned</param>
            <param name="flags">Flags that control how the run looks</param>
            <param name="x">The current width of the run</param>
            <returns>The GlyphRun object</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.FormatText(System.Drawing.Rectangle,System.String,SnapStream.ViewScape.Widgets.TextFormatFlags,SnapStream.ViewScape.Widgets.Font.GlyphRun[]@)">
            <summary>
            Breaks up a string into a series of runs
            </summary>
            <param name="target">The target rectangle to paint in</param>
            <param name="text">The text string to be formatted</param>
            <param name="flags">The formatting flags</param>
            <param name="runs">returns the text formatted as an array of GlyphRun objects</param>
            <returns>the number of lines in the formatted text</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.DrawText(System.Drawing.Rectangle,System.Drawing.Color,SnapStream.ViewScape.Widgets.TextFormatFlags,Microsoft.DirectX.Direct3D.Sprite,System.String)">
            <summary>
            Draw some text on the screen
            </summary>
            <param name="target">The target rectangle to paint in</param>
            <param name="color">The text color</param>
            <param name="flags">The formatting flags</param>
            <param name="sprite">The sprite to paint to</param>
            <param name="text">The text string to be painted</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.MeasureText(System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.TextFormatFlags,System.String)">
            <summary>
            Measures text that will be drawn on the screen
            </summary>
            <param name="target">The target rectangle to paint in screen coordinates</param>
            <param name="flags">The formatting flags</param>
            <param name="text">The text string to be measured</param>
            <returns>The bounds of the text in screen coordinates</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.Dispose">
            <summary>
            Calls our other dispose method
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.Dispose(System.Object,System.EventArgs)">
            <summary>
            Cleanup any resources being used
            </summary>
            <param name="sender">Whoever called us</param>
            <param name="e">Usually empty.</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Font.PixelHeight">
            <summary>
            This font's character pixel height
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Font.GlyphData">
            <summary>
            Maintains information about a specific glyph in a GlyphTexture
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.GlyphData.CalculateExtraSpacing(System.Single)">
            <summary>
            Caluculates the extra space that would be required for a glyph of a given width.
            This is required because what GDI+ measures and what it draws sometimes do not
            match up and we end clipping characters
            </summary>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Character">
            <summary>
            The character code of the glyph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Left">
            <summary>
            The left coordinate of the glyph in the Texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Top">
            <summary>
            The top coordinate of the glyph in the Texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Right">
            <summary>
            The right coordiante of the glyph in the Texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Bottom">
            <summary>
            The bottom coordinate of the glyph in the Texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphData.Category">
            <summary>
            The category of this character.  Tells us if this character is a separator
            or a normal character
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Font.GlyphData.Width">
            <summary>
            The width of this glyph in the texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Font.GlyphData.Height">
            <summary>
            The height of this glyph 
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Font.GlyphData.ExtraSpacing">
            <summary>
            Gets the extra space to the right of the glyph.  This is needed because what
            GDI+ draws and what it measures are not always the same
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Font.GlyphTexture">
            <summary>
            Maintains information about a single texture which contains character glyphs
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.DefaultWidth">
            <summary>
            The default width of our texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.DefaultHeight">
            <summary>
            The default height of our texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.TextureWidth">
            <summary>
            The texture width
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.TextureHeight">
            <summary>
            The exture height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.Texture">
            <summary>
            The Direct3D texture object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.Glyphs">
            <summary>
            An array of GlyphData objects that each maintain information about a glyph
            contained in this texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.GlyphCount">
            <summary>
            The number of glyphs this texture currently is managing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.NextCellX">
            <summary>
            The x coordinate that should be used for the next glyph
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphTexture.NextCellY">
            <summary>
            The y coordinate that should be used for the next glyph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.GlyphTexture.#ctor(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Creates a new GlyphTexture of dimension ( DefaultWidth, DefaultHeight )
            </summary>
            <param name="device">The device object</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.GlyphTexture.#ctor(Microsoft.DirectX.Direct3D.Device,System.Int32,System.Int32)">
            <summary>
            Creates a new GlyphTexture of dimension ( width, height )
            </summary>
            <param name="device">The device object</param>
            <param name="width">The desired width of the texture</param>
            <param name="height">The desired height of the texture</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.GlyphTexture.Dispose">
            <summary>
            Releases all managed resources this object is holding
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Font.GlyphTexture.CacheGlyph(System.Drawing.Graphics,System.Drawing.Font,System.Char)">
            <summary>
            Caches a glyph for the given character if it can.  If the character exists in the texture
            it is returned
            </summary>
            <param name="gMeasure">The Graphcs object that should be used for measuring</param>
            <param name="font">The font to draw with</param>
            <param name="ch">The character whose glyph should be retrieved</param>
            <returns>The character glyph if it was found or could be cached else null.  If null is returned
            a new GlyphTexture should be created to hold that glyph
            </returns>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Font.GlyphRun">
            <summary>
            Represents an unbroken run of character glyphs that comprise a single line of output
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.Glyphs">
            <summary>
            The glyph data for this run
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.Textures">
            <summary>
            The textures for this run
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.OffsetX">
            <summary>
            The offset of this run from the left of the target area
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.OffsetY">
            <summary>
            The offset of this run from the top of the target area
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.Width">
            <summary>
            The width of all the glyphs that comprise this run
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Font.GlyphRun.Height">
            <summary>
            The height of this run
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GenericList">
            <summary>
            A list that holds generic items (BaseListItem-derived)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._topVisibleItem">
            <summary>
            Index of the top most visible item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._gridPaddingPercent">
            <summary>
            Percent of the height that you wish to pad as a decimal (0 &lt;= value &lt;= 1 )
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._gridPaddingPixels">
            <summary>
            Padding value in pixels
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._itemHeight">
            <summary>
            Height of the item based on the number of visible items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._itemWidth">
            <summary>
            Width of the item based on padding
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._visibleItemCount">
            <summary>
            Number of visible items to account for in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._mustRebuild">
            <summary>
            Flag used to determine if we need to rebuild the list on FrameMove
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._defaultItemTextHeightPercent">
            <summary>
            Percent of the item height to be used for the text height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._upKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._downKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._pageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GenericList._pageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.#ctor">
            <summary>
            Creates a new generic vertical list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddTextItem(System.String)">
            <summary>
            Adds a new text item
            </summary>
            <param name="text">The text for the item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddTextItem(System.String,System.Int32@)">
            <summary>
            Adds a new text item
            </summary>
            <param name="text">The text for the item</param>
            <param name="index">The index of the item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddOptionListItem(SnapStream.ViewScape.Widgets.OptionListItem)">
            <summary>
            Adds an option list item
            </summary>
            <param name="item">The option list item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddOptionListItem(SnapStream.ViewScape.Widgets.OptionListItem,System.Int32@)">
            <summary>
            Adds an option list item
            </summary>
            <param name="item">The option list item</param>
            <param name="index">The index of the item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Adds a new list item
            </summary>
            <param name="item">The list item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.RemoveItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Removes a list item
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.ChangeSelectedIndex(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Will attempt to change the selecteIndex to the newindex.
            If change is successful, the list will be rebuilt.
            </summary>
            <param name="newIndex">
            Index to set as selected
            </param>
            <param name="useAnimation">
            True to animate on rebuild
            </param>
            <param name="playSound">
            Whether to play sounds indicating item change or no move
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.InternalSetSelectedIndex(System.Int32)">
            <summary>
            Changes the selected index properly
            </summary>
            <param name="index">The desired index</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.UpdateBuildParameters">
            <summary>
            Calculates all of the padding and item sizes.
            Should be called any time one of the parameters change.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.RebuildBounds(System.Boolean)">
            <summary>
            Rebuild the bounds of the items in the list
            </summary>
            <param name="useAnimation">Whether or not to animate items</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.UpdateTopVisibleItem">
            <summary>
            Ensures that the selected item is visible
            Also determines if we need to change the top visibleitem since we are at the edge 
            of the visible list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.JumpDownIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.JumpUpIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.HandleSeparatorBounds(SnapStream.ViewScape.Widgets.BaseListItem,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Handles setting the list separator bounds
            </summary>
            <param name="item">The item that might have a separator after it</param>
            <param name="newBounds">The new bounds of the item</param>
            <param name="useAnimation">Whether to animate</param>
            <param name="itemVisible">Whether the item is visible</param>
            <param name="fadeTicks">The number of ticks to fade in/out</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.AddTextDefaults(SnapStream.ViewScape.Widgets.TextListItem)">
            <summary>
            Sets the default parameters on a text list item when it's added
            </summary>
            <param name="item">The text item being added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle navigation
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to allow the mouse wheel to scroll through the list
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the scroll direction</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to update our children's positions
            </summary>
            <param name="x">The x position in our parent window</param>
            <param name="y">The y position in our parent window</param>
            <param name="width">Our width</param>
            <param name="height">Our height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.FrameMove(System.DateTime)">
            <summary>
            Overridden to rebuild the child items' bounds if needed
            </summary>
            <param name="currentTime">The current animation time stamp</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.CreateScrollBar">
            <summary>
            Creates our vertical scrollbar instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.ScrollBarNeeded">
            <summary>
            Tells us whether to paint the scrollbar
            </summary>
            <returns>Whether the scrollbar should be painted</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.OnScrollBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our scroll events by using ChangeSelectedIndex instead of the base method
            which only sets the SelectedIndex, which isn't enough for us
            </summary>
            <param name="sender">The scrollbar</param>
            <param name="sea">Params used to find out more about the scroll event</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GenericList.Clear">
            <summary>
            Overridden to reset the top visible item when clearing
            otherwise, the list gets into some really weird state
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.SelectedItem">
            <summary>
            The currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.SelectedIndex">
            <summary>
            The currently selected index
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.VisibleItems">
            <summary>
            Number of visible items to account for in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.GridPadding">
            <summary>
            Percent of the height that you wish to pad as a decimal (between 0 and 1, inclusive)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.GridPaddingPixels">
            <summary>
            Padding value in pixels
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.ItemHeight">
            <summary>
            Height of the item based on the number of visible items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.ItemWidth">
            <summary>
            Width of the item based on padding
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.DefaultItemTextHeightPercent">
            <summary>
            Percent of the item height to be used for the text height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.UpKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.DownKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.PageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GenericList.PageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GradientSpan">
            <summary>
            Defines the parameters for a transition from one color to another over a given distance.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientSpan.SpanPercent">
            <summary>
            The percentage of the total span that this span should occupy.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientSpan.StartColor">
            <summary>
            The start color for the span.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientSpan.EndColor">
            <summary>
            The end color for the span.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientSpan.#ctor">
            <summary>
            Initializes a new instance of the GradientSpan class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientSpan.#ctor(System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the GradientSpan class.
            </summary>
            <param name="percentage">The percentage of the total span this span should occupy</param>
            <param name="start">The start color</param>
            <param name="end">The end color</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GradientType">
            <summary>
            Specifies the type of gradient to render.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientType.Horizontal">
            <summary>
            Specifies a horizontal gradient.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientType.Vertical">
            <summary>
            Specifies a vertical gradient.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GradientType.Radial">
            <summary>
            Specifies a radial or circular gradient.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GradientWindow">
            <summary>
            A widget that renders its background as a smooth gradient transition.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.#ctor">
            <summary>
            Initializes a new instance of the GradientWindow class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.AddChildCore(System.Object)">
            <summary>
            Overridden to support adding of GradientSpans.
            </summary>
            <param name="child">The GradientSpan to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.AddSpan(System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Adds a new GradientSpan to this GradientWindow.
            </summary>
            <remarks>
            Do not use this method.  It has a bug.  The width parameter should be a double and it should
            be a percentage.  To add a GradientSpan use the <see cref="M:SnapStream.ViewScape.Widgets.GradientWindow.AddSpan(System.Int32,System.Drawing.Color,System.Drawing.Color)">AddSpan</see> overload that
            accepts a GradientSpan object.
            </remarks>
            <param name="width">The width of the span.</param>
            <param name="start">The start color</param>
            <param name="end">The end color</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.AddSpan(SnapStream.ViewScape.Widgets.GradientSpan)">
            <summary>
            Adds a GradientSpan to this GradientWindow.
            </summary>
            <param name="span">The span to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.FrameMove(System.DateTime)">
            <summary>
            Overridden to support alpha animation.
            </summary>
            <param name="now">The current time</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.Render">
            <summary>
            Overridden to render the gradient.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GradientWindow.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to update the gradient parameters.
            </summary>
            <param name="x">The new x coordinate</param>
            <param name="y">The new y coordinate</param>
            <param name="width">The new width</param>
            <param name="height">The new height</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.WindowAlpha">
            <summary>
            Gets or sets the alpha blending factor for this GradientWindow.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.GradientType">
            <summary>
            Gets or sets the type of gradient to draw.
            </summary>
            <remarks>
            Support for this member is not currently implemented.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.OscillateAlpha">
            <summary>
            Gets or sets a value that determines whether or not the <see cref="P:SnapStream.ViewScape.Widgets.GradientWindow.WindowAlpha">WindowAlpha</see> value should be animated.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.OscillateAlphaSpan">
            <summary>
            Gets or sets the time span over which the alpha should be animated in milliseconds.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.StartAlpha">
            <summary>
            Gets or sets the starting alpha value used when alpha animation is enabled.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GradientWindow.EndAlpha">
            <summary>
            Gets or sets the ending alpha value used when alpha animation is enabled.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.GridEventArgs">
            <summary>
            Arguments for any grid event we might raise.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GridEventArgs._selected">
            <summary>
            The selected index
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GridEventArgs._total">
            <summary>
            The total number of items in the grid
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.GridEventArgs._handled">
            <summary>
            Whether this event was handled
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.GridEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new set of args
            </summary>
            <param name="item">The selected item</param>
            <param name="total">The number of items in the grid</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GridEventArgs.Selected">
            <summary>
            The selected index
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GridEventArgs.Total">
            <summary>
            The total number of items in the grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.GridEventArgs.Handled">
            <summary>
            Whether this event was handled
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HorizontalList">
            <summary>
            A horizontal-based text list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HorizontalList._defaultItemEllipses">
            <summary>
            Determines whether the items should use ellipses or not
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HorizontalList._shouldSetDefaultEllipses">
            <summary>
            Flag that determines whether we should set the default ellipses of a text item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HorizontalList._leftKeys">
            <summary>
            Key codes that scroll left in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HorizontalList._rightKeys">
            <summary>
            Key codes that scroll right in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.#ctor">
            <summary>
            Creates a new horizontal list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle navigation in this list
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to make sure the list items get rebuilt with the new bounds
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">This window's width</param>
            <param name="height">This window's height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.FrameMove(System.DateTime)">
            <summary>
            Overridden to make sure the list items get animated when needed
            </summary>
            <param name="currentTime">The current time stamp for animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.AddItem(SnapStream.ViewScape.Widgets.TextListItem)">
            <summary>
            Adds a new text list item to this list
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.AddTextItem(System.String)">
            <summary>
            Adds a new text list item to this list
            </summary>
            <param name="text">The text of the item to add (a new item will be created for this text)</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.ScrollLeft">
            <summary>
            Scrolls left in the list, without wrapping
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.ScrollLeft(System.Boolean)">
            <summary>
            Scrolls left in the list
            </summary>
            <param name="wrap">Whether or not to wrap when scrolling</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.ScrollRight">
            <summary>
            Scrolls right in the list, without wrapping
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.ScrollRight(System.Boolean)">
            <summary>
            Scrolls right in the list
            </summary>
            <param name="wrap">Whether or not to wrap when scrolling</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.AddTextDefaults(SnapStream.ViewScape.Widgets.TextListItem)">
            <summary>
            Adds the item to the list and adds the list defaults to the item
            </summary>
            <param name="item">
            Item to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.ChangeSelectedIndex(System.Int32)">
            <summary>
            Will attempt to change the selecteIndex to the newindex.
            If change is successful, the list will be rebuilt.
            </summary>
            <param name="newIndex">
            Index to set as selected
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.InternalSetSelectedIndex(System.Int32)">
            <summary>
            Sets the selected index
            </summary>
            <param name="index">The new index</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.UpdateBuildParameters">
            <summary>
            Updates the build parameters for rebuilding/animating the items in this list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.RebuildBounds(System.Boolean)">
            <summary>
            Rebuilds the items' bounds in the list
            </summary>
            <param name="useAnimation">Whether to use animation or not</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.UpdateLeftVisibleItem">
            <summary>
            Updates the left-most visible item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HorizontalList.CreateObject(System.Type)">
            <summary>
            Creates a new text list item with this list's defaults if
            TextListItem is the specified type.  Otherwise returns null.
            </summary>
            <param name="type">The specified type that needs to be created</param>
            <returns>A new text list item or null</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.DefaultItemEllipses">
            <summary>
            Determines whether the items should use ellipses or not
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.DefaultItemTextColor">
            <summary>
            The default color of the text in this list's items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.DefaultItemTextHeightPercent">
            <summary>
            The default text height on this list's items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.HighlightItemTextColor">
            <summary>
            The highlighted item text color for this list's items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.SelectedItem">
            <summary>
            The currently selected list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.SelectedIndex">
            <summary>
            The currently selected index
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.VisibleItems">
            <summary>
            The number of visible items at any time
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.GridPadding">
            <summary>
            Perecent of the height that you wish to pad as a decimal (between 0 and 1, inclusive)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.LeftKeys">
            <summary>
            Key codes that scroll left in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HorizontalList.RightKeys">
            <summary>
            Key codes that scroll right in the list
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ButtonAlignment">
            <summary>
            Describes whether the buttons are left-to-right or top-to-bottom
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ButtonAlignment.Horizontal">
            <summary>
            The hotbar buttons are drawn from left-to-right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ButtonAlignment.Vertical">
            <summary>
            The hotbar buttons are drawn from top-to-bottom
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSHotbarEvent">
            <summary>
            Overrides the base msg event to provide button press information
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSMsgEvent">
            <summary>
            Encapsulates a snapstream message with some custom data (like a handled flag)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsgEvent.Handled">
            <summary>
            Whether the event was handled yet
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsgEvent.Message">
            <summary>
            The message for this event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSMsgEvent.#ctor">
            <summary>
            Creates a new event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSHotbarEvent.GroupID">
            <summary>
            The group ID of the button that was pressed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSHotbarEvent.ButtonID">
            <summary>
            The button ID of the button that was pressed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSHotbarEvent.#ctor(SnapStream.ViewScape.Widgets.HotbarClickEventArgs)">
            <summary>
            Creates the buton press event setting the appropriate information
            </summary>
            <param name="e">
            Contains the hotbar button press information to be set
            </param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Hotbar">
            <summary>
            A simple hotbar for display on every screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._FADE_TIME">
            <summary>
            Our default fading time
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._LEFT_SIDE_ASPECT_RATIO">
            <summary>
            The aspect ratio of our left image (w/h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._RIGHT_SIDE_ASPECT_RATIO">
            <summary>
            The aspect ratio of our right image (w/h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._BACK_ASPECT_RATIO">
            <summary>
            The aspect ratio of the back button (w/h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._HOME_ASPECT_RATIO">
            <summary>
            The aspect ratio of the home button (w/h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._BUTTON_ASPECT_RATIO">
            <summary>
            The aspect ratio of any custom button (w/h)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._TOP_WIDTH_FRACTION">
            <summary>
            This is a fudge factor to apply to the top border (with respect to the right side portion)
            that allows us to line up the slanted edges
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._BOTTOM_WIDTH_FRACTION">
            <summary>
            This is a fudge factor to apply to the bottom border (with respect to the right side portion)
            that allows us to line up the slanted edges
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._MAIN_BUTTON_GROUP">
            <summary>
            The main hotbar button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._HOME_BUTTON">
            <summary>
            The home button id in the main button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._BACK_BUTTON">
            <summary>
            The back button id in the main button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._RESIZE_BUTTON">
            <summary>
            The maximize and restore id in the main button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._OPTIONS_BUTTON">
            <summary>
            The toggle options id in the main button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._active">
            <summary>
            Whether the hotbar is active (while inactive, it is not shown)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._mouseActive">
            <summary>
            Whether the mouse is active (while inactive, we don't show on activate)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._topLeftBorder">
            <summary>
            Eyecandy that goes on the top left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._topCenterBorder">
            <summary>
            Eyecandy that goes on the top center
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._topRightBorder">
            <summary>
            Eyecandy that goes on the top right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._middleLeftBorder">
            <summary>
            Eyecandy that goes on the middle left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._middleRightBorder">
            <summary>
            Eyecandy that goes on the middle right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._bottomLeftBorder">
            <summary>
            Eyecandy that goes on the bottom left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._bottomCenterBorder">
            <summary>
            Eyecandy that goes on the bottom center
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._bottomRightBorder">
            <summary>
            Eyecandy that goes on the bottom right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._groups">
            <summary>
            All of the groups of hotbar buttons available
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._topBorderHeight">
            <summary>
            The number of pixels high the top border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._bottomBorderHeight">
            <summary>
            The number of pixels high the bottom border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._leftBorderWidth">
            <summary>
            The number of pixels wide the left border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._rightBorderWidth">
            <summary>
            The number of pixels wide the right border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._itemWidth">
            <summary>
            The width, in pixels, of a single hotbar item when the screen size matches
            the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._itemHeight">
            <summary>
            The height, in pixels, of a single hotbar item when the screen size matches
            the base width/height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._positionAlignment">
            <summary>
            Tells us where the x and y coordinates defined in the skin sit on the hotbar
            which basically defines where the hotbar is placed relative to the skinned position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._buttonOrientation">
            <summary>
            Tells us whether the buttons are placed left-to-right or top-to-bottom
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hotbar._savedPosition">
            <summary>
            The last position passed on to us from SetBoundsCore for positioning the hotbar
            in-between resizing events (like when groups are shown or hidden)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.#ctor">
            <summary>
            Creates the hotbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.Activate(System.Int32)">
            <summary>
            Turns on the hotbar (does NOT show it yet)
            </summary>
            <param name="fadeTime">How many ticks before fade-in is complete (unused at this time)</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.Deactivate(System.Int32)">
            <summary>
            Turns off (and hides) the hotbar
            </summary>
            <param name="fadeTime">How many ticks before fade-out is complete</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.ShowGroup(System.String)">
            <summary>
            Makes the given group and all of the included buttons visible
            </summary>
            <param name="groupID">
            The group ID of the group to be made visible
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.HideGroup(System.String)">
            <summary>
            Makes the given group and all of the included buttons not visible
            </summary>
            <param name="groupID">
            The group ID of the group to be made not visible
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.HideAllGroups">
            <summary>
            Hides all groups and their included buttons
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.AddGroup(SnapStream.ViewScape.Widgets.HotbarGroup)">
            <summary>
            Adds a new button group to the available button groups
            </summary>
            <param name="group">
            The button group to be added
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.ShowButton(System.String,System.String)">
            <summary>
            Makes a particular button visible
            </summary>
            <param name="groupID">
            The group ID of the button to show
            </param>
            <param name="buttonID">
            The button ID of the button to show
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.HideButton(System.String,System.String)">
            <summary>
            Makes a particular button not visible
            </summary>
            <param name="groupID">
            The group ID of the button to hide
            </param>
            <param name="buttonID">
            The button ID of the button to hide
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.GetGroup(System.String)">
            <summary>
            Gets a particular button group from the list of available groups
            </summary>
            <param name="groupID">
            The group ID of the button group to get
            </param>
            <returns>
            The button group with the given ID or null if not found
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.GetButton(System.String,System.String)">
            <summary>
            Gets a particular button from the list of available groups
            </summary>
            <param name="groupID">
            The group ID of the button to get
            </param>
            <param name="buttonID">
            The button ID of the button to get
            </param>
            <returns>
            The button with the given group ID and button ID or null if not found
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.ResetSkin">
            <summary>
            Clears all of the existing children and recreates them.  Then reloads
            the skin defaults.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Handles SSMsg events
            </summary>
            <param name="msg">
            Contains the msg information
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to rebuild the hotbar to handle all of its quirky resizing behavior
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">This window's width</param>
            <param name="height">This window's height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.InitializeChildren">
            <summary>
            Initializes the child windows on construction and on skin change
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.RebuildHotbar">
            <summary>
            Overridden to allow the current size to be used
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.RebuildHotbar(System.Drawing.Size)">
            <summary>
            Rebuilds the hotbar with the given size
            </summary>
            <param name="size">
            The size to use in rebuilding
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.RebuildHorizontalHotbar(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Rebuilds the hotbar from left to right
            </summary>
            <param name="x">
            Used to position the hotbar after rebuilding
            </param>
            <param name="y">
            Used to position the hotbar after rebuilding
            </param>
            <param name="width">
            This parameter is ignored in this case, the ending width will be determined by
            the buttons that are currently showing
            </param>
            <param name="height">
            This height is used to determine the width of all elements given their aspect ratios
            to be maintained.  The final resulting hotbar window will always be this height.
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.RebuildVerticalHotbar(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Rebuilds the hotbar from top to bottom
            </summary>
            <param name="x">
            Used to position the hotbar after rebuilding
            </param>
            <param name="y">
            Used to position the hotbar after rebuilding
            </param>
            <param name="width">
            This width is used to determine the height of all elements given their aspect ratios
            to be maintained.  The final resulting hotbar window will always be this width.
            </param>
            <param name="height">
            This parameter is ignored in this case, the ending height will be determined by
            the buttons that are currently showing
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.PositionHotbar(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Repositions the hotbar window by the given position and position alignment
            </summary>
            <param name="x">
            The x position 
            </param>
            <param name="y">
            The y position
            </param>
            <param name="width">
            The final width of the hotbar
            </param>
            <param name="height">
            The final height of the hotbar
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.SetOrientations(SnapStream.ViewScape.Widgets.ImageAngle,System.Boolean,System.Boolean)">
            <summary>
            Helper method to set the orientations of the windows that need to be
            flipped and/or rotated when changing the hotbar orientation and button alignment
            </summary>
            <param name="angle">
            The angle to rotate all of the windows with
            </param>
            <param name="mirrorV">
            Whether to vertically flip all of the windows
            </param>
            <param name="mirrorH">
            Whether to horizontally flip all of the windows
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.OnButtonClicked(SnapStream.ViewScape.Widgets.HotbarClickEventArgs)">
            <summary>
            Generic hotbar button clicked event handler that handles all buttons
            </summary>
            <param name="e">
            Contains the group and button IDs of the button that was clicked
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.RaiseClickEvent(SnapStream.ViewScape.Widgets.HotbarClickEventArgs)">
            <summary>
            Raises our click event
            </summary>
            <param name="e">
            Contains the button and group IDs of the button that was clicked
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hotbar.AddChildCore(System.Object)">
            <summary>
            Overridden to add hotbar groups as groups instead of as windows
            </summary>
            <param name="child">The child object to be added</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.TopLeftBorderImage">
            <summary>
            Eyecandy that goes on the top left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.TopCenterBorderImage">
            <summary>
            Eyecandy that goes on the top center
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.TopRightBorderImage">
            <summary>
            Eyecandy that goes on the top right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.MiddleLeftBorderImage">
            <summary>
            Eyecandy that goes on the middle left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.MiddleRightBorderImage">
            <summary>
            Eyecandy that goes on the middle right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.BottomLeftBorderImage">
            <summary>
            Eyecandy that goes on the bottom left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.BottomCenterBorderImage">
            <summary>
            Eyecandy that goes on the bottom center
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.BottomRightBorderImage">
            <summary>
            Eyecandy that goes on the bottom right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.TopBorderHeight">
            <summary>
            The number of pixels high the top border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.BottomBorderHeight">
            <summary>
            The number of pixels high the bottom border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.LeftBorderWidth">
            <summary>
            The number of pixels wide the left border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.RightBorderWidth">
            <summary>
            The number of pixels wide the right border should be when the screen size
            matches the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.ItemWidth">
            <summary>
            The width, in pixels, of a single hotbar item when the screen size matches
            the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.ItemHeight">
            <summary>
            The height, in pixels, of a single hotbar item when the screen size matches
            the base width/height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.PositionAlignment">
            <summary>
            Tells us where the x and y coordinates defined in the skin sit on the hotbar
            which basically defines where the hotbar is placed relative to the skinned position
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hotbar.ButtonOrientation">
            <summary>
            Tells us whether the buttons are placed left-to-right or top-to-bottom
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hotbar.Click">
            <summary>
            Informs anyone that cares that a button was clicked on the hotbar
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SingletonHotbar">
            <summary>
            Encapsulates the hotbar in a singleton
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SingletonHotbar.Instance">
            <summary>
            Our singleton instance of the hotbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonHotbar.InitializeChildren">
            <summary>
            Overriden to load the singleton default
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HotbarClickHandler">
            <summary>
            The format for handling a hotbar click event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HotbarClickEventArgs">
            <summary>
            Event args passed when a hotbar button is clicked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarClickEventArgs.GroupID">
            <summary>
            The unique identifier for this button's group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarClickEventArgs.ButtonID">
            <summary>
            The unique identifier for this button within this button group
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarClickEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates the event args passed when a hotbar button is clicked
            </summary>
            <param name="buttonID">The unique identifier for this button within this button group</param>
            <param name="groupID">The unique identifier for this button's group</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarClickEventArgs.#ctor(SnapStream.ViewScape.Widgets.HotbarButton)">
            <summary>
            Creates the event args passed when a hotbar button is clicked
            </summary>
            <param name="button">The button that was pressed</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HotbarButton">
            <summary>
            A Button that goes in the hotbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarButton._buttonID">
            <summary>
            The unique identifier for this button within this button group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarButton._groupID">
            <summary>
            The unique identifier for this button's group
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarButton.#ctor(System.String,System.String)">
            <summary>
            Creates a button that goes in the hotbar
            </summary>
            <param name="buttonID">The unique identifier for this button within this button group</param>
            <param name="groupID">The unique identifier for this button's group</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarButton.#ctor">
            <summary>
            Creates a shell of a button (only the skin should use this constructor)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarButton.RaiseClickedEvent(System.EventArgs)">
            <summary>
            Overridden to call our own click event
            </summary>
            <param name="e">
            These args will be thrown away
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HotbarButton.ButtonID">
            <summary>
            The unique identifier for this button within this button group
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HotbarButton.GroupID">
            <summary>
            The unique identifier for this button's group
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.HotbarButton.HotbarClick">
            <summary>
            Our own click event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HotbarGroup">
            <summary>
            A group of HotbarButtons that go in the hotbar together
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarGroup._buttons">
            <summary>
            Our list of the buttons in this group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarGroup._groupID">
            <summary>
            Our group ID
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HotbarGroup._visible">
            <summary>
            Whether this whole group is visible
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.#ctor">
            <summary>
            Creates a hotbar button group with an unknown group id (to be supplied later)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.#ctor(System.String)">
            <summary>
            Creates a hotbar button group with the given group id
            </summary>
            <param name="groupID">The group ID for this button group</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.AddButton(SnapStream.ViewScape.Widgets.HotbarButton)">
            <summary>
            Adds a new hotbar button to this button group
            </summary>
            <param name="button">The button to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.GetButton(System.String)">
            <summary>
            Gets a button with the given button ID
            </summary>
            <param name="buttonID">
            The Button ID of the button to be found
            </param>
            <returns>
            The button, if it was found
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.SnapStream#Serialization#IAddChild#AddChild(System.Object)">
            <summary>
            Implemented to add buttons to our internal group collection
            </summary>
            <param name="child">The child object to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HotbarGroup.SnapStream#Serialization#IAddChild#AddText(System.String)">
            <summary>
            Implemented to do nothing
            </summary>
            <param name="text">The text to be added</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HotbarGroup.GroupID">
            <summary>
            Our group ID
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HotbarGroup.Buttons">
            <summary>
            Our list of the buttons in this group
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HotbarGroup.Visible">
            <summary>
            Whether this whole group is visible
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.HScrollBar">
            <summary>
            A simple horizontal scrollbar
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScrollBar">
            <summary>
            A basis for any scrollbar we may have
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._incButton">
            <summary>
            The button that increments the current selection
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._decButton">
            <summary>
            The button that decrements the current selection
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._nonVisibleRegion">
            <summary>
            The current target for the non-visible items region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._visibleRegion">
            <summary>
            The current target for the visible items region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._lastVisibleRegion">
            <summary>
            The last target for the visible items region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._lastMousePosition">
            <summary>
            The location of the last recorded mouse event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._nonVisibleImage">
            <summary>
            The image for the non-visible items region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._visibleImage">
            <summary>
            The image for the visible items region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._minimum">
            <summary>
            The minimum value allowed by this scrollbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._maximum">
            <summary>
            The maximum value allowed by this scrollbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._smallChange">
            <summary>
            The delta defined as a small change
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._largeChange">
            <summary>
            The delta defined as a large change
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollBar._value">
            <summary>
            The current value of the scrollbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollBar.#ctor">
            <summary>
            Creates the scrollbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollBar.Render">
            <summary>
            Draws our region images to the screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollBar.OnIncButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our increment button presses
            </summary>
            <param name="sender">The button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollBar.OnDecButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our decrement button presses
            </summary>
            <param name="sender">The button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollBar.RaiseScrollEvent(SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Raises our scroll movement event
            </summary>
            <param name="e">Contains the information about the scroll event</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.VisibleImage">
            <summary>
            The image for the visible items region
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.NonVisibleImage">
            <summary>
            The image for the non-visible items region
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.IncrementImage">
            <summary>
            The image for the region that increments the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.IncrementFocusImage">
            <summary>
            The focus image for the region that increments the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.IncrementSelectImage">
            <summary>
            The select image for the region that increments the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.DecrementImage">
            <summary>
            The image for the region that decrements the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.DecrementFocusImage">
            <summary>
            The focus image for the region that decrements the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.DecrementSelectImage">
            <summary>
            The select image for the region that decrements the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.Minimum">
            <summary>
            The minimum value allowed by this scrollbar
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.Maximum">
            <summary>
            The maximum value allowed by this scrollbar
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.SmallChange">
            <summary>
            The delta defined as a small change
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.LargeChange">
            <summary>
            The delta defined as a large change
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScrollBar.Value">
            <summary>
            The current value of the scrollbar
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.ScrollBar.Scroll">
            <summary>
            Our scroll movement event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HScrollBar._MIN_WIDTH">
            <summary>
            The minimum width of the scrollbar visible item region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.HScrollBar._indicatorPad">
            <summary>
            Pads the indicator image inside the non-visible region
            by this value times the height
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.#ctor">
            <summary>
            Creates a new horizontal scrollbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse down events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Holds the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse move events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse up events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.FrameMove(System.DateTime)">
            <summary>
            The arrow backgrounds are always drawn square, with the exception of
            some boundary safe calculations in the case of really tall scrollbars.
            You shouldn't make fat scrollbars anyway because they look ugly.
            </summary>
            <param name="currentTime">Time stamp to use for animations</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.HScrollBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets defaults for our button placement
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HScrollBar.IndicatorPad">
            <summary>
            Pads the indicator image inside the non-visible region
            by this value times the height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.HScrollBar.EffectiveNonVisibleRegion">
            <summary>
            Calculates the non-visible region that we can paint in, given
            the indicator pad value
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PositionEventArgs">
            <summary>
            A simple event args for transmitting a directshow position
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PositionEventArgs.Position">
            <summary>
            The position (in 100-ns ticks) of this directshow graph
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PositionEventArgs.#ctor(System.Int64)">
            <summary>
            Creates a new position event args class
            </summary>
            <param name="pos">The position (100-ns ticks) of the graph</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PositionEventHandler">
            <summary>
            Template for handling position events
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Hud">
            <summary>
            A simple heads-up display.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._position">
            <summary>
            The current time position in the file, chapter, title, song, whatever
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._totalTime">
            <summary>
            The total time for the current file, chapter, title, song, whatever
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._title">
            <summary>
            The current title information
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._currentState">
            <summary>
            The current playback state
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._playButton">
            <summary>
            Our play button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._pauseButton">
            <summary>
            Our pause button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._stopButton">
            <summary>
            Our stop button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._prevButton">
            <summary>
            Our previous button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._nextButton">
            <summary>
            Our next button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._fastForwardButton">
            <summary>
            Our fast forward button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._rewindButton">
            <summary>
            Our rewind button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._optionButton">
            <summary>
            Our option button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._muteButton">
            <summary>
            Our mute button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._unmuteButton">
            <summary>
            Our unmute button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._exitButton">
            <summary>
            Our exit button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._hideTime">
            <summary>
            The time stamp at which to hide the hud
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._trackBar">
            <summary>
            Our trackbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._volume">
            <summary>
            Our volume control
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._mainWindow">
            <summary>
            Our main background window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._buttonWindow">
            <summary>
            Our button window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._leftClickHides">
            <summary>
            Tells us whether left clicking should hide the hud
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._mainWindowRegion">
            <summary>
            The region that the hud covers
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._volumeRegion">
            <summary>
            The region that the volume control covers
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._buttonWindowRegion">
            <summary>
            The region that the button window covers
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._playing">
            <summary>
            Tells us whether or not we are playing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._mouseActive">
            <summary>
            Tells us whether the mouse is currently active or not (for button showing/hiding)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Hud._toggleKeys">
            <summary>
            Key codes that toggle the hidden/shown state of the hud
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.#ctor">
            <summary>
            Creates our hud
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.CreateMainAndVolume">
            <summary>
            Creates our main window and volume bar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.CreateTextObjects">
            <summary>
            Creates our text objects
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.CreateButtons">
            <summary>
            Creates our buttons
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.CreateTrackBar">
            <summary>
            Creates our trackbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.FinalCreation">
            <summary>
            Final creation tasks
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.SetTimer">
            <summary>
            Resets our hide time
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.FadeIn">
            <summary>
            Overridden to reset our timer
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.FadeIn(System.Int32)">
            <summary>
            Overridden to reset our timer
            </summary>
            <param name="ticks">Number of ticks to fade in</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles our keypresses
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.Contains(System.Drawing.Point)">
            <summary>
            Overridden to only check our child windows for the point
            </summary>
            <param name="pt">The point to check</param>
            <returns>True IFF the volume bar or main window contains the point</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse move events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse button up events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position and button</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse wheel events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the wheel delta</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnVisibleChanged(System.EventArgs)">
            <summary>
            Hides or shows the hud if visible is true
            </summary>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.FrameMove(System.DateTime)">
            <summary>
            Handles our time-out events
            </summary>
            <param name="currentTime">The current time stamp to use in animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overriden so that we can detect when our region has been invalidated
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.DeleteDeviceObjects(System.Object,System.EventArgs)">
            <summary>
            Overridden so that we can delete the regions we created.  These regions can be quite large depending on the
            textures used to create them.
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to keep the mouse active/inactive state
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.TimerExpired">
            <summary>
            Tells use whether our timer has expired (we need to hide now?)
            </summary>
            <returns>true if the hide time is greater than the current time</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.TryToShowVolume">
            <summary>
            Attempts to show the volume bar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.SyncButtonsVisible">
            <summary>
            Tries to show/hide the hud buttons (please use this method for all showing/hiding of buttons)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnPlayButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our play button event
            </summary>
            <param name="sender">Hopefully the play button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnPauseButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our pause button event
            </summary>
            <param name="sender">Hopefully the pause button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnStopButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our stop button event
            </summary>
            <param name="sender">Hopefully the stop button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnNextButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our next button event
            </summary>
            <param name="sender">The next button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnPrevButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our previous button event
            </summary>
            <param name="sender">The previous button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnFastForwardButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our fast-forward button event
            </summary>
            <param name="sender">The fast-forward button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnRewindButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our rewind button event
            </summary>
            <param name="sender">The rewind button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnOptionButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our option button event
            </summary>
            <param name="sender">The option button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnMuteButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our mute button event
            </summary>
            <param name="sender">The mute or unmute button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnVolumeChanged(System.Object,SnapStream.ViewScape.Services.VolumeEventArgs)">
            <summary>
            Sets the visible state of the mute buttons
            </summary>
            <param name="sender">The sound cache</param>
            <param name="e">Contains the volume params</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnMuteMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Shows the current volume bar if we have a mouse move over the mute button
            </summary>
            <param name="sender">The mute/unmute button</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnExitButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles our exit button event
            </summary>
            <param name="sender">Hopefully the exit button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.OnTrackBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our trackbar scroll events
            </summary>
            <param name="sender">The trackbar</param>
            <param name="sea">Contains the new position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaisePlayEvent">
            <summary>
            Raises our play event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaisePauseEvent">
            <summary>
            Raises our pause event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseStopEvent">
            <summary>
            Raises our stop event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseNextEvent">
            <summary>
            Raises our next event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaisePrevEvent">
            <summary>
            Raises our previous event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseFastForwardEvent">
            <summary>
            Raises our fast-forward event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseRewindEvent">
            <summary>
            Raises our rewind event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseOptionEvent">
            <summary>
            Raises our option event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseShowHudEvent">
            <summary>
            Raises our show hud event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseHideHudEvent">
            <summary>
            Raises our hide hud event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseSetPositionEvent(System.Int64)">
            <summary>
            Raises our set position event
            </summary>
            <param name="position">The position to set</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Hud.RaiseExitEvent">
            <summary>
            Tells our consumer to exit himself OR HERSELF!
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.PlayButton">
            <summary>
            Our play button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.PauseButton">
            <summary>
            Our pause button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.StopButton">
            <summary>
            Our stop button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.PrevButton">
            <summary>
            Our previous button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.NextButton">
            <summary>
            Our next button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.FastForwardButton">
            <summary>
            Our fast forward button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.RewindButton">
            <summary>
            Our rewind button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.OptionButton">
            <summary>
            Our option button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.MuteButton">
            <summary>
            Our mute button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.UnMuteButton">
            <summary>
            Our unmute button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.ExitButton">
            <summary>
            Our exit button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.Position">
            <summary>
            The current time position in the file, chapter, title, song, whatever
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.TotalTime">
            <summary>
            The total time for the current file, chapter, title, song, whatever
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.Title">
            <summary>
            The current title information
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.CurrentState">
            <summary>
            The current playback state
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.Playing">
            <summary>
            Tells the consumer whether we are playing or paused
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.HideTime">
            <summary>
            The time stamp at which to hide the hud
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.TrackBar">
            <summary>
            Our trackbar
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.Volume">
            <summary>
            Our volume control
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.MainWindow">
            <summary>
            Our main background window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.ButtonWindow">
            <summary>
            Our button window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.LeftClickHides">
            <summary>
            Tells us whether left clicking should hide the hud
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.CoveredRegion">
            <summary>
            Overridden so that we can return our region when a video is playing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Hud.ToggleKeys">
            <summary>
            Key codes that toggle the hidden/shown state of the hud
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Play">
            <summary>
            Our play event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Pause">
            <summary>
            Our pause event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Stop">
            <summary>
            Our stop event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Next">
            <summary>
            Our next event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Previous">
            <summary>
            Our previous event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.FastForward">
            <summary>
            Our fast-forward event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Rewind">
            <summary>
            Our rewind event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Option">
            <summary>
            Our option event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.HideHud">
            <summary>
            Our hide hud event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.ShowHud">
            <summary>
            Our show hud event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.SetPosition">
            <summary>
            Our set position event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Hud.Exit">
            <summary>
            Our exit event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.BrowseEventArgs">
            <summary>
            The necessary arguments for any file browser event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BrowseEventArgs._item">
            <summary>
            The selected file item when this event was raised
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.BrowseEventArgs._handled">
            <summary>
            Whether the event was handled or not
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.BrowseEventArgs.#ctor(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Creates a browser event with the given file item
            </summary>
            <param name="theItem">The file item</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BrowseEventArgs.Item">
            <summary>
            The selected file item when this event was raised
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.BrowseEventArgs.Handled">
            <summary>
            Whether the event was handled or not
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.BrowseEventHandler">
            <summary>
            Template method for handling a browser event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ListSearcher">
            <summary>
            Allows searching of StringLists with substring matching
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ListSearcher.#ctor">
            <summary>
            Initializes a new instance of the ListSearcher class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ListSearcher.StartSearch(SnapStream.ViewScape.Widgets.IStringList)">
            <summary>
            Starts the search of a string list.
            </summary>
            <param name="list">The list to search</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ListSearcher.StartSearch(System.String[])">
            <summary>
            Starts the search of an array of strings.
            </summary>
            <param name="items">The string array to search</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ListSearcher.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard navigation.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ListSearcher.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle to <see cref="F:SnapStream.ViewScape.Widgets.SSMsg.Back">Back</see> message.
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ListSearcher.TextEntry">
            <summary>
            Gets the TextEntry object that allows the user to enter the text to search for.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ListSearcher.Results">
            <summary>
            Gets the results list where matching items are shown.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ListSearcher.SelectedItem">
            <summary>
            Gets the selected item index.
            </summary>
            <remarks>
            The index returned here will be an index into the string list or string array that
            was specified in <see cref="M:SnapStream.ViewScape.Widgets.ListSearcher.StartSearch(SnapStream.ViewScape.Widgets.IStringList)">StartSearch</see>.
            </remarks>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.ListSearcher.Cancel">
            <summary>
            Occurs when the user cancels the search dialog without selecting an item.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.ListSearcher.ItemSelected">
            <summary>
            Occurs when the user selects an item from the results list.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuBoxEventArgs">
            <summary>
            Holds all of the needed parameters when signaling a menu box event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBoxEventArgs._id">
            <summary>
            The ID of the item that this event relates to
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBoxEventArgs.#ctor(System.Int32)">
            <summary>
            Creates a new set of menu box args
            </summary>
            <param name="id">The ID of the item that this event relates to</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBoxEventArgs.ID">
            <summary>
            The ID of the item that this event relates to
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuBoxEventHandler">
            <summary>
            A template for handling a menu box event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuBox">
            <summary>
            Contains a list of custom menu items that can be executed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._message">
            <summary>
            The message to be displayed at the top of the menu box
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._list">
            <summary>
            The list that contains our custom menu items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._messageBoxHeightPercent">
            <summary>
            Percent of the dialog box devoted to the message box
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._leftPad">
            <summary>
            The percentage of the width to pad on the left side
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._rightPad">
            <summary>
            The percentage of the width to pad on the right side
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._topPad">
            <summary>
            The percentage of the height to pad on the top
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._bottomPad">
            <summary>
            The percentage of the height to pad on the bottom
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._doNotPosition">
            <summary>
            Lets the menu box know whether or not it should run its positioning code, or
            just use the positions specified in the skin file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuBox._cancelKeys">
            <summary>
            The key codes for cancelling the menu box (closes it)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.#ctor">
            <summary>
            Creates a default menu box
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.AddCancelKey(System.Windows.Forms.Keys)">
            <summary>
            Allows the consumer to specify additional keys that can cancel this dialog
            </summary>
            <param name="keyCode">The key code of the key that will cancel this dialog</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.AddMenuItem(System.String)">
            <summary>
            Adds a simple menu item with the given text
            </summary>
            <param name="text">The text to display for this menu item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.AddMenuItem(System.String,System.Int32@)">
            <summary>
            Adds a simple menu item with the given text
            </summary>
            <param name="text">The text to display for this menu item</param>
            <param name="index">Outputs the index of the item, if it was added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.SetSelectedItem(System.Int32)">
            <summary>
            Sets the selected item in the option list
            </summary>
            <param name="newIndex">
            Index to set as selected
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.AddSelectorItem(SnapStream.ViewScape.Widgets.OptionListItem,System.Int32@)">
            <summary>
            Adds an options list item
            </summary>
            <param name="item">The item to be added</param>
            <param name="index">Outputs the index of the item, if it was added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.GetSelectorItem(System.Int32,SnapStream.ViewScape.Widgets.OptionListItem@)">
            <summary>
            Gets the option list item if there is one at the given index
            </summary>
            <param name="index">The index of the item to get</param>
            <param name="item">The item, if it was found, otherwise null</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.Clear">
            <summary>
            Clears the menu box's list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our cancel keys
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code of the pressed key</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to set the list's bounds
            </summary>
            <param name="x">X position of the top-left corner</param>
            <param name="y">Y position of the top-left corner</param>
            <param name="width">The window's width</param>
            <param name="height">The window's height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to make sure this dialog is in front when shown
            </summary>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.OnItemActivated(System.Object,SnapStream.ViewScape.Widgets.ItemActivatedArgs)">
            <summary>
            Handles our list's item activated event by sending our executed event
            </summary>
            <param name="sender">The list</param>
            <param name="e">Contains the index of the item that was activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.RaiseExecutedEvent(System.Int32)">
            <summary>
            Raises our executed event
            </summary>
            <param name="id">The index of the item that was executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuBox.RaiseCanceledEvent">
            <summary>
            Raises our Canceled event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.MessageBox">
            <summary>
            The message to be displayed at the top of the menu box
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.List">
            <summary>
            The list that contains our custom menu items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.Message">
            <summary>
            The message to display in the message portion of the message box
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.FontSize">
            <summary>
            The relative height of the font to request
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.HorizontalAlign">
            <summary>
            The horizontal text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.VerticalAlign">
            <summary>
            The vertical text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.Color">
            <summary>
            The color in which to paint the above-mentioned text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.Ellipses">
            <summary>
            Specifies how to ellipsize the text in this object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.Multiline">
            <summary>
            Whether or not to use multiple lines
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.MessageBoxHeightPercent">
            <summary>
            Percent of the dialog box devoted to the message box
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.LeftPad">
            <summary>
            The percentage of the width to pad on the left side
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.RightPad">
            <summary>
            The percentage of the width to pad on the right side
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.TopPad">
            <summary>
            The percentage of the height to pad on the top
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.BottomPad">
            <summary>
            The percentage of the height to pad on the bottom
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.VisibleItems">
            <summary>
            The number of visible items in the menu box
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.ItemSpacing">
            <summary>
            Percentage of item height to space between the items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.DoNotPosition">
            <summary>
            Lets the menu box know whether or not it should run its positioning code, or
            just use the positions specified in the skin file
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuBox.CancelKeys">
            <summary>
            The key codes for cancelling the menu box (closes it)
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.MenuBox.Executed">
            <summary>
            Raised when a menu box item is executed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.MenuBox.Canceled">
            <summary>
            Raised when we are Canceled (from the cancel keys)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.IMenuItemInfo">
            <summary>
            Describes the different properties of a menu item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.DisplayText">
            <summary>
            The text to be displayed in the menu for this item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.DisplayGraphic">
            <summary>
            The graphic to be displayed when this menu item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.DisplayMesh">
            <summary>
            The mesh object to be displayed when this menu item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.WindowToShow">
            <summary>
            The window/screen to show when this menu item is executed/activated
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.AppLauncher">
            <summary>
            The launcher to use when this menu item is executed/activated
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.ShouldShowWindow">
            <summary>
            Says whether this menu item shows a window/screen
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.ShouldLaunchApplication">
            <summary>
            Says whether this menu item launches an application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.ShouldExitApplication">
            <summary>
            Says whether this menu item exits the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.IMenuItemInfo.CheckParameter">
            <summary>
            The check parameter used to check if this menu item should actually be populated
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuItemActivatedEventHandler">
            <summary>
            Template for handling a menu item activated event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuItemActivatedArgs">
            <summary>
            Arguments for when a menu item is activated
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MenuItemActivatedArgs._menuInfo">
            <summary>
            The info for this menu item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuItemActivatedArgs.#ctor(SnapStream.ViewScape.Widgets.IMenuItemInfo)">
            <summary>
            Creates a new set of args with the given menu item information
            </summary>
            <param name="menuInfo">The menu item info to use for these args</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuItemActivatedArgs.MenuInfo">
            <summary>
            The info for this menu item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MenuListItem">
            <summary>
            Item that contains all of the information necessary for creating an entry in a menu
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuListItem.#ctor">
            <summary>
            Creates a new menu item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuListItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new menu item that shows another window/screen
            </summary>
            <param name="displayText">The displayed text of this menu item</param>
            <param name="displayGraphic">The graphic displayed when this menu item is selected</param>
            <param name="windowToShow">The window/screen shown when this menu item is activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuListItem.#ctor(System.String,System.String,SnapStream.ViewScape.Util.Launcher)">
            <summary>
            Creates a new menu item that launches another application
            </summary>
            <param name="displayText">The displayed text of this menu item</param>
            <param name="displayGraphic">The graphic displayed when this menu item is selected</param>
            <param name="appLauncher">The launcher that is used when this menu item is activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuListItem.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new menu item that exits the application
            </summary>
            <param name="displayText">The displayed text of this menu item</param>
            <param name="displayGraphic">The graphic displayed when this menu item is selected</param>
            <param name="shouldExitApplication">Whether this item should exit the application or not</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MenuListItem.InitPrivateMembers">
            <summary>
            Common init procedures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.DisplayText">
            <summary>
            The friendly text displayed for this menu item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.DisplayGraphic">
            <summary>
            The graphic displayed when this menu item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.DisplayMesh">
            <summary>
            The mesh object displayed when this menu item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.WindowToShow">
            <summary>
            The window/screen to show when this menu item is activated
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.AppLauncher">
            <summary>
            The launcher for this menu item that launches an application when activated
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.ShouldShowWindow">
            <summary>
            Whether this menu item shows another window
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.ShouldLaunchApplication">
            <summary>
            Whether this menu item launches another application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.ShouldExitApplication">
            <summary>
            Whether this menu item exits the application
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.CheckParameter">
            <summary>
            The type of check needed to determine if this menu item should be added
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MenuListItem.MenuItem">
            <summary>
            Overridden to set our internal variables properly when the menu item has changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MeshAnimator">
            <summary>
            Animates a mesh
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshAnimator._mesh">
            <summary>
            The underlying mesh that this animator animates
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshAnimator.#ctor">
            <summary>
            Creates a new mesh animator
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshAnimator.FrameMove(System.DateTime)">
            <summary>
            Animates the mesh (please override this in other animators
            </summary>
            <param name="currentTime">The current animation time</param>
            <returns>True IFF the animation asked for repaint</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshAnimator.Mesh">
            <summary>
            The underlying mesh that this animator animates
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MeshSpinner">
            <summary>
            Spins a mesh about all 3 of the coordinate axes
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshSpinner._yawPerSecond">
            <summary>
            Rotation rate about the Z-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshSpinner._pitchPerSecond">
            <summary>
            Rotation rate about the X-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshSpinner._rollPerSecond">
            <summary>
            Rotation rate about the Y-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshSpinner._lastSpin">
            <summary>
            The last time we spun the mesh
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshSpinner.#ctor">
            <summary>
            Creates a new mesh spinner
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshSpinner.FrameMove(System.DateTime)">
            <summary>
            Overridden to update the rotation angles
            </summary>
            <param name="currentTime">The current animation time</param>
            <returns>True IFF the animation asked for a repaint</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.YawPerSecond">
            <summary>
            Rotation rate about the Z-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.PitchPerSecond">
            <summary>
            Rotation rate about the X-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.RollPerSecond">
            <summary>
            Rotation rate about the Y-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.YawRadiansPerSecond">
            <summary>
            Rotation rate (in radians) about the Z-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.PitchRadiansPerSecond">
            <summary>
            Rotation rate (in radians) about the X-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshSpinner.RollRadiansPerSecond">
            <summary>
            Rotation rate (in radians) about the Y-axis
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.MeshWindow">
            <summary>
            Encapsulates a true 3D mesh to be rendered
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._mesh">
            <summary>
            The Direct3D mesh for this Mesh object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._yaw">
            <summary>
            The current rotation about the Z-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._pitch">
            <summary>
            The current rotation about the X-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._roll">
            <summary>
            The current rotation about the Y-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._pointAtCamera">
            <summary>
            Tells us whether to adjust the object to face the camera
            to account for the object being moved around in 3D space
            Note: this adjustment happens BEFORE everything else,
            so that animations and such are still possible
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.MeshWindow._animations">
            <summary>
            The list of animations that this mesh contains
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshWindow.#ctor">
            <summary>
            Creates a new mesh that points to no internal Direct3D mesh
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshWindow.FrameMove(System.DateTime)">
            <summary>
            Overridden to call our mesh animations
            </summary>
            <param name="currentTime">The current animation time</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshWindow.Render3D">
            <summary>
            Overridden to render our 3-dimensional object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshWindow.AddChildCore(System.Object)">
            <summary>
            Overridden to add animations
            </summary>
            <param name="child">The child being added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.MeshWindow.BoundMesh(SnapStream.ViewScape.Widgets.SSMesh,System.Single)">
            <summary>
            This method is really huge and ugly and complicated.
            The basic idea is to try to paint the mesh so that it looks to
            reside inside the 2D bounds of this window.  The operation could probably use
            some tweaks, but for now it works rather well, considering the crap involved.
            Note: This method handles any animation and rotation adjustments, too....
            </summary>
            <param name="mesh">The mesh we are trying to draw</param>
            <param name="aspectRatio">The aspect ratio of the screen</param>
            <returns>
            The world matrix to properly translate, rotate, and scale this mesh
            to be viewed in the desired manner and place
            </returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.Mesh">
            <summary>
            The Direct3D mesh for this Mesh object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.Yaw">
            <summary>
            The current rotation about the Z-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.Pitch">
            <summary>
            The current rotation about the X-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.Roll">
            <summary>
            The current rotation about the Y-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.YawRadians">
            <summary>
            The current rotation (in radians) about the Z-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.PitchRadians">
            <summary>
            The current rotation (in radians) about the X-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.RollRadians">
            <summary>
            The current rotation (in radians) about the Y-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.MeshWindow.PointAtCamera">
            <summary>
            Tells us whether to adjust the object to face the camera
            to account for the object being moved around in 3D space
            Note: this adjustment happens BEFORE everything else,
            so that animations and such are still possible
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.OptionGroup">
            <summary>
            Sections off option menu options into groups
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionGroup._groupID">
            <summary>
            The group ID of this group
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionGroup._options">
            <summary>
            The list of options in this group
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionGroup.#ctor">
            <summary>
            Creates a new option group
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionGroup.GetItemByID(System.String)">
            <summary>
            Retrieves an option by the given item ID
            </summary>
            <param name="id">The item Id of the option to get</param>
            <returns>The option item if it was found, otherwise null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionGroup.AddOption(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Adds list items into the list of options
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionGroup.SnapStream#Serialization#IAddChild#AddChild(System.Object)">
            <summary>
            Implemented to add any list item as an option to this group
            </summary>
            <param name="child">The child object to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionGroup.SnapStream#Serialization#IAddChild#AddText(System.String)">
            <summary>
            Doesn't do anything
            </summary>
            <param name="text">Not used</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionGroup.GroupID">
            <summary>
            The group ID of this group
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionGroup.Options">
            <summary>
            The list of options in this group
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ValueChangedEventArgs">
            <summary>
            The arguments used in raising a slide-show start event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ValueChangedEventArgs.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Creates a new set of args for when a config value is changed
            </summary>
            <param name="optionIndex">The index of the option in this list</param>
            <param name="selectedConfigName">The config name for this setting</param>
            <param name="selectedName">The setting name for this setting</param>
            <param name="selectedValue">The new value</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ValueChangedEventArgs.OptionIndex">
            <summary>
            The index of the option in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ValueChangedEventArgs.SelectedConfigName">
            <summary>
            The config name of the option
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ValueChangedEventArgs.SelectedName">
            <summary>
            The setting name of the option
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ValueChangedEventArgs.SelectedValue">
            <summary>
            The new value for the option
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ValueChangedEventHandler">
            <summary>
            Template for anything to handle our value changed event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.OptionList">
            <summary>
            A list of OptionListItems
            The list behaves normally except that it ensure that the proper child item has focus
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.#ctor">
            <summary>
            Creates a new option list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.AddChildCore(System.Object)">
            <summary>
            Overridden to add an option list item as a list item instead of a window
            </summary>
            <param name="child">The child object to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.AddItem(SnapStream.ViewScape.Widgets.OptionListItem)">
            <summary>
            Adds a new option list item to this option list
            </summary>
            <param name="item">The option list item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Overridden to prevent the selected sound from being played
            </summary>
            <param name="index">The index of the item activated</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.RaiseSelectedIndexChangedEvent">
            <summary>
            Overridden to ensure that the correct option list item has focus
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.RaiseValueChangedEvent(System.Object,SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs)">
            <summary>
            Raises our value changed event when an option item raises its
            </summary>
            <param name="sender">The option list item</param>
            <param name="args">The changed event args used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.Item_SelectorValueChanged(System.Object,SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs)">
            <summary>
            Handles an option list item having a value changed
            </summary>
            <param name="sender">The option list item</param>
            <param name="args">The arguments</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.Item_Click(System.Object,System.EventArgs)">
            <summary>
            Handles a list item being clicked on
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionList.CreateObject(System.Type)">
            <summary>
            Overridden to create option list items with our default values
            </summary>
            <param name="type">The type this object needs to create</param>
            <returns>The option list item that was created or null</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionList.DefaultOptionsTextColor">
            <summary>
            The default text color for unselected items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionList.HighlightOptionsTextColor">
            <summary>
            The default text color for selected items in this list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionList.SelectedIndex">
            <summary>
            The index of the selected item in this list
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.OptionList.ItemActivated">
            <summary>
            Occurs when the selected item is activated
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.OptionList.ValueChanged">
            <summary>
            Occurs when an option's value is changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs">
            <summary>
            The arguments used in raising a slide-show start event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates a new set of value changed args
            </summary>
            <param name="selectedName">The selected option's name</param>
            <param name="selectedValue">The selected option's value</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs.SelectedName">
            <summary>
            The selected option's name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SelectorValueChangedEventArgs.SelectedValue">
            <summary>
            The selected option's value
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SelectorValueChangedEventHandler">
            <summary>
            Template for anything to handle our selector value changed event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.OptionListItem">
            <summary>
            Each item contains:
            1. Header - name that is displayed on the left half of the item
            2. ConfigName - name of the configuration string that this item represents (not displayed)
            3. Selector Object - object displayed on the right half of the item to allow users to select through multiple options
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.#ctor">
            <summary>
            Creates a new option list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.#ctor(System.String)">
            <summary>
            Creates a new option list item
            </summary>
            <param name="text">The text displayed as the label of this item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.#ctor(System.String,System.String)">
            <summary>
            Creates a new option list item
            </summary>
            <param name="text">The text displayed as the label of this item</param>
            <param name="configOptionName">The name of the config setting tied to this option item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.InitializeMembers">
            <summary>
            Common init
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.SetBoundsInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to handle sizing of the selector and label text window
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.AddSelectorItem(System.String,System.String)">
            <summary>
            Adds a new option value to the selector
            </summary>
            <param name="itemName">The value's displayed name</param>
            <param name="itemValue">The value's actual setting value</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.ClearSelectorItems">
            <summary>
            Clears the selector of its items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.SetButtonMode">
            <summary>
            Turns on button mode on the selector
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.AddChildCore(System.Object)">
            <summary>
            Overridden to add selector items to the selector
            </summary>
            <param name="child">The child object to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.RaiseSelectorValueChangedEvent">
            <summary>
            Raises our selector value changed event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.RaiseButtonClickEvent">
            <summary>
            Raises our button clicked event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.Options_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the selector value changing
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.Options_Click(System.Object,System.EventArgs)">
            <summary>
            Handles our selector being clicked on
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.SelectOption(System.String)">
            <summary>
            Attempts to select the option with the given value
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionListItem.OnValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the value being changed on the selector
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.DefaultTextColor">
            <summary>
            The text color when this item is not selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.HighlightTextColor">
            <summary>
            The text color when this item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.ConfigName">
            <summary>
            The config setting name for this option
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.Selected">
            <summary>
            Whether this item is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.Selector">
            <summary>
            The vertical list that contains the options values
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.Button">
            <summary>
            Whether this option list item is a button instead of a selector
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.ButtonText">
            <summary>
            The text to put inside the selector when we're in button mode
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.Description">
            <summary>
            The description of this option setting
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.OptionListItem.SelectorValueChanged">
            <summary>
            Occurs when the selector's selected value changes
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.OptionListItem.Click">
            <summary>
            Occurs when this item is clicked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionListItem.Setting">
            <summary>
            The setting that this option list item is tied to
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.OptionMenu">
            <summary>
            A simple option menu that is accessible everywhere
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._list">
            <summary>
            The list of visible options
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._groups">
            <summary>
            Our internal list of option groups
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._shown">
            <summary>
            Our internal list of visible option groups
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._topPad">
            <summary>
            Percent of our height to pad the top
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._bottomPad">
            <summary>
            Percent of our height to pad the bottom
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._leftPad">
            <summary>
            Percent of our width to pad the left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._rightPad">
            <summary>
            Percent of our width to pad the right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.OptionMenu._exitKeys">
            <summary>
            Key codes that exit this menu
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.#ctor">
            <summary>
            Creates a new option menu
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.ShowGroup(System.String)">
            <summary>
            Shows a group by id
            </summary>
            <param name="id">The group ID of the group to show</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.HideGroup(System.String)">
            <summary>
            Hides a group by id
            </summary>
            <param name="id">The group ID of the group to hide</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.GetItemByID(System.String,System.String)">
            <summary>
            Retrieves an option by the group and item IDs
            </summary>
            <param name="groupId">The group ID of the item</param>
            <param name="itemId">The item ID of the item</param>
            <returns>The option item if it was found, otherwise, null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.ShowGroupInternal(SnapStream.ViewScape.Widgets.OptionGroup)">
            <summary>
            Shows a group by ID
            </summary>
            <param name="group">The group ID of the group to show</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.HideAllGroups">
            <summary>
            Hides all groups
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to set our list's bounds to ours
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">This window's width</param>
            <param name="height">This window's height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.AddChildCore(System.Object)">
            <summary>
            Overridden to add list items and items instead of children
            </summary>
            <param name="child">The object to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our exit keys
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.OptionMenu.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle the back msg
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.TopPad">
            <summary>
            Percent of our height to pad the top
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.BottomPad">
            <summary>
            Percent of our height to pad the bottom
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.LeftPad">
            <summary>
            Percent of our width to pad the left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.RightPad">
            <summary>
            Percent of our width to pad the right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.List">
            <summary>
            The list of visible options
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.VisibleItems">
            <summary>
            The number of visible items in our list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.ItemSpacing">
            <summary>
            The list grid padding
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.OptionMenu.ExitKeys">
            <summary>
            Key codes that exit this menu
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PageInfo">
            <summary>
            Holds information for a wizard page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.Src">
            <summary>
            The relative path to the xml file for the page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.Heading">
            <summary>
            The text that should be displayed in the heading area of the wizard frame
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.SubHeading">
            <summary>
            The text that should be displayed in the subheading area of the wizard frame
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.HeadingImage">
            <summary>
            The image that should be used for this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.Id">
            <summary>
            The id of the page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.NextPage">
            <summary>
            The id of the page that follows this one.  If left empty the next page after this one
            will be used.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.EnabledButtons">
            <summary>
            Determines which buttons should be displayed for the page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.InputContext">
            <summary>
            Gives each page a chance to have its own input context in InputBindings
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.CanAutoNav">
            <summary>
            Determines if this page can be navigated to when a navigation fails on another page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo._page">
            <summary>
            The actual page object.  This will usually derive from WizardPage, but any Window based object can
            be used here.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfo.PrevPage">
            <summary>
            An internal variable the page navigator uses to keep track of the path that was taken to get to this page
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfo.LoadPage(System.String)">
            <summary>
            Ensures that the page described by this PageInfo object is loaded
            </summary>
            <param name="baseUri">The baseUri from which to load this page</param>
            <returns>The page or null if it could not be loaded</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfo.IsLoaded">
            <summary>
            Gets a value indicating whether or not this page has been loaded
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfo.Page">
            <summary>
            Gets the actual page object
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PageInfoCollection">
            <summary>
            A collection class for PageInfo objects
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PageInfoCollection._list">
            <summary>
            The ArrayList that actually holds our PageInfo objects
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.#ctor">
            <summary>
            Creates a new, empty PageInfoCollection object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of this list to an array
            </summary>
            <param name="array">The array to copy to</param>
            <param name="index">The index to start at</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.Add(SnapStream.ViewScape.Widgets.PageInfo)">
            <summary>
            Adds a new PageInfo object to the collection
            </summary>
            <param name="value">The PageInfo object to add</param>
            <returns>The index of the PageInfo object added</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.GetEnumerator">
            <summary>
            Returns an enumerator for iterating over the items in the list
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a PageInfo object form the list given its index
            </summary>
            <param name="index">The index to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.Remove(SnapStream.ViewScape.Widgets.PageInfo)">
            <summary>
            Removes a PageInfo object form the list
            </summary>
            <param name="value">The PageInfo object to remove</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.Contains(SnapStream.ViewScape.Widgets.PageInfo)">
            <summary>
            Determines if the collection contains the specified PageInfo object
            </summary>
            <param name="value">The object to search for</param>
            <returns>True if the object is found, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.IndexOf(SnapStream.ViewScape.Widgets.PageInfo)">
            <summary>
            Returns the index of the specified PageInfo object
            </summary>
            <param name="pi">The object to search for</param>
            <returns>The index of the object if it is found, else -1</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.SnapStream#Serialization#IAddChild#AddChild(System.Object)">
            <summary>
            Supports xml serializer
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PageInfoCollection.SnapStream#Serialization#IAddChild#AddText(System.String)">
            <summary>
            Supports xml serializer
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfoCollection.Count">
            <summary>
            Gets the number of PageInfo objects in this collection
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfoCollection.IsSynchronized">
            <summary>
            Determines if this list is synchronized
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfoCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfoCollection.Item(System.Int32)">
            <summary>
            Gets or sets a PageInfo object by index
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PageInfoCollection.Item(System.String)">
            <summary>
            Gets a PageInfo object by id
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CDChangeEventArgs">
            <summary>
            Event args for CD changed events
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CDChangeEventArgs._id">
            <summary>
            The drive id of the cd drive that changed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.CDChangeEventArgs.#ctor(System.Int32)">
            <summary>
            Creates a new set of args
            </summary>
            <param name="id">The drive id that changed</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.CDChangeEventArgs.ID">
            <summary>
            The drive id of the cd drive that changed
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CDChangeHandler">
            <summary>
            Template for handling a cd rom changed event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.LibraryChangeType">
            <summary>
            Specifies the type of change that has been made to the media library
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.LibraryChangeType.FilesAdded">
            <summary>
            Files were added to the library
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.LibraryChangeType.FilesRemoved">
            <summary>
            Files were removed from the library
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.LibraryChangedEventArgs">
            <summary>
            Provides data for the LibraryChanged event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.LibraryChangedEventArgs.#ctor(SnapStream.ViewScape.Widgets.LibraryChangeType,System.Collections.ArrayList)">
            <summary>
            Creates a new LibraryChangeEventArgs object
            </summary>
            <param name="changeType">The ChangeType</param>
            <param name="changes">The list of changes</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.LibraryChangedEventArgs.ChangeType">
            <summary>
            Gets the type of change that has been made to the library
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.LibraryChangedEventArgs.Changes">
            <summary>
            Gets the list of changes that have been made to the library
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.LibraryChangedHandler">
            <summary>
            Represents the method that will handle the LibraryChange event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SingletonWMPlayer">
            <summary>
            A single instance of the player panel for us to operate on globally
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel">
            <summary>
            A simple windows forms panel that contains the windows media player.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MIN_POSITION">
            <summary>
            The minimum position value in a media file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._SEEK_ONE">
            <summary>
            The slowest seeking rate (2 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._SEEK_TWO">
            <summary>
            The medium seeking rate (20 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._SEEK_THREE">
            <summary>
            The fastest seeking rate (60 seconds)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_NAME_ID">
            <summary>
            The wmp id for a media's name
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_TYPE_ID">
            <summary>
            The wmp id for a media's type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_TYPE_AUDIO">
            <summary>
            The wmp value for an audio media type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_TYPE_VIDEO">
            <summary>
            The wmp value for a video media type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_AUTHOR_ID">
            <summary>
            The wmp id for the media's author
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MEDIA_ALBUM_ID">
            <summary>
            The wmp id for the media's album
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._UNKNOWN">
            <summary>
            Unknown media string
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._UNKNOWN_ALBUM">
            <summary>
            Unknown album string
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._UNKNOWN_ARTIST">
            <summary>
            Unknown artist string
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._PLAYLIST_TYPE_AUTO">
            <summary>
            Value for auto generated playlists
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._PLAYLIST_MEDIATYPE">
            <summary>
            Playlist media type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._PLAYLIST_TYPE">
            <summary>
            Key name for the playlist type attribute
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._TRACK_NUMBER">
            <summary>
            The track number attribute name for WMP
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._MAX_TRACK_SEARCH">
            <summary>
            The max amount of items in a playlist to auto-generate the track number for an item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._PLAYLIST_EXTENSION">
            <summary>
            The filename extension for playlist files
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._BM_PLAYLIST_NAME">
            <summary>
            The playlist name for the Beyond Media playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._BM_TEMP_PL_NAME">
            <summary>
            The playlist name for a temp playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._WMP_MEDIA_RIGHTS">
            <summary>
            The WMP media rights that we need to run properly
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel.CD_URL_START">
            <summary>
            The starting text for a cd-rom url in wmp
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._WMPlayer">
            <summary>
            Our direct interface into the wonderful world of the windows media player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._skipFDuration">
            <summary>
            The duration of a skip forward (should be moved to settings, eventually)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._skipBDuration">
            <summary>
            The duration of a skip backward (should be moved to settings, eventually)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._lastSeekPosition">
            <summary>
            The last position that we tried to seek to
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._lastSeekTime">
            <summary>
            The time stamp of the last time we performed any seeking
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._seekRate">
            <summary>
            The current playback/seeking rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._musicExtensions">
            <summary>
            Our list of file extensions for audio files
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._active">
            <summary>
            Tells us whether the player is active (used externally for handling situations where the
            player shouldn't be functional)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel._seekPulse">
            <summary>
            The number of seconds between jumps while emulating seeking
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.#ctor">
            <summary>
            Creates our glorious player panel
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.AttachPlayer(SnapStream.Windows.Forms.NotSelectableMediaPlayer@)">
            <summary>
            Attaches the player to this panel
            </summary>
            <param name="player">The player to attach</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.DetachPlayer(SnapStream.Windows.Forms.NotSelectableMediaPlayer@)">
            <summary>
            Detaches the player from this panel
            </summary>
            <param name="player">The player to detach</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.IsPlaylist(System.String)">
            <summary>
            Tells the consumer whether this item is a playlist
            </summary>
            <param name="name">The full path name to the supposed playlist file</param>
            <returns>True IFF the item is a playlist</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Dispose">
            <summary>
            Overridden to dispose of the media player object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SetProperty(System.String,System.Type,System.Object)">
            <summary>
            Invokes a set property
            </summary>
            <param name="name">The property to set</param>
            <param name="returnType">The type of the property</param>
            <param name="val">The value to set</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetProperty(System.String,System.Type)">
            <summary>
            Invokes a get property
            </summary>
            <param name="name">The property to get</param>
            <param name="returnType">The type of the property</param>
            <returns>The value of the property</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsPlaying">
            <summary>
            Tells the consumer whether we are playing something
            </summary>
            <returns>
            true IFF we are in a playing state
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsPaused">
            <summary>
            Tells the consumer if we are in a paused state
            </summary>
            <returns>
            true IFF our play state is paused
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsStopped">
            <summary>
            Tells the consumer if we are in a stopped state
            </summary>
            <returns>
            true IFF our play state is stopped or ready
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsSeeking">
            <summary>
            Tells the consumer whether we are seeking something
            </summary>
            <returns>
            true IFF we are in a seeking state
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsPlayingAudio">
            <summary>
            Tells the consumer if we are playing music
            </summary>
            <returns>
            true IFF we are playing AND the current media is an audio file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsSeekingAudio">
            <summary>
            Tells the consumer if we are seeking music
            </summary>
            <returns>
            true IFF we are seeking music
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsPausedAudio">
            <summary>
            Tells the consumer if we are paused on a music track
            </summary>
            <returns>
            true IFF we are paused on a music track
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsAudio">
            <summary>
            Tells the consumer if our current media is an audio file
            </summary>
            <returns>
            true IFF the current media is an audio file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsVideo">
            <summary>
            Tells the consumer if the current media is a video file
            </summary>
            <returns>
            true IFF the current media is a video file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Play">
            <summary>
            Plays the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Pause">
            <summary>
            Pauses the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Stop">
            <summary>
            Stops the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SkipBack">
            <summary>
            Skips backward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SkipForward">
            <summary>
            Skips forward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PrevTrack">
            <summary>
            Selects the previous track
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_NextTrack">
            <summary>
            Selects the next track
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Rewind">
            <summary>
            Toggles the current seeking rate in the reverse direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_FastForward">
            <summary>
            Toggles the current seeking rate in the forward direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SetMode(System.String,System.Boolean)">
            <summary>
            Invokes the SetMode() method on the wmp object
            </summary>
            <param name="mode"></param>
            <param name="state"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_EmulateSeeking(System.DateTime)">
            <summary>
            Emulates all seeking (should be called from frame move or very often)
            </summary>
            <param name="currentTime">
            Time stamp of the current animation time
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PlayFiles(System.Collections.ArrayList,System.String,System.Double)">
            <summary>
            Plays a list of files as a playlist
            </summary>
            <param name="files">The full path names of the files to play</param>
            <param name="startingFile">The full path name of the starting file (may be null)</param>
            <param name="position">Position to start at in the starting file</param>
            <returns>True if successful, flase otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_AddFilesToCurrentPlaylist(System.Collections.ArrayList)">
            <summary>
            Adds the list of files to the current playlist
            </summary>
            <param name="files">The full path names of the files to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PlayPlaylistByMedia(Microsoft.MediaPlayer.Interop.IWMPPlaylist,Microsoft.MediaPlayer.Interop.IWMPMedia,System.Double)">
            <summary>
            Plays a playlist and starts playback at the given media and given position
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingMedia">Media to start from</param>
            <param name="position">Position to start at in the starting media</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PlayPlaylistByIndex(Microsoft.MediaPlayer.Interop.IWMPPlaylist,System.Int32,System.Double)">
            <summary>
            Plays a playlist and starts playback at the given index and given position
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingIndex">Start playing the playlist at this index</param>
            <param name="position">Position to start at in the starting index</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_AddPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Add the items in the given playlist to the current playlist
            </summary>
            <param name="playlist">Playlist of items to add</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PlayCurrentURL(System.String)">
            <summary>
            Plays a url if it exists in the current playlist
            </summary>
            <param name="url">The source URL of the item to play</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PlayCurrentIndex(System.Int32)">
            <summary>
            Plays the item at the given index of the current playlist
            </summary>
            <param name="index">The index of the item to play</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_ClearCurrentPlaylist">
            <summary>
            Clears the current playlist
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_ClearCurrentIndex(System.Int32)">
            <summary>
            Clears the item at the given index in the current playlist
            </summary>
            <param name="index">Index of the item to clear</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_ClearCurrentURL(System.String)">
            <summary>
            Clears the item with the given source URL in the current playlist
            </summary>
            <param name="sourceURL">sourceURL of the item to be cleared</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SaveCurrentPlaylist(System.String)">
            <summary>
            Saves the current playlist with the given name
            </summary>
            <param name="playlistName">Name to use when saving the playlist</param>
            <returns>True if it was saved, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetCurrentPlaylistState(SnapStream.ViewScape.Widgets.PlayerPanel.PlaylistState@)">
            <summary>
            Retrieves the current playlist, media, and position in a PlaylistState
            helper object
            (Note: properly initializes values in failure case)
            </summary>
            <param name="curState">
            Receives the value of the current playlist state
            </param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetCurrentPlaylistState(Microsoft.MediaPlayer.Interop.IWMPPlaylist@,Microsoft.MediaPlayer.Interop.IWMPMedia@,System.Double@)">
            <summary>
            Retrieves the current playlist, media, and position
            (Note: properly initializes values in failure case)
            </summary>
            <param name="curPlaylist">
            Receives the value of the current playlist
            </param>
            <param name="curMedia">
            Receives the value of the current media
            </param>
            <param name="curPosition">
            Receives the current playback position (double/seconds) of the current media item
            </param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_LoadPlaylistForCD(System.String)">
            <summary>
            Loads the playlist for the given cd drive as the current playlist
            </summary>
            <param name="drive">The drive letter (with colon) in the WMP-supported format</param>
            <returns>True IFF the playlist was loaded</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_LoadPlaylistForCDIndex(System.Int32,System.Int32,System.Int64)">
            <summary>
            Loads the playlist for the given cd drive index (in the internal WMP cd collection) as the current playlist
            </summary>
            <param name="drive">The index (in the internal WMP cd collection) of the drive</param>
            <param name="track">1-based track number of the track to play</param>
            <param name="position">time-stamp position in the given track to start playing at</param>
            <returns>True IFF the playlist was loaded successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_ToggleQueuingItem(System.String)">
            <summary>
            Toggles whether this item is queued in the current playlist or not
            </summary>
            <param name="url">The item to be added or removed</param>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_AddFilesToLibrary(System.Collections.ArrayList)">
            <summary>
            Adds the specified files to the wmp media collection
            </summary>
            <param name="filePaths">
            Paths of the files to add to the library
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_AddFileToLibrary(System.String)">
            <summary>
            Adds the specified file to the wmp media collection
            </summary>
            <param name="path">
            Path of the file to add to the library
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_RemoveFilesFromLibrary(System.Collections.ArrayList)">
            <summary>
            Removes the specified files from the wmp media collection.
            </summary>
            <param name="filePaths">Paths of the files to remove from the library.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_RemoveFileFromLibrary(System.String)">
            <summary>
            Removes the specified file from the wmp media collection.
            </summary>
            <param name="path">Path of the file to remove from the library.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetAlbumPlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given album id
            </summary>
            <param name="id">
            ID of the album
            </param>
            <returns>
            A playlist of the audio items on the specified album
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetArtistPlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given artist name
            </summary>
            <param name="sItem">
            Name of the artist
            </param>
            <returns>
            A playlist of the audio items authored by the specified artist
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetGenrePlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given genre
            </summary>
            <param name="sItem">
            Name of the genre
            </param>
            <returns>
            A playlist of the audio items with the specified genre
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetPlaylistPlaylist(System.String)">
            <summary>
            Retrieves the playlist with the specified name
            </summary>
            <param name="playlistName">
            Name of the playlist
            </param>
            <returns>
            The playlist with the given name
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetAlbumIDs">
            <summary>
            Gets all the album IDs in the wmp database
            </summary>
            <returns>
            A list of all the album IDs in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetArtists">
            <summary>
            Gets all the artist names in the wmp database
            </summary>
            <returns>
            A list of all the artist names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetGenres">
            <summary>
            Gets all the genre names in the wmp database
            </summary>
            <returns>
            A list of all the genre names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetPlaylists(System.Boolean)">
            <summary>
            Gets all the playlist names in the wmp database
            </summary>
            <param name="showAutoGenPlaylists">
            True to show all playlists
            False to filter out WMP auto-generated playlists
            </param>
            <returns>
            A list of all the playlist names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetAlbumNameFromID(System.String)">
            <summary>
            Gets the name of the album with the given id
            </summary>
            <param name="id">The ID</param>
            <returns>The name</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetCDs">
            <summary>
            Retrieves the cds inserted in the system
            </summary>
            <returns>The cds (drive letter + colon)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetPlaylistForCD(System.String)">
            <summary>
            Gets the playlist for the given cd
            </summary>
            <param name="cdDrive">The drive that contains the cd</param>
            <returns>The playlist for the cd</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_GetDisplayNameForCD(System.String)">
            <summary>
            Gets a display-friendly name for the given cd
            </summary>
            <param name="cdDrive">The drive that contains the cd</param>
            <returns>The display-friendly name (null if the album info isn't downloaded, yet)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsCDStillThere(System.Int32)">
            <summary>
            Tells us whether the given cd is still in the drive
            </summary>
            <param name="index">The WMP internal index of the cd</param>
            <returns>True IFF the cd is still in the drive</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.EnsureCurrentPlaylistIsBMPlaylist">
            <summary>
            Ensures that the current playlist is the BM playlist
            If it isn't, all files are copied to the current playlist
            </summary>
            <returns>The bm playlist that is the current playlist, null on failure</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.CopyPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Copies the items in the from playlist to the toPlaylist
            (clears the toPlaylist)
            </summary>
            <param name="fromPlaylist">Playlist to read from</param>
            <param name="toPlaylist">Playlist to copy to</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.AppendPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Appends the items in the fromPlaylist to the end of the toPlaylist
            </summary>
            <param name="fromPlaylist">Playlist to read from</param>
            <param name="toPlaylist">Playlist to append to</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.CreateOrGetPlaylistByName(System.String)">
            <summary>
            Just as the name say...tries to get the playlist with the given name
            and if none is found, it creates one
            </summary>
            <param name="name">The name of the playlist to find/create</param>
            <returns>The playlist that was found/created with the given name</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.GetPlaylistByName(System.String)">
            <summary>
            Tries to get the playlist with the given name
            </summary>
            <param name="name">The name of the playlist to find/create</param>
            <returns>The playlist that was found with the given name, null if it was not found</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.FillHelper(System.String)">
            <summary>
            Retrieves an array list of all the values for the given attribute of an audio file
            </summary>
            <param name="attributeName">
            Name of the attribute to find the values for
            </param>
            <returns>
            All of the possible values for the given attribute
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RemoveNonAudioItems(Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Removes non-audio items from the playlist
            </summary>
            <param name="playlist">
            Playlist to remove the non-audio stuff from
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.PrintMediaInfo(Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Debug method that prints the media info for a media item
            </summary>
            <param name="media">The media item to print the info of</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.IsValidItem(Microsoft.MediaPlayer.Interop.IWMPMedia@)">
            <summary>
            Checks to see if a media item is valid (ie. if it's a file, does it exist)
            </summary>
            <param name="media">The media item to check</param>
            <returns>True IFF the item is valid</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.HasValidItems(Microsoft.MediaPlayer.Interop.IWMPPlaylist@)">
            <summary>
            Checks to see whether the playlist contains ANY valid items
            </summary>
            <param name="playlist">The playlist to check</param>
            <returns>True IFF the was at least one item in the playlist that was valid</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.PruneInvalidItems(Microsoft.MediaPlayer.Interop.IWMPPlaylist@)">
            <summary>
            Removes invalid items from the playlist
            </summary>
            <param name="playlist">The playlist to prune</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.EnsureFullAccessRights">
            <summary>
            Ensures that we have full access rights to the media library
            </summary>
            <returns>Returns the level of success of setting the access rights</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Resets all the bounds on our children
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
            <param name="specified">
            Not supported: Which bounds were specified
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.OnVolumeChanged(System.Object,SnapStream.ViewScape.Services.VolumeEventArgs)">
            <summary>
            Handles volume change events from the sound cache
            </summary>
            <param name="sender">
            The sound cache, i hope
            </param>
            <param name="vea">
            Contains the volume and mute values
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.OnCurrentItemChange(System.Object,AxMicrosoft.MediaPlayer.Interop._WMPOCXEvents_CurrentItemChangeEvent)">
            <summary>
            Handles the current media change from the wmp
            </summary>
            <param name="sender">
            The wmp, i hope!
            </param>
            <param name="e">
            Unused
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.OnCurrentPlaylistChange(System.Object,AxMicrosoft.MediaPlayer.Interop._WMPOCXEvents_CurrentPlaylistChangeEvent)">
            <summary>
            Handles the current playlist change from the wmp
            </summary>
            <param name="sender">The wmp, i hope!</param>
            <param name="e">Unused</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.OnPlayStateChange(System.Object,AxMicrosoft.MediaPlayer.Interop._WMPOCXEvents_PlayStateChangeEvent)">
            <summary>
            Handles the wmp playstate changed event
            </summary>
            <param name="sender">
            The wmp, i hope!
            </param>
            <param name="e">
            Unused
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.OnCdromMediaChange(System.Object,AxMicrosoft.MediaPlayer.Interop._WMPOCXEvents_CdromMediaChangeEvent)">
            <summary>
            Handles the wmp cdrom change event
            </summary>
            <param name="sender">The wmp</param>
            <param name="e">Contains the cdrom index</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaiseNewMediaEvent">
            <summary>
            Raises our new media event!
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaiseNewPlaylistEvent">
            <summary>
            Raises our new playlist event!
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaisePlayStateChangeEvent">
            <summary>
            Raises our playstate changed event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaiseProgressEvent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Raises our progress event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaiseCDChangeEvent(System.Int32)">
            <summary>
            Raises our cd change event
            </summary>
            <param name="id">The wmp internal id of the drive</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerPanel.RaiseLibraryChangedEvent(SnapStream.ViewScape.Widgets.LibraryChangeType,System.Collections.ArrayList)">
            <summary>
            Raises our LibraryChanged event
            </summary>
            <param name="changeType">The type of change</param>
            <param name="changes">The list of changes</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.PlayerControl">
            <summary>
            The underlying player control to be added in displays
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_MusicExtensions">
            <summary>
            Contains the file extensions of the files that we will add as music files
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.BlockRender">
            <summary>
            Tells the us whether to block wmp rendering or not
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Active">
            <summary>
            Tells us whether the player is active (used externally for handling situations where the
            player shouldn't be functional)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Shuffle">
            <summary>
            Gets/Sets whether shuffle play is enabled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Media">
            <summary>
            Provides a way for consumers to retrieve the current media name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_MediaURL">
            <summary>
            Provides a way for consumers to retrieve the current media URL
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_CurrentMedia">
            <summary>
            Provides a way for consumers to retrieve the current media item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Time">
            <summary>
            The current position string of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Rate">
            <summary>
            Our current playback/seeking rate
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Title">
            <summary>
            The title of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Artist">
            <summary>
            The author of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Position">
            <summary>
            The current position in timestamp ticks
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Duration">
            <summary>
            The duration of the current media item in timestamp ticks
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_PositionString">
            <summary>
            The current position string of our location in the media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_DurationString">
            <summary>
            The duration of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Track">
            <summary>
            The current track of a playlist (1-based)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_Playlist">
            <summary>
            The current playlist
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_SeekPulse">
            <summary>
            The number of seconds between jumps while emulating seeking
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayerPanel.Invoked_IsQueuingSongs">
            <summary>
            Tells the consumer whether we have a playlist that we're queuing songs to
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.Progress">
            <summary>
            Our event to signal the progress when performing lenghty tasks
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.LibraryChanged">
            <summary>
            Occurs when the library has been changed either by adding or removing items
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.NewMedia">
            <summary>
            Our event to signal that new media was loaded
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.NewPlaylist">
            <summary>
            Our event to signal that a new playlist was loaded
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.PlayStateChange">
            <summary>
            Our event to signal that our playstate has changed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerPanel.CDChange">
            <summary>
            Our event to signal that a cd has changed (inserted/removed probably)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.PlaylistState">
            <summary>
            Internal class used to return arguments correctly
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel.PlaylistState.CurPlaylist">
            <summary>
            The current playlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel.PlaylistState.CurMedia">
            <summary>
            The current media item
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerPanel.PlaylistState.CurPosition">
            <summary>
            The current position in the current media item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.SetPropertyHandler">
            <summary>
            Used to set a property
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetPropertyHandler">
            <summary>
            Used to get a property
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.CheckFlagHandler">
            <summary>
            Used to check a flag
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.SetModeHandler">
            <summary>
            Used to set a wmp mode
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.EmulateSeekingHandler">
            <summary>
            Used to emulate seeking
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.PlayFilesHandler">
            <summary>
            Used to play a list of files
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.AddFilesHandler">
            <summary>
            Used to add a list of files to the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.AddFileHandler">
            <summary>
            Used to add a file to the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.PlayPlaylistByMediaHandler">
            <summary>
            Used to play a playlist starting at a specific media item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.PlayPlaylistByIndexHandler">
            <summary>
            Used to play a playlist starting at a specified index
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.AddPlaylistHandler">
            <summary>
            Used to add a playlist to the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.CurrentURLHandler">
            <summary>
            Used to play a url in the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.PlayCurrentIndexHandler">
            <summary>
            Used to play an index in the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.ClearPlaylistHandler">
            <summary>
            Used to clear the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.ClearCurrentIndexHandler">
            <summary>
            Used to clear the current index from the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.SaveCurrentPlaylistHandler">
            <summary>
            Used to save the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetCurrentPlaylistStateHandler">
            <summary>
            Used to get the current playlist state
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.LoadPlaylistForCDHandler">
            <summary>
            Used to load the playlist for a cd drive letter
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.LoadPlaylistForCDIndexHandler">
            <summary>
            Used to load the playlist for a cd drive index
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.ToggleQueuingHandler">
            <summary>
            Used to toggle queuing songs to the current playlist
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetPlaylistHandler">
            <summary>
            Used to get a playlist by name
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetListHandler">
            <summary>
            Used to get a list
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetAllPlaylistsHandler">
            <summary>
            Used to get all playlists
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetAlbumNameHandler">
            <summary>
            Used to get the album anem of an item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.GetDisplayNameHandler">
            <summary>
            Used to get the display name of an item
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerPanel.IsCDStillThereHandler">
            <summary>
            Used to check if the cd is still in the drive
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Instance">
            <summary>
            Our global WMP singleton
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsPlaying">
            <summary>
            Tells the consumer whether we are playing something
            </summary>
            <returns>
            true IFF we are in a playing state
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsPaused">
            <summary>
            Tells the consumer if we are in a paused state
            </summary>
            <returns>
            true IFF our play state is paused
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsStopped">
            <summary>
            Tells the consumer if we are in a stopped state
            </summary>
            <returns>
            true IFF our play state is stopped or ready
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsSeeking">
            <summary>
            Tells the consumer whether we are seeking something
            </summary>
            <returns>
            true IFF we are in a seeking state
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsPlayingAudio">
            <summary>
            Tells the consumer if we are playing music
            </summary>
            <returns>
            true IFF we are playing AND the current media is an audio file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsSeekingAudio">
            <summary>
            Tells the consumer if we are seeking music
            </summary>
            <returns>
            true IFF we are seeking music
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsPausedAudio">
            <summary>
            Tells the consumer if we are paused on a music track
            </summary>
            <returns>
            true IFF we are paused on a music track
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsAudio">
            <summary>
            Tells the consumer if our current media is an audio file
            </summary>
            <returns>
            true IFF the current media is an audio file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsVideo">
            <summary>
            Tells the consumer if the current media is a video file
            </summary>
            <returns>
            true IFF the current media is a video file
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Play">
            <summary>
            Plays the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Pause">
            <summary>
            Pauses the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Stop">
            <summary>
            Stops the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.SkipBack">
            <summary>
            Skips backward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.SkipForward">
            <summary>
            Skips forward in the current media
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PrevTrack">
            <summary>
            Selects the previous track
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.NextTrack">
            <summary>
            Selects the next track
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Rewind">
            <summary>
            Toggles the current seeking rate in the reverse direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.FastForward">
            <summary>
            Toggles the current seeking rate in the forward direction
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.SetMode(System.String,System.Boolean)">
            <summary>
            Sets the specified playback mode to on or off
            </summary>
            <param name="mode">Mode to be set</param>
            <param name="state">On or Off for the specified mode</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.EmulateSeeking(System.DateTime)">
            <summary>
            Emulates all seeking (should be called from frame move or very often)
            </summary>
            <param name="currentTime">
            Time stamp of the current animation time
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayFiles(System.Collections.ArrayList)">
            <summary>
            Plays a list of files and starts playback at beginning of the first file
            </summary>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayFiles(System.Collections.ArrayList,System.String)">
            <summary>
            Plays a list of files and starts playback at the given file
            </summary>
            <param name="files">The full path names of the files to play</param>
            <param name="startingFile">The full path name of the starting file (may be null)</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayFiles(System.Collections.ArrayList,System.String,System.Double)">
            <summary>
            Plays a list of files and starts playback at the given file and position
            </summary>
            <param name="files">The full path names of the files to play</param>
            <param name="startingFile">The full path name of the starting file (may be null)</param>
            <param name="position">Position to start at in the starting file</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.AddFilesToCurrentPlaylist(System.Collections.ArrayList)">
            <summary>
            Adds the list of files to the current playlist
            </summary>
            <param name="files">The full path names of the files to add</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Plays a playlist and starts playback at first item in the playlist
            </summary>
            <param name="playlist">Playlist to play</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,Microsoft.MediaPlayer.Interop.IWMPMedia)">
            <summary>
            Plays a playlist and starts playback at the given media
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingMedia">Media to start playback</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,Microsoft.MediaPlayer.Interop.IWMPMedia,System.Double)">
            <summary>
            Plays a playlist and starts playback at the given media and given position
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingMedia">Media to start playback</param>
            <param name="position">Position to start at in the starting media</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,System.Int32)">
            <summary>
            Plays a playlist and starts playback at the given media and given position
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingIndex">Start playing the playlist at this index</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist,System.Int32,System.Double)">
            <summary>
            Plays a playlist and starts playback at the given media and given position
            </summary>
            <param name="playlist">Playlist to play</param>
            <param name="startingIndex">Start playing the playlist at this index</param>
            <param name="position">Position to start at in the starting index</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.AddPlaylistToCurrentPlaylist(Microsoft.MediaPlayer.Interop.IWMPPlaylist)">
            <summary>
            Add the items in the given playlist to the current playlist
            </summary>
            <param name="playlist">Playlist of items to add</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayCurrentURL(System.String)">
            <summary>
            Plays a url if it exists in the current playlist
            </summary>
            <param name="url">The source URL of the item to play</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PlayCurrentIndex(System.Int32)">
            <summary>
            Plays the item at the given index of the current playlist
            </summary>
            <param name="index">The index of the item to play</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.ClearCurrentPlaylist">
            <summary>
            Clears the current playlist
            </summary>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.ClearCurrentIndex(System.Int32)">
            <summary>
            Clears the item at the given index in the current playlist
            </summary>
            <param name="index">Index of the item to clear</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.ClearCurrentURL(System.String)">
            <summary>
            Clears the item with the given source URL in the current playlist
            </summary>
            <param name="sourceURL">sourceURL of the item to be cleared</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.SaveCurrentPlaylist(System.String)">
            <summary>
            Saves the current playlist with the given name
            </summary>
            <param name="playlistName">Name to use when saving the playlist</param>
            <returns>True if it was saved, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetCurrentPlaylistState(Microsoft.MediaPlayer.Interop.IWMPPlaylist@,Microsoft.MediaPlayer.Interop.IWMPMedia@,System.Double@)">
            <summary>
            Retrieves the current playlist, media, and position
            (Note: properly initializes values in failure case)
            </summary>
            <param name="curPlaylist">
            Receives the value of the current playlist
            </param>
            <param name="curMedia">
            Receives the value of the current media
            </param>
            <param name="curPosition">
            Receives the current playback position (double/seconds) of the current media item
            </param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.LoadPlaylistForCD(System.String)">
            <summary>
            Loads the playlist for the given cd drive as the current playlist
            </summary>
            <param name="drive">The drive letter (with colon) in the WMP-supported format</param>
            <returns>True IFF the playlist was loaded</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.LoadPlaylistForCDIndex(System.Int32,System.Int32,System.Int64)">
            <summary>
            Loads the playlist for the given cd drive index (in the internal WMP cd collection) as the current playlist
            </summary>
            <param name="drive">The index (in the internal WMP cd collection) of the drive</param>
            <param name="track">1-based track number of the track to play</param>
            <param name="position">time-stamp position in the given track to start playing at</param>
            <returns>True IFF the playlist was loaded successfully</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.ToggleQueuingItem(System.String)">
            <summary>
            Toggles whether this item is queued in the current playlist or not
            </summary>
            <param name="url">The item to be added or removed</param>
            <returns>True IFF the operation was successful</returns>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SingletonWMPlayer._extensionsEncountered">
            <summary>
            Maintains a map of file extension -> perceived type.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsAudioFile(System.String)">
            <summary>
            Determines if a file is an audio file or not
            </summary>
            <param name="path">The path to the file.  This string must include at least the file extension to test</param>
            <returns>True if the file is an audio file, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsFileInLibrary(System.String)">
            <summary>
            Tests to see if a file is in the media library
            </summary>
            <param name="path">The path to the file to look for.</param>
            <returns>True if the file is in the library, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.AddFilesToLibrary(System.Collections.ArrayList)">
            <summary>
            Adds the specified files to the wmp media collection
            </summary>
            <param name="filePaths">
            Paths of the files to add to the library
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.AddFileToLibrary(System.String)">
            <summary>
            Adds the specified file to the wmp media collection
            </summary>
            <param name="path">
            Path of the file to add to the library
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.RemoveFilesFromLibrary(System.Collections.ArrayList)">
            <summary>
            Removes the specified files from the wmp media collection.
            </summary>
            <param name="filePaths">Paths of the files to remove from the library.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.RemoveFileFromLibrary(System.String)">
            <summary>
            Removes the specified file from the wmp media collection.
            </summary>
            <param name="path">Path of the file to remove from the library.</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetAlbumPlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given album id
            </summary>
            <param name="id">
            ID of the album
            </param>
            <returns>
            A playlist of the audio items on the specified album
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetArtistPlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given artist name
            </summary>
            <param name="item">
            Name of the artist
            </param>
            <returns>
            A playlist of the audio items authored by the specified artist
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetGenrePlaylist(System.String)">
            <summary>
            Retrieves the playlist for a given genre
            </summary>
            <param name="item">
            Name of the genre
            </param>
            <returns>
            A playlist of the audio items with the specified genre
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetPlaylistPlaylist(System.String)">
            <summary>
            Retrieves the playlist with the specified name
            </summary>
            <param name="item">
            Name of the playlist
            </param>
            <returns>
            The playlist with the given name
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetAlbumIDs">
            <summary>
            Gets all the album IDs in the wmp database
            </summary>
            <returns>
            A list of all the album IDs in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetArtists">
            <summary>
            Gets all the artist names in the wmp database
            </summary>
            <returns>
            A list of all the artist names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetGenres">
            <summary>
            Gets all the genre names in the wmp database
            </summary>
            <returns>
            A list of all the genre names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetPlaylists(System.Boolean)">
            <summary>
            Gets all the playlist names in the wmp database
            </summary>
            <param name="showAutoGenPlaylists">
            True to show all playlists
            False to filter out WMP auto-generated playlists
            </param>
            <returns>
            A list of all the playlist names in the wmp database
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetAlbumNameFromID(System.String)">
            <summary>
            Gets the name of the album with the given id
            </summary>
            <param name="id">The ID</param>
            <returns>The name</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetCDs">
            <summary>
            Retrieves the cds inserted in the system
            </summary>
            <returns>The cds (drive letter + colon)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetPlaylistForCD(System.String)">
            <summary>
            Gets the playlist for the given cd
            </summary>
            <param name="drive">The drive that contains the cd</param>
            <returns>The playlist for the cd</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.GetDisplayNameForCD(System.String)">
            <summary>
            Gets a display-friendly name for the given cd
            </summary>
            <param name="drive">The drive that contains the cd</param>
            <returns>The display-friendly name (null if the album info isn't downloaded, yet)</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsCDStillThere(System.Int32)">
            <summary>
            Tells us whether the given cd is still in the drive
            </summary>
            <param name="index">The WMP internal index of the cd</param>
            <returns>True IFF the cd is still in the drive</returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.MusicExtensions">
            <summary>
            Contains the file extensions of the files that we will add as music files
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Active">
            <summary>
            Tells us whether the player is active (used externally for handling situations where the
            player shouldn't be functional)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Shuffle">
            <summary>
            Gets/Sets whether shuffle play is enabled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Media">
            <summary>
            Provides a way for consumers to retrieve the current media name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.MediaURL">
            <summary>
            Provides a way for consumers to retrieve the current media url
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.CurrentMedia">
            <summary>
            Provides a way for consumers to retrieve the current media item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Time">
            <summary>
            The current position string of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Rate">
            <summary>
            Our current playback/seeking rate
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Title">
            <summary>
            The title of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Artist">
            <summary>
            The author of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Position">
            <summary>
            The current position in timestamp ticks
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Duration">
            <summary>
            The duration of the current media item in timestamp ticks
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.PositionString">
            <summary>
            The current position string of our location in the media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.DurationString">
            <summary>
            The duration of the current media
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Track">
            <summary>
            The current track of the item (1-based)
            Note: this is NOT necessarily going to be the index in the playlist - 1
            it could be the track on the CD it was ripped from
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.Playlist">
            <summary>
            The current playlist
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.SeekPulse">
            <summary>
            The number of seconds between jumps while emulating seeking
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SingletonWMPlayer.IsQueuingSongs">
            <summary>
            Tells the consumer whether we have a playlist that we're queuing songs to
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerVisuals">
            <summary>
            Displays music visualizations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerVisuals._lastMouseDown">
            <summary>
            The time stamp that the last tracked mouse down happened
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.#ctor">
            <summary>
            Creates a new visualization display
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to handle adding and removing the player from this toplevel control
            </summary>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize the player
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">This window's width</param>
            <param name="height">This window's height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to track the double click event to toggle fullscreen
            Note: captures the mouse
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the button and location</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to release capture
            </summary>
            <param name="sender">Not used</param>
            <param name="e">contains the button and location</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.FrameMove(System.DateTime)">
            <summary>
            Overridden to hide the screen saver
            </summary>
            <param name="currentTime">Time stamp for animation</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.HandleSizing">
            <summary>
            Resizes the player properly
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayerVisuals.RaiseToggleVisualsFullScreenEvent">
            <summary>
            Raises our toggle full screen event
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.PlayerVisuals.ToggleVisualsFullScreen">
            <summary>
            Signals to our parent that we'd like to toggle fullscreen
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayRate">
            <summary>
            A simple class that extracts out the necessary computations to explain
            our current play rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._MAX_FF_RATE">
            <summary>
            The maximum fast-forward rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._MIN_FF_RATE">
            <summary>
            The minimum fast-forward rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._MAX_RW_RATE">
            <summary>
            The maximum (fastest) rewind rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._MIN_RW_RATE">
            <summary>
            The minimum (slowest) rewind rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._PLAY_RATE">
            <summary>
            The playing rate
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayRate._INTERVAL">
            <summary>
            The interval to increase and decrease play rates by
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayRate.#ctor">
            <summary>
            Creates a new play rate set at playing speed
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayRate.op_Increment(SnapStream.ViewScape.Widgets.PlayRate)">
            <summary>
            Increments the playrate
            </summary>
            <param name="pr">The old playrate</param>
            <returns>The incremented playrate</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayRate.op_Decrement(SnapStream.ViewScape.Widgets.PlayRate)">
            <summary>
            Decrements the playrate
            </summary>
            <param name="pr">The old playrate</param>
            <returns>The decremented playrate</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.PlayRate.Reset">
            <summary>
            Resets the playrate back to playing
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.PlayRate.Rate">
            <summary>
            The current playrate
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Position">
            <summary>
            A skin position object that reflects the various positions
            and sizes used in resizing
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Position.#ctor">
            <summary>
            Creates a new skin position object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Position.Clear">
            <summary>
            Clears out this skin position object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Position.AdjustRectangle(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adjusts the given rectangle based on the inputs entered in the skin layer.
            If no settings were made in the skin layer, the original rectangle is returned.
            </summary>
            <param name="originalRect">
            RectangleToAdjust in SCREEN coordinates
            </param>
            <param name="width">
            Width of the current top level window
            </param>
            <param name="height">
            Height of the current top level window
            </param>
            <param name="baseWidth">
            The base width of the skin
            </param>
            <param name="baseHeight">
            The base height of the skin
            </param>
            <returns>
            Rectangle in SCREEN coordinates that has been properly adjusted
            </returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.AbsoluteBounds">
            <summary>
            The absolute bounds of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.RelativeBounds">
            <summary>
            The relative bounds of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.X">
            <summary>
            The relative x-coordinate of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.Y">
            <summary>
            The relative y-coordinate of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.Width">
            <summary>
            The relative width of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.Height">
            <summary>
            The relative height of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.AbsX">
            <summary>
            The absolute x-coordinate of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.AbsY">
            <summary>
            The absolute y-coordinate of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.AbsWidth">
            <summary>
            The absolute width of this skin position object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Position.AbsHeight">
            <summary>
            The absolute height of this skin position object
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ProgressEventHandler">
            <summary>
            Template for handing a progress event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ProgressBar">
            <summary>
            A simple progress bar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._backgroundBar">
            <summary>
            The background of the progress bar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._foregroundBar">
            <summary>
            The portion of the progress bar that represents completion
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._percent">
            <summary>
            The percentage equal to our completion
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._min">
            <summary>
            The starting progress value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._max">
            <summary>
            The final progress value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressBar._current">
            <summary>
            The current progress value
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressBar.#ctor">
            <summary>
            Creates a new progress bar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize the child elements properly
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressBar.FrameMove(System.DateTime)">
            <summary>
            Overridden to calculate and display the current progress
            </summary>
            <param name="currentTime">The current time stamp used for animation</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.BackgroundWindow">
            <summary>
            The background of the progress bar
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.ForegroundWindow">
            <summary>
            The portion of the progress bar that represents completion
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.PercentTextObject">
            <summary>
            The text window that displays the percentage of completion
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.Maximum">
            <summary>
            The final progress value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.Minimum">
            <summary>
            The starting progress value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressBar.Value">
            <summary>
            The current progress value
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ProgressDialog">
            <summary>
            A Window that will display a message and a progress bar to the user and give the caller the 
            ability to cancel the task
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressDialog._message">
            <summary>
            The message to display to the user
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressDialog._progress">
            <summary>
            The progress bar to display the progress of the currently running task
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressDialog._cancel">
            <summary>
            The button the user can click to trigger the cancel event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ProgressDialog._cancelKeys">
            <summary>
            Key codes that cycle cancel the dialog
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressDialog.#ctor">
            <summary>
            Creates a new progress dialog box
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressDialog.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize our children
            </summary>
            <param name="x">This window's x position in its parent</param>
            <param name="y">This window's y position in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressDialog.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle cancel keys
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressDialog.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the cancel button being clicked
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ProgressDialog.RaiseCancelEvent">
            <summary>
            Raises our cancel event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressDialog.MessageBox">
            <summary>
            The message text box used to display a message to the user
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressDialog.ProgressBar">
            <summary>
            The progress bar to display the progress of the currently running task
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressDialog.CancelButton">
            <summary>
            The button the user can click to trigger the cancel event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressDialog.MessageText">
            <summary>
            Gets or sets the text to be displayed in the message box
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ProgressDialog.CancelKeys">
            <summary>
            Key codes that cycle cancel the dialog
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.ProgressDialog.Cancel">
            <summary>
            Occurs when the operation needs to be cancelled
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.RadioButton">
            <summary>
            A radio button control
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._defaultImage">
            <summary>
            The default background image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._hoverImage">
            <summary>
            The background image when the mouse is over this button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._pressedImage">
            <summary>
            The background image when the mouse button is down on this button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._disabledImage">
            <summary>
            The background image when this radio button is disabled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._checkImage">
            <summary>
            The foreground image displayed when this button is checked
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._hover">
            <summary>
            Whether the mouse is over this button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._down">
            <summary>
            Whether the mouse button is down on this button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButton._checked">
            <summary>
            Whether this radio button is checked
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.#ctor">
            <summary>
            Creates a new radio button
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the button that is down</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the button that is going up</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnMouseOver(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle any keyboard/remote control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle any keyboard/remote control of this button
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.Render">
            <summary>
            Overridden to draw the appropriate images
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButton.RaiseCheckEvent(System.EventArgs)">
            <summary>
            Raises our check event
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.CheckImage">
            <summary>
            The foreground image displayed when this button is checked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.DefaultImage">
            <summary>
            The default background image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.HoverImage">
            <summary>
            The background image when the mouse is over this button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.PressedImage">
            <summary>
            The background image when the mouse button is down on this button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.DisabledImage">
            <summary>
            The background image when this radio button is disabled
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.Checked">
            <summary>
            Whether this radio button is checked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButton.Enabled">
            <summary>
            Overridden to raise the dirty event when the enabled state is changed
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.RadioButton.Check">
            <summary>
            Occurs when this button is checked/unchecked
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.RadioButtonGroup">
            <summary>
            A grouping of radio buttons that are mutually exclusively selectable
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroup.AddItem(SnapStream.ViewScape.Widgets.RadioButtonGroupItem)">
            <summary>
            Adds a new radio button to this group
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroup.RaiseItemActivatedEvent(System.Int32)">
            <summary>
            Overridden to update our active item when it's activated
            </summary>
            <param name="index">The index of the activated item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroup.RaiseSelectedIndexChangedEvent">
            <summary>
            Overridden to update our active item when it's selected
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroup.AddChildCore(System.Object)">
            <summary>
            Overridden to add radio button group items as list items instead of windows
            </summary>
            <param name="child">The child object being added</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButtonGroup.CheckedItem">
            <summary>
            The currently checked item in this group
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButtonGroup.SelectedItem">
            <summary>
            Overridden to return the selected item with the correct type
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.RadioButtonGroupItem">
            <summary>
            Contains a radio button item that belongs to a radio button group
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.#ctor">
            <summary>
            Creates a new radio button item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.#ctor(System.String)">
            <summary>
            Creates a new radio button item with the specified text label
            </summary>
            <param name="text">The text label</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.#ctor(System.String,System.Object)">
            <summary>
            Creates a new radio button item with the specified text label and value
            </summary>
            <param name="text">The text label</param>
            <param name="value">The item's value</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.#ctor(System.String,System.Object,System.Double)">
            <summary>
            Creates a new radio button item with the specified text label, value, and padding
            </summary>
            <param name="text">The text label</param>
            <param name="value">The item's value</param>
            <param name="radioButtonPadding">The percent of the item height to pad around the button</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize the text and radio button properly
            </summary>
            <param name="x">This window's x position</param>
            <param name="y">This window's y position</param>
            <param name="width">This window's width</param>
            <param name="height">This window's height</param>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.Check">
            <summary>
            Occurs when this radio button is checked
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.RadioButton">
            <summary>
            The radio button contained in this item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.RadioButtonPadding">
            <summary>
            The percent of the item height to pad around the button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.RadioButtonGroupItem.Checked">
            <summary>
            Whether this radio button is checked
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ShowScreen">
            <summary>
            An action that shows an object that inherits from ScreenBase
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ShowScreen._screen">
            <summary>
            The ID of the screen to be shown in this action
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ShowScreen._screenArgs">
            <summary>
            The screen arguments to send before showing this screen
            Note: can be null
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowScreen.#ctor">
            <summary>
            Creates a default show screen action with nothing set
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowScreen.#ctor(System.String)">
            <summary>
            Creates a default show screen action with nothing set
            </summary>
            <param name="screenID">ID of the screen to show</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowScreen.#ctor(System.String,System.Object)">
            <summary>
            Creates a default show screen action with nothing set
            </summary>
            <param name="screenID">ID of the screen to show</param>
            <param name="args">Arguments for the screen</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowScreen.Execute">
            <summary>
            Executes this action
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowScreen.Screen">
            <summary>
            The ID of the screen to be shown in this action
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowScreen.ScreenArgs">
            <summary>
            The screen arguments to send before showing this screen
            Note: can be null
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowScreen.State">
            <summary>
            Returns the action state of this action (unavailable IFF the screen
            ID is null or empty)
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ShowDefaultScreen">
            <summary>
            An action that shows a default screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ShowDefaultScreen._defaultScreen">
            <summary>
            The type of the screen to be shown in this action
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ShowDefaultScreen._screenArgs">
            <summary>
            The screen arguments to send before showing this screen
            Note: can be null
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowDefaultScreen.#ctor">
            <summary>
            Creates a ShowDefaultScreen action with nothing set
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowDefaultScreen.#ctor(SnapStream.ViewScape.Widgets.ScreenDefaultType)">
            <summary>
            Creates a ShowDefaultScreen action that will show the specified default screen
            </summary>
            <param name="type">ID of the default screen type to show</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowDefaultScreen.#ctor(SnapStream.ViewScape.Widgets.ScreenDefaultType,System.Object)">
            <summary>
            Creates a default show screen action with nothing set
            </summary>
            <param name="type">ID of the default screen type to show</param>
            <param name="args">Arguments for the screen</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ShowDefaultScreen.Execute">
            <summary>
            Executes this action
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowDefaultScreen.DefaultScreen">
            <summary>
            The ID of the screen to be shown in this action
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowDefaultScreen.ScreenArgs">
            <summary>
            The screen arguments to send before showing this screen
            Note: can be null
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ShowDefaultScreen.State">
            <summary>
            Returns the action state of this action (unavailable IFF the DefaultScreen
            property is ScreenDefaultType.None
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScreenBase">
            <summary>
            Implements the Screen properties and functions on top of an animation window.
            This class is designed for Screens to inherit from it to get the basic
            screen functionality.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._skinFilePath">
            <summary>
            Path to determine where to locate the skin file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._loaded">
            <summary>
            Whether or not the screen has been loaded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._defaultType">
            <summary>
            Set if this screen is to be a default screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._screenArgs">
            <summary>
            Any arguments that can be passed before showing this screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._navigatingForward">
            <summary>
            Set by the stack manager to indicate to the screen whether it was
            made visible by a push onto the stock or a pop of a screen under it
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._screenBaseWidth">
            <summary>
            Overrides the application base skin width for this screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenBase._screenBaseHeight">
            <summary>
            Overrides the application base skin height for this screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.#ctor">
            <summary>
            Creates a new screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.Load">
            <summary>
            Initializes this screen and loads the skin.  Screens should override this method to do any
            one time initialization.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.InitializeSkin">
            <summary>
            Reads the xml skin file and attempts to skin the object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.GetBaseDimensions(System.Int32@,System.Int32@)">
            <summary>
            Overridden to return the base values stored in this screen
            </summary>
            <param name="baseWidth">The base width of the screen</param>
            <param name="baseHeight">The base height of the screen</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.Activate">
            <summary>
            Called when the screen is activated, i.e. when it is navigated to
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.Deactivate">
            <summary>
            Called when the screen is left
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenBase.RaiseExitEvent">
            <summary>
            Raises the exit event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.NavigatingForward">
            <summary>
            Set by the stack manager to indicate to the screen whether it was
            made visible by a push onto the stock or a pop of a screen under it
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.ScreenArgs">
            <summary>
            Any arguments that can be passed before showing this screen
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.SkinFilePath">
            <summary>
            Path to determine where to locate the skin file
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.IsLoaded">
            <summary>
            Determines whether or not this screen has been loaded.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.ScreenDefault">
            <summary>
            Set if this screen is to be a default screen
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.ScreenBaseWidth">
            <summary>
            Overrides the application base skin width for this screen
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenBase.ScreenBaseHeight">
            <summary>
            Overrides the application base skin height for this screen
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.ScreenBase.Exit">
            <summary>
            Occurs when the screen detects that it should exit
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScreenDefaultType">
            <summary>
            Defines the various default screen types
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.None">
            <summary>
            No default screen type
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.MainMenu">
            <summary>
            The main menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.Music">
            <summary>
            The music screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.Photos">
            <summary>
            The photos screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.VideoPlayer">
            <summary>
            The video player screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.VideoBrowser">
            <summary>
            The video browser screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.DVD">
            <summary>
            The dvd screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.FileBrowser">
            <summary>
            The file browser screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.Settings">
            <summary>
            The settings screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenDefaultType.Spotlight">
            <summary>
            The spotlight screen
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScreenSaver">
            <summary>
            Defines a basic screen saver
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenSaver._logo">
            <summary>
            The floating logo window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenSaver._velocityX">
            <summary>
            The current x-direction velocity
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScreenSaver._velocityY">
            <summary>
            The current y-direction velocity
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenSaver.#ctor">
            <summary>
            Creates a new screen saver
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenSaver.FrameMove(System.DateTime)">
            <summary>
            Overridden to move the floating logo window
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScreenSaver.Render">
            <summary>
            Overridden to render our textures
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenSaver.BackgroundAlpha">
            <summary>
            The black background's alpha value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.ScreenSaver.Logo">
            <summary>
            The floating logo window
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScrollEventHandler">
            <summary>
            The format for scroll event handlers
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ScrollEventArgs">
            <summary>
            Contains information about a scroll event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollEventArgs.NewValue">
            <summary>
            The new value as a result of the scroll operation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ScrollEventArgs.Type">
            <summary>
            The type of the scroll operation
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.ScrollEventArgs.#ctor(System.Windows.Forms.ScrollEventType,System.Int64)">
            <summary>
            Creates a new set of args for a scroll event
            </summary>
            <param name="type">The scroll event type</param>
            <param name="val">The new value after the scroll</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Selector">
            <summary>
            A horizontal list surrounded by a left button and a right button
            Each item in the list is a Selector item which is basically a name value pair
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._leftButton">
            <summary>
            Left selector button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._rightButton">
            <summary>
            Right selector button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._horizontalList">
            <summary>
            List of items in the selector
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._wrap">
            <summary>
            Flag to say if we should wrap around when we get to the end of the item list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._mode">
            <summary>
            Flag for the SelectorMode
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._leftKeys">
            <summary>
            Key codes that move to the selector one item to the left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._rightKeys">
            <summary>
            Key codes that move the selector one item to the right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Selector._toggleKeys">
            <summary>
            Key codes that cycle through the selectable items (probably to the right)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.#ctor">
            <summary>
            Creates a new selector
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.ScrollLeft">
            <summary>
            Scrolls the list to the left
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.ScrollRight">
            <summary>
            Scrolls the list to the right
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.AddSelectorItem(SnapStream.ViewScape.Widgets.SelectorItem)">
            <summary>
            Adds a new selector item
            </summary>
            <param name="item">The new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.AddSelectorItem(System.String,System.String)">
            <summary>
            Creates and adds a new selector item
            </summary>
            <param name="name">The name of the new item</param>
            <param name="valueIn">The value of the new item</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.Clear">
            <summary>
            Clears the selector of items
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.HasValue(System.String)">
            <summary>
            Whether this selector contains an item with the specified value
            </summary>
            <param name="valueIn">The value to look for</param>
            <returns>True IFF the given value was found on an item</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.SetButtonMode">
            <summary>
            Turns this selector into a button
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.SetSelectorMode">
            <summary>
            Turns this selector into a selector list (default)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle selection navigation when focused
            </summary>
            <param name="sender">The sender of this msg</param>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize and reposition our buttons and list
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle advancing the options on a mouse click
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the mouse data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle advancing the options on a mouse click
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the mouse data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to handle advancing the options on a mouse click
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the mouse data</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.RaiseSelectedIndexChangedEvent">
            <summary>
            Raises our selected index changed event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Selector.RaiseClickEvent">
            <summary>
            Raises our click event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.Wrap">
            <summary>
            Flag to say if we should wrap around when we get to the end of the item list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.DefaultTextColor">
            <summary>
            The default text color while unselected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.HighlightTextColor">
            <summary>
            The default text color while selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.DefaultItemImage">
            <summary>
            The default background image for unselected items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.HighlightItemImage">
            <summary>
            The default background image for selected items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.DefaultItemTextHeightPercent">
            <summary>
            The default text height percent for items in our list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.DefaultItemEllipses">
            <summary>
            Sets the ellipses format for all items in the selector
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.Button">
            <summary>
            Whether this selector is a button or a true selector
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.SelectedName">
            <summary>
            The name of the selected option
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.SelectedValue">
            <summary>
            The value of the selected option
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.SelectedIndex">
            <summary>
            The currently selected index
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.SelectedItem">
            <summary>
            The currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.Count">
            <summary>
            The number of items in this selector
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.LeftButton">
            <summary>
            The scroll left button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.RightButton">
            <summary>
            The scroll right button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.LeftKeys">
            <summary>
            Key codes that move to the selector one item to the left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.RightKeys">
            <summary>
            Key codes that move the selector one item to the right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Selector.ToggleKeys">
            <summary>
            Key codes that cycle through the selectable items (probably to the right)
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Selector.Click">
            <summary>
            Occurs when this selector is clicked
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.Selector.SelectedIndexChanged">
            <summary>
            Occurs when the selected index changes
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SelectorItem">
            <summary>
            This is a list item that has a name value pair
            The name is displayed and the value is not
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectorItem.#ctor">
            <summary>
            Creates a new selector item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectorItem.#ctor(System.String,System.String)">
            <summary>
            Creates a new selector item with the given display text and value
            </summary>
            <param name="name">The selector item's text</param>
            <param name="valueIn">The selector item's value</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SelectWizardModePage">
            <summary>
            Provides a generic page class that branches depending on which option in a list is selected
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardPage">
            <summary>
            Provides a base class for all other wizard pages.  A wizard page does not have to derive from WizardPage, but
            certain services will not be available to it unless it does ( such as commit / load notification ).
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage.SettingNameProperty">
            <summary>
            The "SettingName" gives a common DependencyProperty object that can be used for linking UI elements
            to a specific setting.  This is only provided as a convenince for page authors.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage.MouseActivatedProperty">
            <summary>
            The "MouseActivated" property gives a DependencyProperty that WizardFrame will use to show / hide controls
            that are mouse activated.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.SetSettingName(SnapStream.DependencyObject,System.String)">
            <summary>
            Sets the setting name associated with an object
            </summary>
            <param name="d">The DependecnyObject to associate with a setting</param>
            <param name="settingName">The name of the setting</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.GetSettingName(SnapStream.DependencyObject)">
            <summary>
            Gets the setting name associated with a DependencyObject
            </summary>
            <param name="d">The DependencyObject that has a "SettingName" property set on it</param>
            <returns>The name of the setting associated with the DependencyObject</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.GetSetting(SnapStream.DependencyObject)">
            <summary>
            Retrieves the setting associated with a DependencyObject via a "SettingName" property
            </summary>
            <param name="d">The DependencyObject that has a "SettingName" property set on it</param>
            <returns>The setting associated with the DependencyObject</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.GetSettingValue(SnapStream.DependencyObject,System.Type)">
            <summary>
            Gets the value of a setting on a DependencyObject using the <see cref="F:SnapStream.ViewScape.Widgets.WizardPage.SettingNameProperty">SettingName</see>
            property to determine which setting to retrieve.
            </summary>
            <param name="d">The DependencyObject that has its <see cref="F:SnapStream.ViewScape.Widgets.WizardPage.SettingNameProperty">SettingName</see> dependency property set</param>
            <param name="t">The type of the setting</param>
            <returns>The value of the setting linked to the specified DependencyObject.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.SetSettingValue(SnapStream.DependencyObject,System.Object)">
            <summary>
            Sets the value of a setting on a DependencyObject using the <see cref="F:SnapStream.ViewScape.Widgets.WizardPage.SettingNameProperty">SettingName</see>
            property to determine which setting to modify.
            </summary>
            <param name="d">The DependencyObject that has its <see cref="F:SnapStream.ViewScape.Widgets.WizardPage.SettingNameProperty">SettingName</see> dependency property set</param>
            <param name="v">The value of the setting</param>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._nextPage">
            <summary>
            The page that should be navigated to after this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._heading">
            <summary>
            The heading text that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._subHeading">
            <summary>
            The sub-heading text that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._headingImage">
            <summary>
            The image that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._wizardFrame">
            <summary>
            The WizardFrame object that is hosting this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._enabledButtons">
            <summary>
            The navigation buttons that should be enabled for this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._inputContext">
            <summary>
            The input context for this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._summaryFormat">
            <summary>
            The format string that should be used by the page when it generates an action summary
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardPage._mouseActive">
            <summary>
            Determines if the mouse is active
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.ValidateData">
            <summary>
            Should be overriden if data on a page needs validation before navigating away from
            this page
            </summary>
            <returns>false if the navigation should be canceled</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.OnNext">
            <summary>
            Should be overriden if a setup page needs to take action before it is left
            </summary>
            <returns>true if the navigation should proceed, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.OnBack">
            <summary>
            Should be overriden if a setup page needs to take action before it is left
            </summary>
            <returns>true if the navigation should proceed, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.Activate">
            <summary>
            Called when the page is activated, i.e. when it is navigated to
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.Deactivate">
            <summary>
            Called when the page is left
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.Commit">
            <summary>
            Called when the page should commit its changes to a persistent store, such as SingletonConfig
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.Load">
            <summary>
            Called after the page's skin file is loaded, but before it is shown for the first time
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.SummarizeActions(System.Collections.ArrayList)">
            <summary>
            Called by the wizard engine to generate a list of all the actions the wizard will take
            upon successful completion of the wizard
            </summary>
            <param name="items">The list of summary items.  These can be either strings or TextPane formatter object</param>
            <returns>true to continue generating a summary, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard navigation.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardPage.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle the <see cref="F:SnapStream.ViewScape.Widgets.SSMsg.MouseActive">MouseActive</see> and
            <see cref="F:SnapStream.ViewScape.Widgets.SSMsg.MouseInactive">MouseInactive</see> messages.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.NextPage">
            <summary>
            Gets or sets the page that should be navigated to after this page
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.Heading">
            <summary>
            Gets or sets the heading text that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.SubHeading">
            <summary>
            Gets or sets the sub-heading text that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.HeadingImage">
            <summary>
            Gets or sets the image that should appear at the top of the wizard frame
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.EnabledButtons">
            <summary>
            Gets or sets the navigation buttons that should be enabled for this page
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.InputContext">
            <summary>
            Gets or sets the input context for this page
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.IsAvailable">
            <summary>
            Pages that may be unavailable based on external conditions should override this so that
            the page cannot be accessed unless those conditions are met, such as certain pieces of
            software being installed, or certain install states
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.MouseActive">
            <summary>
            Gets a value that indicates whether or not the mouse is active.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.SummaryFormat">
            <summary>
            The format string that should be used by the page when it generates an action summary
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardPage.WizardFrame">
            <summary>
            The WizardFrame object that is hosting this page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SelectWizardModePage.NextPageProperty">
            <summary>
            The NextPage property should be set on a list item so that SelectWizardModePage knows which page to
            navigate to given the currently selected option
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SelectWizardModePage._options">
            <summary>
            The list of options the user may choose from
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SelectWizardModePage._defaultOption">
            <summary>
            The default option
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectWizardModePage.#ctor">
            <summary>
            Creates a new SelectWizardModePage object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectWizardModePage.Load">
            <summary>
            Overriden so that the default option can be selected.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SelectWizardModePage.OnOptionSelected(System.Object,SnapStream.ViewScape.Widgets.ItemActivatedArgs)">
            <summary>
            Handles item selection events by telling the wizard to navigate to the next page
            </summary>
            <param name="sender">Don't care</param>
            <param name="args">Don't care</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SelectWizardModePage.NextPage">
            <summary>
            Overriden so that the next page to navigate to can be returned based on what is selected in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SelectWizardModePage.Options">
            <summary>
            Gets / sets the list of options the user may select from.  This may be any list type.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SelectWizardModePage.DefaultOption">
            <summary>
            The default option that should be selected when the user first enters the page.  This property does not
            have to be used to set the default item.  This can also be set on the item itself by using the
            "Selected" property.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SeparatorListItem">
            <summary>
            Provides a list item that renders itself as a separator.  Separators cannot be selected.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SeparatorListItem._heightPostion">
            <summary>
            Position object that sets the relative height
            Note: This is a hack.  We should be able to work off of the height.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SeparatorListItem.#ctor">
            <summary>
            Creates a new separator list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SeparatorListItem.GetHeight">
            <summary>
            Returns the actual height of the item as calculated from the relative height
            </summary>
            <returns>
            Actual height of the item
            </returns>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SeparatorListItem.SeparatorHeight">
            <summary>
            The height relative to the base height for the separator
            Note: This is a hack.  We should be able to work off of the height.
              Also, we can only set the relative height right now (not the absolute height).
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SkinImage">
            <summary>
            One skinned image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinImage._PATH_ID">
            <summary>
            The xml tag for the path value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinImage._ID_ID">
            <summary>
            The xml tag for the id value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinImage._path">
            <summary>
            The full path to the image on the disk
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinImage._id">
            <summary>
            The skin image identifier for this image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinImage._exists">
            <summary>
            Whether this image existed on the disk at load time
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SkinImage.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            Creates a new skin image from the given xml and using the specified skins directory
            </summary>
            <param name="xel">The xml containing the skin image definition</param>
            <param name="skinsDir">The base directory containing the skin images</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinImage.Id">
            <summary>
            The skin image identifier for this image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinImage.Path">
            <summary>
            The full path to the image on the disk
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinImage.Exists">
            <summary>
            Whether this image existed on the disk at load time
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SkinMesh">
            <summary>
            One skinned mesh
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._PATH_ID">
            <summary>
            The ID of the file path in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._ID_ID">
            <summary>
            The ID of the mesh id in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._YAW_ID">
            <summary>
            The ID of the mesh yaw rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._PITCH_ID">
            <summary>
            The ID of the mesh pitch rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._ROLL_ID">
            <summary>
            The ID of the mesh roll rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._path">
            <summary>
            The full file path for the mesh file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._id">
            <summary>
            The unique ID for the mesh
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._yaw">
            <summary>
            The mesh static yaw rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._pitch">
            <summary>
            The mesh static pitch rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._roll">
            <summary>
            The mesh static roll rotation
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SkinMesh._exists">
            <summary>
            True IFF the mesh file existed at load time
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SkinMesh.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            Creates a new mesh reference for the skin layer
            </summary>
            <param name="xel">The XML containing the mesh information</param>
            <param name="skinsDir">The directory where skins are located</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Id">
            <summary>
            The unique ID for the mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Path">
            <summary>
            The full file path for the mesh file
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Yaw">
            <summary>
            The mesh static yaw rotation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Pitch">
            <summary>
            The mesh static pitch rotation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Roll">
            <summary>
            The mesh static roll rotation
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SkinMesh.Exists">
            <summary>
            True IFF the mesh file existed at load time
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SlideShow">
            <summary>
            Performs a slide-show of photographs
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._ONE_SECOND">
            <summary>
            1 second in 100-ns intervals (ticks)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._DEFAULT_TIMEOUT">
            <summary>
            The default time span for one photo of our slide-show
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._DEFAULT_SWAP_TIME">
            <summary>
            The time it takes to swap between photos in the slide-show
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._DEFAULT_ANIMATION_SPAN">
            <summary>
            The time to animate each photo of the slide-show (the extra second is a buffer)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._HOTBAR_BUTTONS_ID">
            <summary>
            The ID of the slide show buttons group in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._PREVIOUS_BUTTON_ID">
            <summary>
            The ID of the previous photo button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._NEXT_BUTTON_ID">
            <summary>
            The ID of the next photo button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._PLAY_BUTTON_ID">
            <summary>
            The ID of the play button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._PAUSE_BUTTON_ID">
            <summary>
            The ID of the pause button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._ROTATE_CW_ID">
            <summary>
            The ID of the rotate right button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._ROTATE_CCW_ID">
            <summary>
            The ID of the rotate left button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._ZOOM_IN_ID">
            <summary>
            The ID of the zoom in button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._ZOOM_OUT_ID">
            <summary>
            The ID of the rotate left button in the skin
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._DEFAULT_PAN_INC">
            <summary>
            The default number of pixels to pan
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastFilename">
            <summary>
            The last photo we were viewing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._currentFilename">
            <summary>
            The current photo we are viewing
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._currentSelection">
            <summary>
            The index of the current photo in our array
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._futureSelection">
            <summary>
            The index of the photo we'd currently like to change to
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._photos">
            <summary>
            Our photos for the slide-show
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._timeout">
            <summary>
            How long each photo is displayed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastAction">
            <summary>
            Time stamp of the last time our photo was switched
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastPhotoOpacity">
            <summary>
            The opacity for the last photo (in case we're fading it out)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._currentPhotoOpacity">
            <summary>
            The opacity for the current photo (in case we're fading it in)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastAnimationBounds">
            <summary>
            The position of the last photo (in case we're fading it out)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._currentAnimationBounds">
            <summary>
            The position of the current photo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._animator">
            <summary>
            The animator for the current photo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastAnimator">
            <summary>
            The animator for the last photo (in case we're fading it out)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._fader">
            <summary>
            The fader that tells us what opacity values to use
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._lastAnimationType">
            <summary>
            The last animation type we used, so that we don't repeat it
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._rnd">
            <summary>
            Gives us our random numbers to pick animations
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._paused">
            <summary>
            Whether or not the slide-show playback is paused
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._panIncrement">
            <summary>
            The number of pixels to pan
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._defaultZoom">
            <summary>
            The default zoom setting loaded into each photo that is loaded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._useDefaultZoom">
            <summary>
            Whether or not we have a default zoom value to use
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._alignToTopLeft">
            <summary>
            Tells us to align the photos to the top left corner
            Note: only applicable when we're zoomed in (tex.Zoom > 1.0)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._prevPhotoKeys">
            <summary>
            Key codes that go to the previous photo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._nextPhotoKeys">
            <summary>
            Key codes that go to the next photo
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._togglePauseKeys">
            <summary>
            Key codes that toggle play/pause of the animation and transitions
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._rotateLeftKeys">
            <summary>
            Key codes that rotate the image to the left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._rotateRightKeys">
            <summary>
            Key codes that rotate the image to the right
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._zoomInKeys">
            <summary>
            Key codes that zoom in on the image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._zoomOutKeys">
            <summary>
            Key codes that zoom out of the image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._panUpKeys">
            <summary>
            Key codes that pan the image up
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._panDownKeys">
            <summary>
            Key codes that pan the image down
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._panLeftKeys">
            <summary>
            Key codes that pan the image left
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShow._panRightKeys">
            <summary>
            Key codes that pan the image right
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.#ctor">
            <summary>
            Creates a slide-show window
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.Play">
            <summary>
            Continues animating and transitioning the slide show
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.Pause">
            <summary>
            Pauses animation and transitions of the slideshow and puts the current image in the center
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down events
            </summary>
            <param name="sender">
            The sender of this message
            </param>
            <param name="e">
            The keyboard event args
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.FrameMove(System.DateTime)">
            <summary>
            Performs cross-fades and optional animations
            </summary>
            <param name="currentTime">
            Time stamp used in animations
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.Render">
            <summary>
            Paints our photos to the screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnParentVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to handle any state changes when our parent is shown/hidden
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to handle any state changes when we are shown/hidden
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Handles our ssmsgs
            </summary>
            <param name="msg">The msg event holding the message information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to reset our animations
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnNextPhotoButton(System.Object,System.EventArgs)">
            <summary>
            Cycles to the next photo
            </summary>
            <param name="sender">The next photo button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnPrevPhotoButton(System.Object,System.EventArgs)">
            <summary>
            Cycles to the previous photo
            </summary>
            <param name="sender">The previous photo button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnPauseButton(System.Object,System.EventArgs)">
            <summary>
            Pauses the slide-show
            </summary>
            <param name="sender">The pause button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.OnPlayButton(System.Object,System.EventArgs)">
            <summary>
            Plays the slide-show
            </summary>
            <param name="sender">The play button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PanZoomBounds(System.Drawing.Rectangle,SnapStream.ViewScape.Widgets.SSTexture)">
            <summary>
            Handles any panning and zooming specified in the texture
            </summary>
            <param name="target">
            The target bounds we intend to paint to
            </param>
            <param name="tex">
            The texture that will be painted
            </param>
            <returns>
            The modified bounds to paint to as directed by the texture's variables for zooming and panning
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.FindImageInRect(System.Drawing.Rectangle,System.Double)">
            <summary>
            Returns the image's properly scaled rectangle in the given bounds
            </summary>
            <param name="target">The bounds to be painted in</param>
            <param name="aspectRatio">The aspect ratio of the image</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.HandleButtons(SnapStream.ViewScape.Widgets.SSHotbarEvent)">
            <summary>
            Handles all hotbar button events
            </summary>
            <param name="msg">
            The hotbar event information for this event
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PrevPhoto">
            <summary>
            Cycles back one photo
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.NextPhoto">
            <summary>
            Cycles ahead one photo
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PrecacheAroundFuture">
            <summary>
            Caches the photo before and after the next photo to be selected
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.SelectAnimation">
            <summary>
            Picks an animation and starts it
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.GenerateRandom(System.Int32,System.Int32)">
            <summary>
            Creates a random number for use in this class
            </summary>
            <param name="min">
            The minimum random value
            </param>
            <param name="max">
            The maximum random value
            </param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PlayPause">
            <summary>
            Toggles the play/pause state of the slideshow
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.RotateLeft">
            <summary>
            Rotates the current image counter-clock-wise 90 degrees
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.RotateRight">
            <summary>
            Rotates the current image clock-wise 90 degrees
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.ZoomIn">
            <summary>
            Zooms in on the image if we can
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.ZoomOut">
            <summary>
            Zooms out on the image if we can
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PanUp">
            <summary>
            Pans the current image up
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PanDown">
            <summary>
            Pans the current image down
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PanLeft">
            <summary>
            Pans the current image left
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.PanRight">
            <summary>
            Pans the current image right
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.Cleanup">
            <summary>
            Resets the objects that the slideshow changed upon entry
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShow.SyncPlayPauseButtons">
            <summary>
            Determines which buttons the hotbar needs to show and hide depending on our paused state
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.Photos">
            <summary>
            The list of photo filenames in the slide-show
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PanIncrement">
            <summary>
            The number of pixels to increment/decrement when panning
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.DefaultZoom">
            <summary>
            The default zoom setting loaded into each photo that is loaded
            Note: this value is disabled until this property is set
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.AlignToTopLeft">
            <summary>
            Tells us to align the photos to the top left corner
            Note: only applicable when we're zoomed in (tex.Zoom > 1.0)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.Selection">
            <summary>
            Our currently selected index in the array of photo names
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.Paused">
            <summary>
            Whether or not the slide-show playback is paused
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.Animates">
            <summary>
            Tells us whether to animate or not (slide the photos)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PrevPhotoKeys">
            <summary>
            Key codes that go to the previous photo
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.NextPhotoKeys">
            <summary>
            Key codes that go to the next photo
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.TogglePauseKeys">
            <summary>
            Key codes that toggle play/pause of the animation and transitions
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.RotateLeftKeys">
            <summary>
            Key codes that rotate the image to the left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.RotateRightKeys">
            <summary>
            Key codes that rotate the image to the right
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.ZoomInKeys">
            <summary>
            Key codes that zoom in on the image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.ZoomOutKeys">
            <summary>
            Key codes that zoom out of the image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PanUpKeys">
            <summary>
            Key codes that pan our image up
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PanDownKeys">
            <summary>
            Key codes that pan our image down
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PanLeftKeys">
            <summary>
            Key codes that pan our image left
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShow.PanRightKeys">
            <summary>
            Key codes that pan our image right
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SlideShowScreen">
            <summary>
            A screen that shows a slide show
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShowScreen._slideShow">
            <summary>
            Our slide show window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SlideShowScreen._exitKeys">
            <summary>
            Key codes that exit this screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShowScreen.#ctor">
            <summary>
            Creates a new slide show screen
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShowScreen.Activate">
            <summary>
            Overriden to initialize the screen using the screen args
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShowScreen.Deactivate">
            <summary>
            Overriden to clear the caches
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShowScreen.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to set our slide show widget bounds to ours
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SlideShowScreen.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our exit keys
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShowScreen.ExitKeys">
            <summary>
            Key codes that exit this screen
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShowScreen.PanIncrement">
            <summary>
            The number of pixels to increment/decrement when panning
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShowScreen.AlignToTopLeft">
            <summary>
            Whether to align the image to the top left corner
            Note: only effective when zoomed in (tex.Zoom > 1.0)
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShowScreen.DefaultZoom">
            <summary>
            Default zoom value to apply to images when they are displayed
            Note: this is disabled until this property is set
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SlideShowScreen.ScreenArgs">
            <summary>
            Sets the photos and selected index to be displayed
            The format is:
            object[] { string[] photos, int index, bool play, (optional) double defaultZoom, (optional) bool alignToTopLeft }
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSCutListRegion">
            <summary>
            Defines a cut region (start to stop) for a cutlist
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutListRegion._start">
            <summary>
            The starting time stamp of this region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutListRegion._stop">
            <summary>
            The ending time stamp of this region
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutListRegion.#ctor(System.UInt64,System.UInt64)">
            <summary>
            Creates a new cutlist region
            </summary>
            <param name="start">The starting time stamp of this region</param>
            <param name="stop">The ending time stamp of this region</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSCutListRegion.Start">
            <summary>
            The starting time stamp of this region
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSCutListRegion.Stop">
            <summary>
            The ending time stamp of this region
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSCutList">
            <summary>
            Defines a list of cuts (video segments to be removed or skipped)
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.CUTLIST_FILE_EXTENSION">
            <summary>
            The string to be added to a view filename to retrieve the
            smart chapters file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.CUTLIST_REGION_TAG">
            <summary>
            The xml tag for a cutlist region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.CUTLIST_REGION_START_TAG">
            <summary>
            The xml tag for the starting time stamp of a region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.CUTLIST_REGION_END_TAG">
            <summary>
            The xml tag for the ending time stamp of a region
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.PREV_CHAPTER_TOL">
            <summary>
            The number of timestamp ticks in the past to ignore region boundaries
            when skipping back
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.NEXT_CHAPTER_TOL">
            <summary>
            The number of timestamp ticks in the future to ignore region boundaries
            when skipping forward
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSCutList.CHAPTER_SEEK_PAD">
            <summary>
            The number of timestamp ticks to pad skipping back operations
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.#ctor">
            <summary>
            Creates a new cutlist
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.AddRegion(SnapStream.ViewScape.Widgets.SSCutListRegion)">
            <summary>
            Adds the specified region to this cutlist
            </summary>
            <param name="region">The region to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.AddRegion(System.UInt64,System.UInt64)">
            <summary>
            Adds a new region with the specified time stamps to this cutlist
            </summary>
            <param name="start">The starting time stamp of the new region</param>
            <param name="stop">The ending time stamp of the new region</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.GetRegion(System.Int32)">
            <summary>
            Retrieves the region at the specified index
            </summary>
            <param name="index">The index of the desired region</param>
            <returns>The region, if it was found, otherwise, null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.LoadCutListFromFile(System.String)">
            <summary>
            Clears this cut list and creates a new one from the specified file
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.FindNextChapter(System.UInt64)">
            <summary>
            Attempts to skip ahead to the next chapter boundary
            </summary>
            <param name="position">The current position</param>
            <returns>The new position</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSCutList.FindPrevChapter(System.UInt64)">
            <summary>
            Attempts to skip back to the previous chapter boundary
            </summary>
            <param name="position">The current position</param>
            <returns>The new position</returns>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSMesh">
            <summary>
            Encapsulates a d3d mesh and associated components
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._mesh">
            <summary>
            The Direct3D mesh for this object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._materials">
            <summary>
            The Direct3D materials for this mesh object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._textures">
            <summary>
            The Direct3D textures for this mesh object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._filename">
            <summary>
            The filename that held this mesh
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._yaw">
            <summary>
            The static rotation about the z axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._pitch">
            <summary>
            The static rotation about the x axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMesh._roll">
            <summary>
            The static rotation about the y axis
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSMesh.#ctor">
            <summary>
            Creates a new mesh that contains no D3D mesh yet
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSMesh.FromFile(Microsoft.DirectX.Direct3D.Device,System.String)">
            <summary>
            Loads a mesh from the given file
            </summary>
            <param name="device">The Direct3D device to load the mesh with</param>
            <param name="filename">The mesh file</param>
            <returns>The loaded mesh, otherwise null</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSMesh.Dispose">
            <summary>
            Releases the Direct3D mesh object and any textures loaded
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Mesh">
            <summary>
            The Direct3D mesh for this object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Materials">
            <summary>
            The Direct3D materials for this mesh object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Textures">
            <summary>
            The Direct3D textures for this mesh object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Filename">
            <summary>
            The filename that held this mesh
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Yaw">
            <summary>
            The static rotation (in degrees) about the z axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Pitch">
            <summary>
            The static rotation (in degrees) about the x axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.Roll">
            <summary>
            The static rotation (in degrees) about the y axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.YawRadians">
            <summary>
            The static rotation about the z axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.PitchRadians">
            <summary>
            The static rotation about the x axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSMesh.RollRadians">
            <summary>
            The static rotation about the y axis
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSMsg">
            <summary>
            Enumeration of snapstream messages
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.None">
            <summary>
            No message was specified
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.Home">
            <summary>
            The application needs to jump to the main menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.MouseActive">
            <summary>
            The mouse has become active
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.MouseInactive">
            <summary>
            The mouse has become inactive
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.Back">
            <summary>
            The application needs to jump back one screen
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSMsg.HotbarClick">
            <summary>
            A hotbar button has been clicked
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SSTexture">
            <summary>
            The abstraction of a texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._MIN_ASPECT_RATIO">
            <summary>
            The smallest aspect ratio possible
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._MAX_ZOOM">
            <summary>
            The most any image can be zoomed-in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._MIN_ZOOM">
            <summary>
            The most any image can be zoomed-out
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._NO_ZOOM">
            <summary>
            The non-zoomed factor
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._ZOOM_SCALE">
            <summary>
            The amount of zooming tried for each zoom
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._ZOOM_FUDGE">
            <summary>
            The smallest resolution of our zooming
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._tex">
            <summary>
            The underlying Direct3D Texture object for this image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._requestedFilename">
            <summary>
            The filename requested when loading this texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._filename">
            <summary>
            The actual filename used when loading this texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._originalAspectRatio">
            <summary>
            The original aspect ratio of the image loaded
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._width">
            <summary>
            The width of the texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._height">
            <summary>
            The height of the texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._angle">
            <summary>
            The angle that the image should be rotated by
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._mirrorV">
            <summary>
            Whether to flip the image about the y-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._mirrorH">
            <summary>
            Whether to flip the image about the x-axis
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._zoom">
            <summary>
            How much to zoom the image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._offCenter">
            <summary>
            How much to pan the image in the display
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._notFound">
            <summary>
            Tells us if this is the not found texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._dimUsed">
            <summary>
            Tells us what dimension we used when creating the texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._filterUsed">
            <summary>
            Tells us what filter we used when creating the texture
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.SSTexture._lastAccess">
            <summary>
            The last time someone accessed this texture
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.#ctor">
            <summary>
            Constructs an empty texture.  Use at your own risk...
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.#ctor(System.String,System.String,Microsoft.DirectX.Direct3D.Texture,System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a new texture object
            </summary>
            <param name="requestedFilename">
            The filename requested when loading this texture
            </param>
            <param name="filenameIn">
            The actual filename used when loading this texture
            </param>
            <param name="texIn">
            The underlying Direct3D Texture object for this image
            </param>
            <param name="width">
            The width of the texture
            </param>
            <param name="height">
            The height of the texture
            </param>
            <param name="ratio">
            The original aspect ratio of the image loaded
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.#ctor(System.Xml.XmlElement)">
            <summary>
            Deserializes the given xml node into our member variables
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.ZoomIn">
            <summary>
            Attempts to zoom in by a factor of two
            </summary>
            <returns>
            True IFF we were allowed to zoom in further, else False
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.ZoomOut">
            <summary>
            Attempts to zoom out by a factor of two
            </summary>
            <returns>
            True IFF we were allowed to zoom out further, else False
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.RotateRight">
            <summary>
            Rotates this image 90 degrees clockwise
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.RotateLeft">
            <summary>
            Rotates this image 90 degrees counter-clockwise
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.PanUp(System.Int32)">
            <summary>
            Pans this image up
            </summary>
            <param name="increment">The amount to pan</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.PanDown(System.Int32)">
            <summary>
            Pans this image down
            </summary>
            <param name="increment">The amount to pan</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.PanLeft(System.Int32)">
            <summary>
            Pans this image left
            </summary>
            <param name="increment">The amount to pan</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.PanRight(System.Int32)">
            <summary>
            Pans this image right
            </summary>
            <param name="increment">The amount to pan</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.Touch">
            <summary>
            Updates the last access time
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.Serialize(System.String)">
            <summary>
            Serializes the member variables of this object into the given xml file name
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.Deserialize(System.String)">
            <summary>
            Deserializes the given xml file into an SSTexture object
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SSTexture.Dispose">
            <summary>
            Releases the Direct3D texture object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Tex">
            <summary>
            The underlying Direct3D Texture object for this image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.RequestedFilename">
            <summary>
            The filename requested when loading this texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Filename">
            <summary>
            The actual filename used when loading this texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.OriginalAspectRatio">
            <summary>
            The original aspect ratio of the image loaded
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Width">
            <summary>
            The width of the texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Height">
            <summary>
            The height of the texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Angle">
            <summary>
            The angle that the image should be rotated by
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.MirrorV">
            <summary>
            Whether to flip the image about the y-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.MirrorH">
            <summary>
            Whether to flip the image about the x-axis
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.Zoom">
            <summary>
            How much to zoom the image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.OffCenter">
            <summary>
            How much to pan the image in the display
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.NotFound">
            <summary>
            Tells us if this is the not found texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.DimUsed">
            <summary>
            Tells us what dimension we used when creating the texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.FilterUsed">
            <summary>
            Tells us what filter we used when creating the texture
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SSTexture.LastAccess">
            <summary>
            The last time someone accessed this texture
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.StartMenuBrowser">
            <summary>
            File browser specifically designed for navigating the start menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._baseName">
            <summary>
            Name displayed when at the root directories
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._multiDirectory">
            <summary>
            The object that handles the navigation of the start menu
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._browser">
            <summary>
            The browse view that we're currently using
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._dirText">
            <summary>
            The text to display the current directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._itemText">
            <summary>
            The text to display the currently selected item's display name
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._itemNumText">
            <summary>
            The text to display the currently selected item's location in the current directory
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._views">
            <summary>
            The list of different browse views for this browser
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._hiddenExtensions">
            <summary>
            The list of extensions that shoul not be shown to the user when displaying
            a file name
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._backKeys">
            <summary>
            Input key codes for going back
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.StartMenuBrowser._viewKeys">
            <summary>
            Input key codes for changing the current view
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.#ctor">
            <summary>
            Creates a new strart menu browser
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our back and view key codes
            </summary>
            <param name="sender">The sender of this message</param>
            <param name="e">Contains the key code that was pressed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.AddChildCore(System.Object)">
            <summary>
            Overridden to add the browse views to our collection of browse views
            Can also add strings to the list of extensions
            </summary>
            <param name="child">The child or string to be added</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.AddTextCore(System.String)">
            <summary>
            Not implemented
            </summary>
            <param name="text">
            string containing the new extension to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.BuildView">
            <summary>
            Builds our view with the current items in the MultipleDirectoryInfo
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.ShowCurrentDirectory">
            <summary>
            Adds the item in the current directories to the View
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.NavigateItem(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Navigates to the given file item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.ExecuteItem(SnapStream.ViewScape.Widgets.FileItem)">
            <summary>
            Executes the given file item
            </summary>
            <param name="item">The file to execute</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.TryToGoBack">
            <summary>
            Attempts to navigate backwards (go "up" a directory)
            </summary>
            <returns>True IFF the navigation was successful</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.SwitchView">
            <summary>
            Cycles through our views from the current one to the next one
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.ShowView(SnapStream.ViewScape.Widgets.IBrowseView)">
            <summary>
            Shows the given view
            </summary>
            <param name="view">The view to show</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.SyncText(SnapStream.ViewScape.Widgets.FileItem,System.Int32,System.Int32)">
            <summary>
            Updates our text displays
            </summary>
            <param name="item">The file item that is currently selected</param>
            <param name="itemNum">The item number (index+1) of the currently selected item</param>
            <param name="itemCount">The total number of items in the browser</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.OnDirectoryNavigated(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles a directory navigated event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the new directory</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.OnFileExecuted(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles a file executed event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the file item that was executed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.StartMenuBrowser.OnBrowseItemChanged(System.Object,SnapStream.ViewScape.Widgets.BrowseEventArgs)">
            <summary>
            Handles an item changed event from our current view
            </summary>
            <param name="sender">Better be the current view</param>
            <param name="bea">Contains the file item that is now selected</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.BaseName">
            <summary>
            Name displayed when at the root directories
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.DirText">
            <summary>
            The text to display the current directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.ItemText">
            <summary>
            The text to display the currently selected item's display name
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.ItemNumText">
            <summary>
            The text to display the currently selected item's location in the current directory
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.SelectedIndex">
            <summary>
            The index of the currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.BackKeys">
            <summary>
            Input key codes for going back
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.StartMenuBrowser.ViewKeys">
            <summary>
            Input key codes for changing the current view
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextButton">
            <summary>
            A Button extended to include a Text object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._buttonText">
            <summary>
            Text object to display button text
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._defaultTextColor">
            <summary>
            Color used for the text when the mouse is not hovering over the text button and the button is not pressed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._focusTextColor">
            <summary>
            Color used for the text when the mouse is hovering over the text button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._selectTextColor">
            <summary>
            Color used for the text when the button is pressed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._textObjectHeightPercent">
            <summary>
            How much of the button height is taken up by the text object
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextButton._textObjectWidthPercent">
            <summary>
            How much of the button width is taken up by the text object
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.#ctor">
            <summary>
            Creates a new text button
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to resize the button text window properly
            </summary>
            <param name="x">The x position of this window</param>
            <param name="y">The y position of this window</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the focus/default color when necessary
            </summary>
            <param name="sender">The sender of the msg</param>
            <param name="e">Contains the mouse position and buttons</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.OnMouseOver(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the focus color of this button
            </summary>
            <param name="sender">The sender of the msg</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.OnMouseOut(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the default color of this button
            </summary>
            <param name="sender">The sender of the msg</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextButton.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the select color when this button is down
            </summary>
            <param name="sender">The sender of the msg</param>
            <param name="e">Contains the mouse position and button</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.TextObject">
            <summary>
            Text object to display button text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.Text">
            <summary>
            Get or set the text to display
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.DefaultTextColor">
            <summary>
            Color used for the text when the mouse is not hovering over the text button and the button is not pressed
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.FontSize">
            <summary>
            Set the relative font size of the text for the button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.FocusTextColor">
            <summary>
            Color used for the text when the mouse is hovering over the text button
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.SelectTextColor">
            <summary>
            Color used for the text when the button is pressed
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.TextObjectWidthPercent">
            <summary>
            How much of the button width is taken up by the text object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextButton.TextObjectHeightPercent">
            <summary>
            How much of the button height is taken up by the text object
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextEntry">
            <summary>
            Provides a text entry widget.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._CURSOR">
            <summary>
            Character to use as the cursor
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._CURSOR_BLINK_INTERVAL">
            <summary>
            Amount of time before the cursor blinks
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._nextCursorToggleTime">
            <summary>
            Time the cursor was last toggled
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._isCursorShown">
            <summary>
            Determines the current state of the cursor
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._shouldBlinkCursor">
            <summary>
            Determines if the cursor should be blinking
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._focusBackground">
            <summary>
            Background to use when the text entry has focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._nonFocusBackground">
            <summary>
            Background to use when the text entry does not have focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._focusTextColor">
            <summary>
            Text color to use when the text entry has focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._nonFocusTextColor">
            <summary>
            Text color to use when the text entry does not have focus
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._textBox">
            <summary>
            The Text window to display text in
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._selectionBox">
            <summary>
            The selection window
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._paddingPercent">
            <summary>
            Margins that should be maintained between UI elements
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._textBoxHeightPercent">
            <summary>
            The percentage of the total height that the text box should occupy
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextEntry._textGridBounds">
            <summary>
            The bounds within which the key grid is rendered
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.#ctor">
            <summary>
            Generic Constructor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SelectKey(System.Windows.Forms.Keys)">
            <summary>
            Selects the specified key in the key grid
            </summary>
            <param name="key">The key to select</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.FrameMove(System.DateTime)">
            <summary>
            Overridden to handle cursor blinking
            </summary>
            <param name="currentTime">
            Current time stamp used for blinking the cursor
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overriden to set the bounds of the text box
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.Render">
            <summary>
            Renders the character grid
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overriden to handle keyboard inputs
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Overriden to handle character inputs
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the character information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to set the capture state
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to grab focus if we were the captured window
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to track item selection in the key grid
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden to change item selection in the key grid
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse information</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnFocus">
            <summary>
            Overriden to set the focus background and text color and to start the cursor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.OnLostFocus">
            <summary>
            Overriden to set the nonfocus background and text color and to stop the cursor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.AddCharacter(System.Char)">
            <summary>
            Adds a character to the string
            </summary>
            <param name="newChar">
            Character to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.RemoveLastCharacter">
            <summary>
            Removes the last character from the string
            </summary>
            <returns>
            True if a character was removed, false otherwise
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.ToggleCursor">
            <summary>
            Toggles the cursor visibility
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.ShowCursor(System.Boolean)">
            <summary>
            Ensures that the cursor is in the given state
            </summary>
            <param name="showNow">True to show the cursor, false to hide it</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SetNonFocusBackground">
            <summary>
            Sets the NonFocus background if it has been initialized
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SetFocusBackground">
            <summary>
            Sets the Focus background if it has been initialized
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SetNonFocusTextColor">
            <summary>
            Sets the NonFocus text color if it has been initialized
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SetFocusTextColor">
            <summary>
            Sets the Focus text color if it has been initialized
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.GetItemAtPoint(System.Drawing.Point,System.Int32@,System.Int32@)">
            <summary>
            Finds the item at a given point
            </summary>
            <param name="pt">The point</param>
            <param name="row">Returns the row where the item was found</param>
            <param name="column">Returns the column where the item was found</param>
            <returns>Returns true if an item was found at the specified point, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.GetItemAtPoint(System.Drawing.Point,System.Int32@,System.Int32@,SnapStream.ViewScape.Widgets.TextEntry.KeyGridItem@)">
            <summary>
            Finds the item at a given point
            </summary>
            <param name="ptTest">The point</param>
            <param name="row">Returns the row where the item was found</param>
            <param name="column">Returns the column where the item was found</param>
            <param name="item">Returns information about the item</param>
            <returns>Returns true if an item was found at the specified point, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SelectGridItem(System.Int32,System.Int32)">
            <summary>
            Selects the item at the given row and column
            </summary>
            <param name="row">The row of the item to select</param>
            <param name="column">The column of the item to select</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SelectGridItem(System.Windows.Forms.Keys)">
            <summary>
            Selects the grid item that corresponds to the given key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.SendInput(System.Windows.Forms.Keys)">
            <summary>
            Sends the specified key to the application
            </summary>
            <param name="key">The key to send</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.RaiseAcceptEvent">
            <summary>
            Triggers the Accept event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.RaiseCancelEvent">
            <summary>
            Triggers the cancel event
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextEntry.RaiseChangedEvent">
            <summary>
            Triggers the Changed event
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.HorizontalAlign">
            <summary>
            The horizontal text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.VerticalAlign">
            <summary>
            The vertical text alignment to use
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.Text">
            <summary>
            The text to be painted
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.Color">
            <summary>
            The color in which to paint the above-mentioned text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.FontPixelSize">
            <summary>
            The pixel height of the font to request
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.FontSize">
            <summary>
            The relative height of the font to request
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.Ellipses">
            <summary>
            Specifies how to ellipsize the text in this object
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.Multiline">
            <summary>
            Whether or not to use multiple lines
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.FocusBackground">
            <summary>
            Background to use when the text entry has focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.NonFocusBackground">
            <summary>
            Background to use when the text entry has focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.FocusTextColor">
            <summary>
            Text color to use when the text entry has focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.NonFocusTextColor">
            <summary>
            Text color to use when the text entry does not have focus
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.TextBox">
            <summary>
            The window where text will be displayed for the user
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.SelectionBox">
            <summary>
            The control that tracks the currently selected item in the key grid
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.PaddingPercent">
            <summary>
            Margins that should be maintained between UI elements
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.TextBoxHeightPercent">
            <summary>
            The percentage of the total height that the text box should occupy
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.TextEntry.Accept">
            <summary>
            Triggered if the user accepts the text entry
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.TextEntry.Cancel">
            <summary>
            Triggered if the user cancels the text entry box
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.TextEntry.Changed">
            <summary>
            Triggered when the user changes the text
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextEntry.BaseUri">
            <summary>
            Overridden to set the Base URI on the textbox when ours is set
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextIconListItem">
            <summary>
            Provides a list item that has an associated icon.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextIconListItem._iconWindow">
            <summary>
            The window to contain our icon
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextIconListItem._iconBounds">
            <summary>
            These are the bounds that are used to display the icon
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.#ctor(System.String)">
            <summary>
            Construct the object with the given display text
            </summary>
            <param name="text">
            Text to display
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.#ctor(System.String,System.Drawing.Bitmap)">
            <summary>
            Construct the object with the given display text and bitmap
            </summary>
            <param name="text">
            Text to display
            </param>
            <param name="icon">
            Bitmap to be used as the icon
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.#ctor(System.String,System.Drawing.Bitmap,System.Object)">
            <summary>
            Construct the object with the given display text, bitmap, and object
            </summary>
            <param name="text">
            Text to display
            </param>
            <param name="icon">
            Bitmap to be used as the icon
            </param>
            <param name="objValue">
            Object to store in the Value field of the item
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.AddCommonElements">
            <summary>
            Populates the common elements of a file list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextIconListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the icon
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextIconListItem.IconWindow">
            <summary>
            This window is used to display the icon
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextImageListItem">
            <summary>
            Provides a list item that has an associated image.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextImageListItem._iconWindow">
            <summary>
            The window to contain our icon
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextImageListItem._iconBounds">
            <summary>
            These are the bounds that are used to display the icon
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextImageListItem._imagePadding">
            <summary>
            Amount of square padding around the image
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.#ctor(System.String)">
            <summary>
            Construct the object with the given display text
            </summary>
            <param name="text">
            Text to display
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.#ctor(System.String,System.String)">
            <summary>
            Construct the object with the given display text and bitmap
            </summary>
            <param name="text">
            Text to display
            </param>
            <param name="image">
            Bitmap to be used as the icon
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.#ctor(System.String,System.String,System.Object)">
            <summary>
            Construct the object with the given display text, bitmap, and object
            </summary>
            <param name="text">
            Text to display
            </param>
            <param name="image">
            Bitmap to be used as the icon
            </param>
            <param name="objValue">
            Object to store in the Value field of the item
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.#ctor(System.String,System.String,System.Object,System.Double)">
            <summary>
            Construct the object with the given display text, bitmap, and object
            </summary>
            <param name="text">
            Text to display
            </param>
            <param name="image">
            Bitmap to be used as the icon
            </param>
            <param name="objValue">
            Object to store in the Value field of the item
            </param>
            <param name="imagePadding">
            Sets the image padding used when positioning the image window
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.AddCommonElements">
            <summary>
            Populates the common elements of a file list item
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextImageListItem.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to size the icon
            </summary>
            <param name="x">The x position of this window in its parent</param>
            <param name="y">The y position of this window in its parent</param>
            <param name="width">The width of this window</param>
            <param name="height">The height of this window</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextImageListItem.IconWindow">
            <summary>
            This window is used to display the icon
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextImageListItem.Image">
            <summary>
            The image to be displayed on the left of this list item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextImageListItem.ImagePadding">
            <summary>
            The fraction of the smallest of width/height to pad around the image
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane">
            <summary>
            Provides formatted text rendering.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane._fontSize">
            <summary>
            The pixel height of the font to request
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.#ctor">
            <summary>
            Initializes a new instance of the TextPane class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.MapFontSize(System.Int32)">
            <summary>
            Maps a font size that is relative to the base dimensions of the screen to an actual pixel size value.
            </summary>
            <param name="fontSize">The relative font size</param>
            <returns>The font size scaled to the current display dimensions.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Clear">
            <summary>
            Removes all formatting and text from this TextPane object.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.AddItem(System.Object)">
            <summary>
            Adds an item to the TextPane.
            </summary>
            <remarks>
            Any object may be added to a TextPane.  If the object is a <see cref="T:SnapStream.ViewScape.Widgets.TextPane.TextFormatter">TextFormatter</see> it
            will render whatever its contents are.  If the object is a string it will be added as textual content.  Any
            other object will be converted to a string either through a <see cref="T:System.ComponentModel.TypeConverter">TypConverter</see> or
            by calling the <see cref="M:System.Object.ToString">ToString</see> method.
            </remarks>
            <param name="item">The item to add</param>
            <returns>Returns this TextPane instance so that add calls can be strung together.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.AddChildCore(System.Object)">
            <summary>
            Overridden to provide item handling and addition.
            </summary>
            <param name="child">The item to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.AddTextCore(System.String)">
            <summary>
            Overridden to provide item handling and addition.
            </summary>
            <param name="text">The text to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Render">
            <summary>
            Overridden to render the text to screen.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overridden to update our bounds.
            </summary>
            <param name="x">The x coordinate</param>
            <param name="y">The y coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.AdjustBounds">
            <summary>
            Overridden to adjust our bounds when our size changes.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to handle mouse wheel scrolling.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle keyboard navigation.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event parameters</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.FormatFlags">
            <summary>
            Gets or sets the formatting flags that should be used by default when rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Color">
            <summary>
            Gets or sets the color that should be used by default when rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.FontSize">
            <summary>
            Gets or sets the font size that should be used by default when rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.FontPixelSize">
            <summary>
            Gets or sets the font pixel size that should be used by default when rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.BaseFormatter">
            <summary>
            Gets or sets the base formatter which is the formatter that contains all other formatters.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.CurrentScrollOffset">
            <summary>
            Gets the current scroll offest in effect for the user.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.ScrollBar">
            <summary>
            Gets the vertical scroll bar that is shown when the text content of the TextPane does not fit
            in the TextPane's client area.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.ClippedTextBounds">
            <summary>
            Gets the bounds the TextPane will draw to taking into account any clipping that needs
            to take place ( for the scoll bar for instance ).
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.DrawingContext">
            <summary>
            Provides methods that allow <see cref="T:SnapStream.ViewScape.Widgets.TextPane.TextFormatter">TextFormatters</see> to draw into
            a <see cref="T:SnapStream.ViewScape.Widgets.TextPane">TextPane</see>.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.LineStart">
            <summary>
            The start of the current line where text should be rendered.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.CurrentX">
            <summary>
            The current X value to render text at.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.CurrentY">
            <summary>
            The current Y value to render text at.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Width">
            <summary>
            The width of the output area.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Height">
            <summary>
            THe height of the output area.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Color">
            <summary>
            The color to draw text in.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Alpha">
            <summary>
            The alpha value to draw text at.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.FormatFlags">
            <summary>
            The formatting flags to use when drawing text.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.#ctor(SnapStream.ViewScape.Widgets.TextPane)">
            <summary>
            Initializes a new instance of the DrawingContext class.
            </summary>
            <param name="pane">The TextPane that this DrawingContext will render to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.DrawText(System.String)">
            <summary>
            Draws the specified text using the current drawing attributes.
            </summary>
            <param name="text">The text to draw</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Pane">
            <summary>
            Gets the TextPane this DrawingContext is associated with.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingBox">
            <summary>
            Gets the bounding box or the output area for the TextPane.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingX">
            <summary>
            Gets the X coordinate of the bounding box.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingY">
            <summary>
            Gets the Y coordinate of the bounding box.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingWidth">
            <summary>
            Gets the width of the bounding box.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingHeight">
            <summary>
            Gets the height of the bounding box.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.FontSize">
            <summary>
            Gets or sets the font size that should be used to render text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.LineHeight">
            <summary>
            Gets the current line height.
            </summary>
            <remarks>
            The line height is the height of each character cell in rendered text.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.SpaceWidth">
            <summary>
            Gets the width of a space when rendered to screen.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.Painter">
            <summary>
            Gets the Sprite object that is used to render the text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.CurrentRectangle">
            <summary>
            Gets the current target area for rendering text.
            </summary>
            <remarks>
            The value of this property is not the same as the value of the <see cref="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.BoundingBox">BoundingBox</see>
            property.  This property takes into account any text that has already been rendered and returns a
            rectangle that does not include this area.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.CurrentLocation">
            <summary>
            Gets the location of the current target area for rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.CurrentSize">
            <summary>
            Gets the size of the current target area for rendering text.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.DrawingContext.OutputClipped">
            <summary>
            Gets a value that determines whether or not the output of the TextPane
            has been clipped.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.ITextFormatter">
            <summary>
            The interface that text formatters must implement to participate
            in text rendering.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.ITextFormatter.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws whatever content the text formatter is maintaining.
            </summary>
            <param name="dc">The drawing context</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.TextFormatter">
            <summary>
            Provides a text formatter that contains other formatting objects as well as textual
            content.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.TextFormatter.AddItem(System.Object)">
            <summary>
            Adds a new item to this formatter.
            </summary>
            <remarks>
            Any object may be added to a TextFormatter.  If the object is a <see cref="T:SnapStream.ViewScape.Widgets.TextPane.TextFormatter">TextFormatter</see> it
            will render whatever its contents are.  If the object is a string it will be added as textual content.  Any
            other object will be converted to a string either through a <see cref="T:System.ComponentModel.TypeConverter">TypConverter</see> or
            by calling the <see cref="M:System.Object.ToString">ToString</see> method.
            </remarks>
            <param name="o">The item to add</param>
            <returns>Returns this TextFormatter instance so that add calls can be strung together.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.TextFormatter.AddText(System.String)">
            <summary>
            Adds text to this TextFormatter
            </summary>
            <param name="text">The text to add</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.TextFormatter.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws the contents of this TextFormatter to the screen.
            </summary>
            <param name="dc">The DrawingContext to draw to</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.Break">
            <summary>
            A text formatter that provides for line breaks.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Break.StaticBreak(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Forces a line break in the rendered text output.
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Break.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws a line break.
            </summary>
            <param name="dc">The DrawingContext to draw to</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.NextLine">
            <summary>
            A text formatter that provides for line feeds.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.NextLine.StaticNextLine(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Forces a line feed in the rendered text output.
            </summary>
            <param name="dc">The DrawingContext to draw to</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.NextLine.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws a line feed.
            </summary>
            <param name="dc">The DrawingContext to draw to</param>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.Font">
            <summary>
            A text formatter that allows specification of the font to draw with.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
            <param name="size">The size of the font</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
            <param name="color">The color of the font</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor(System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
            <param name="size">The size of the font</param>
            <param name="color">The color of the font</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor(System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
            <param name="size">The size of the font</param>
            <param name="color">The color of the font</param>
            <param name="alpha">The alpha blending value of the font</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.#ctor(System.Int32,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Font class.
            </summary>
            <param name="size">The size of the font</param>
            <param name="color">The color of the font</param>
            <param name="alpha">The alpha blending value of the font</param>
            <param name="absAlpha">The alpha blending value of the font regardless of what the current value is</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Font.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws the content of this formatter using the specified font properties.
            </summary>
            <param name="dc">The DrawingContext to draw to</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Font.Size">
            <summary>
            Gets or sets the size of the font to draw in.
            </summary>
            <value>
            If the value of this property is -1 it will be ignored.
            </value>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Font.Color">
            <summary>
            Gets or sets the color of the font to draw in.
            </summary>
            <value>
            If the value of this property is <see cref="F:System.Drawing.Color.Empty">Empty</see> it will be ignored.
            </value>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Font.Alpha">
            <summary>
            Gets or sets the alpha blending value of the font to draw in.
            </summary>
            <remarks>
            The value specified here will be multiplied by whatever alpha blending value
            is currently in effect when this formatter draws itself to arrive at the final
            alpha value.  To specify the alpha value regardless of what the current value is
            use the <see cref="P:SnapStream.ViewScape.Widgets.TextPane.Font.AbsAlpha">AbsAlpha</see> property instead which is not multiplied.
            </remarks>
            <value>
            If the value of this property is -1 it will be ignored.
            </value>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Font.AbsAlpha">
            <summary>
            Gets or sets the baseline alpha blending value of the font to draw in.
            </summary>
            <remarks>
            The value specified here will not be multiplied by the current alpha blending value
            in the DrawingContext when the formatter draws its contents.  This value specifies the
            actual alpha value that should be used and is not modulated by the current alpha blending value.
            </remarks>
            <value>
            If the value of this property is -1 it will be ignored.
            </value>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TextPane.Indent">
            <summary>
            A text formatter that provides for indentation of its contents.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TextPane.Indent.SpacesPerTab">
            <summary>
            The default number of spaces for each tab character in textual content.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Indent.#ctor">
            <summary>
            Initializes a new instance of the Indent class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Indent.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Indent class.
            </summary>
            <param name="tabs">The number of tabs to indent by</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TextPane.Indent.Draw(SnapStream.ViewScape.Widgets.TextPane.DrawingContext)">
            <summary>
            Draws the content of this element with the specified indentation.
            </summary>
            <param name="dc">The DrawingContext</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Indent.Tabs">
            <summary>
            Gets or sets the number of tabs to indent.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Indent.AbsPixels">
            <summary>
            Gets or sets the number of pixels to indent the content by.
            </summary>
            <remarks>
            This member is currently not used.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Indent.Pixels">
            <summary>
            Gets or sets the number of pixels to indent the content by.
            </summary>
            <remarks>
            This member is currently not used.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TextPane.Indent.Spaces">
            <summary>
            Gets or sets the number of spaces to indent the content by.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.TrackBar">
            <summary>
            A simple trackbar for displaying and interacting with the current video position and duration
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._position">
            <summary>
            Our current position in the file
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._duration">
            <summary>
            The current file's duration
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._bar">
            <summary>
            The actual bar part of the trackbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._pointer">
            <summary>
            The pointer to our current location
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._mouseDown">
            <summary>
            Pointer to the bar or pointer, whichever had the mouse button down on it
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._cutList">
            <summary>
            Our cut list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.TrackBar._cutListImage">
            <summary>
            The image to paint for each cut list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.#ctor">
            <summary>
            Creates the trackbar background and pointer windows
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.CanHide">
            <summary>
            Tells the consumer whether we're tracking at the moment
            </summary>
            <returns>true if we aren't doing anything that requires the hud to stay up</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Modifies our bar window to make sure there is room for the pointer and
            positions the pointer based on our current position/duration
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our scrolling while moving the mouse pointer
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse coords</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse down events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position and button pressed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse up events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position and button pressed</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.Render">
            <summary>
            Overridden to paint our cutlist.  We are NOT calling the base Render method
            so take note if you're extending this class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.RenderCutList">
            <summary>
            Paints our cutlist if we have any cut list regions in it
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.PositionPointer">
            <summary>
            Places the pointer window given the current bounds, position, and duration
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.UpdateScroll(System.Drawing.Point,System.Boolean)">
            <summary>
            Calculates the new position from the given point and decides whether to flag a scroll event
            </summary>
            <param name="pt">The new position of the mouse cursor</param>
            <param name="finished">Signals whether this is the end of a scroll (mouse up)</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.TrackBar.RaiseScrollEvent(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Tells our consumers that we've been moved
            </summary>
            <param name="position">The new position</param>
            <param name="setPosition">Tells us whether to set the position or not</param>
            <param name="finished">Tells us whether to say we are finished scrolling</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.Position">
            <summary>
            Provides access to our current position in the file.
            Setting this should update the display, shortly.
            Note: Invalid values will be clipped by the current endpoints.
            In general, set the duration first, then the position.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.Duration">
            <summary>
            Provides access to our current duration.
            Setting this will cause an update in display, shortly.
            If this value is lower than the current position, the current position
            value will be clipped.
            In general, set the duration first, then the position.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.Bar">
            <summary>
            Our trackbar background
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.Pointer">
            <summary>
            Our trackbar position pointer
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.CutList">
            <summary>
            Our cut list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.TrackBar.CutListImage">
            <summary>
            The image to paint for each cut list
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.TrackBar.Scroll">
            <summary>
            Our scroll event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VariableItemList">
            <summary>
            A vertical list that holds variable list height items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._topVisibleItem">
            <summary>
            Index of the item that is at the top of the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._gridPaddingPercent">
            <summary>
            Percent of the height (between 0 and 1) for padding 
            on all four borders and in between items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._gridPaddingPixels">
            <summary>
            Value in pixels for padding on all four borders and in between items
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._itemWidth">
            <summary>
            Width of the item based on the padding
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._mustRebuild">
            <summary>
            Flag that tells us if we should rebuild on a frame move
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._defaultItemHeight">
            <summary>
            Height for items added with no height set
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._isDefaultHeightRelative">
            <summary>
            Flag to apply the default height as a relative or absolute height
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._upKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._downKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._pageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VariableItemList._pageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.#ctor">
            <summary>
            Creates a new variable item list
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.AddTextItem(System.String,System.Int32@)">
            <summary>
            Adds a D3DTestListItem that contains the given text to the list
            </summary>
            <param name="text">
            Text that is contained in the item
            </param>
            <param name="index">
            -1 if the item wasn't added
            Index at which the item was added
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.AddTextItem(System.String,System.Int32@,System.Int32,System.Boolean)">
            <summary>
            Adds a D3DTestListItem that contains the given text to the list
            </summary>
            <param name="text">
            Text that is contained in the item
            </param>
            <param name="index">
            -1 if the item wasn't added
            Index at which the item was added
            </param>
            <param name="height">Height of the item</param>
            <param name="isHeightRelative">True if the height is relative, false if it is absolute</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.AddOptionListItem(SnapStream.ViewScape.Widgets.OptionListItem,System.Int32@)">
            <summary>
            Adds a OptionListItem to the list
            </summary>
            <param name="item">
            OptionListItem to add
            </param>
            <param name="index">
            -1 if the item wasn't added
            Index at which the item was added
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.AddItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Adds a BaseListItem to the list
            </summary>
            <param name="item">
            BaseListItem to add
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.RemoveItem(SnapStream.ViewScape.Widgets.BaseListItem)">
            <summary>
            Removes the given item from the list
            </summary>
            <param name="item">
            Item to remove
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.ChangeSelectedIndex(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Will attempt to change the selecteIndex to the newindex.
            If change is successful, the list will be rebuilt.
            </summary>
            <param name="newIndex">
            Index to set as selected
            </param>
            <param name="useAnimation">
            True to animate on rebuild
            </param>
            <param name="playSound">
            True if we should play the NoMove sound on a failure
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.InternalSetSelectedIndex(System.Int32)">
            <summary>
            Deselected the current index and sets the indicated index as selected
            </summary>
            <param name="index">
            Index to be set as selected
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.UpdateBuildParameters">
            <summary>
            Calculates all of the padding and item sizes.
            Should be called any time one of the parameters change.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.RebuildBounds(System.Boolean)">
            <summary>
            Rebuild the bounds of the items in the list
            </summary>
            <param name="useAnimation"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.UpdateTopVisibleItem">
            <summary>
            Ensures that the selected item is visible
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.JumpDownIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.JumpUpIndex">
            <summary>
            Determines the next index to try to jump to
            </summary>
            <returns>
            New index to jump to
            </returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle the up, down, pgup, and pgdn inputs
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle the mouse scroll event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Overriden to set the bounds of the scrollbar and to reset the BuildParameters
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.FrameMove(System.DateTime)">
            <summary>
            Overriden to rebuild the bounds of the list as necessary
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.CreateScrollBar">
            <summary>
            Creates our vertical scrollbar instance
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.ScrollBarNeeded">
            <summary>
            Tells us whether to paint the scrollbar
            </summary>
            <returns>Whether the scrollbar should be painted</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.OnScrollBarScroll(System.Object,SnapStream.ViewScape.Widgets.ScrollEventArgs)">
            <summary>
            Handles our scroll events by using ChangeSelectedIndex instead of the base method
            which only sets the SelectedIndex, which isn't enough for us
            </summary>
            <param name="sender">The scrollbar</param>
            <param name="sea">Params used to find out more about the scroll event</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.Clear">
            <summary>
            Overridden to reset the top visible item when clearing
            otherwise, the list gets into some really weird state
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.GetTotalHeight">
            <summary>
            Gets the height, including padding, of every item in the list
            </summary>
            <returns>The total height</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.GetHeightForItems(System.Int32,System.Int32)">
            <summary>
            Gets the height of the items from the startindex to the stopindex
            Includes padding
            </summary>
            <param name="startIndex">Start calculating height from this item</param>
            <param name="stopIndex">Stop calculating height at this item</param>
            <returns>The calculated height</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.IsTotallyVisible(System.Int32)">
            <summary>
            Determines if an item is totally visible given the current _topVisibleItem
            </summary>
            <param name="index">Index of the item to check</param>
            <returns>True if the item is totally visible, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.IsPartiallyVisible(System.Int32)">
            <summary>
            Determines if an item is partially visible given the current _topVisibleItem
            </summary>
            <param name="index">Index of the item to check</param>
            <returns>True if the item is partially visible, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VariableItemList.ApplyItemHeight(SnapStream.ViewScape.Widgets.BaseListItem,System.Int32,System.Boolean)">
            <summary>
            If the item has no height specified, we assign it the given height
            </summary>
            <param name="item">Item to adjust</param>
            <param name="height">Height to assign to the item if the item has no height</param>
            <param name="isHeightRelative">True if the height is relative, false if it is absolute</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.SelectedItem">
            <summary>
            The currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.SelectedIndex">
            <summary>
            Index of the currently selected item
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.GridPadding">
            <summary>
            Percent of the height (between 0 and 1) for padding 
            on all four borders and in between items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.GridPaddingPixels">
            <summary>
            Value in pixels for padding on all four borders and in between items
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.ItemWidth">
            <summary>
            Width of the item based on the padding
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.DefaultItemHeight">
            <summary>
            Height for items added with no height set
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.IsDefaultHeightRelative">
            <summary>
            Flag to apply the default height as a relative or absolute height
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.UpKeys">
            <summary>
            The key codes that scroll up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.DownKeys">
            <summary>
            The key codes that scroll down in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.PageUpKeys">
            <summary>
            The key codes that page up in the list
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VariableItemList.PageDownKeys">
            <summary>
            The key codes that page down in the list
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.FilterClassID">
            <summary>
            Contains the class ids of the filters needed in the video player
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.DVD_Navigator">
            <summary>
            The CLSID of the DVD Navigator filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.Line21_Decoder">
            <summary>
            The CLSID of the default Line21 Decoder filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.Overlay_Mixer">
            <summary>
            The CLSID of the Overlay Mixer filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.Overlay_Mixer2">
            <summary>
            The CLSID of the Overlay Mixer2 filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.DSound_Renderer">
            <summary>
            The CLSID of the Default DirectSound Renderer filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.Video_Renderer">
            <summary>
            The CLSID of the Default Video Renderer filter
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.FilterClassID.Roxio_Video_Decoder">
            <summary>
            The CLSID of the Roxio Video Decoder filter
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.Volume">
            <summary>
            Displays the current volume and allows the user to change it with the mouse
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Volume._volumeKnob">
            <summary>
            The window that contains our volume knob
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Volume._minVolume">
            <summary>
            The skin location for volume knob at the minimum volume value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Volume._maxVolume">
            <summary>
            The skin location for the volume knob at the maximum volume value
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Volume._useSystemVolume">
            <summary>
            True if we should attach to the system volume event handler
            False if we are attaching to the application volume event handler
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.Volume._volumeChangedHandler">
            <summary>
            Reference to our volume changed handler used to switch which event we are handling
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.#ctor">
            <summary>
            Creates our volume control
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.CanHide">
            <summary>
            Tells the consumer whether we can be hidden
            </summary>
            <returns>True IFF we can be hidden</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.SetTimeout">
            <summary>
            Enables timeout and resets the timer
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.IncreaseVolume">
            <summary>
            Tries to increase the volume
            </summary>
            <returns>True IFF the volume was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.DecreaseVolume">
            <summary>
            Tries to decrease the volume
            </summary>
            <returns>True IFF the volume was changed</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Synchronizes our visuals with the current volume
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse down event
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse down position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse move event
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the new mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse up event
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mosue up position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.RaiseTimeoutEvent">
            <summary>
            Overridden to fade out when we've timed out
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.SyncVolume(System.Int32)">
            <summary>
            Repaints the volume knob with the give volume
            </summary>
            <param name="volume">0 to 100 volume level</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.SyncVolume(System.Drawing.Point,System.Boolean)">
            <summary>
            Updates the application volume given the specified mouse position
            </summary>
            <param name="pos">Position to use in determining the volume</param>
            <param name="playSound">True IFF we want to play a sound to signal the volume change</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.Volume.OnVolumeChanged(System.Object,SnapStream.ViewScape.Services.VolumeEventArgs)">
            <summary>
            Handles the application volume changed event
            </summary>
            <param name="sender">Hopefully the sound cache singleton</param>
            <param name="vea">Contains the volume and mute values</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.VolumeKnob">
            <summary>
            The window that contains our volume knob
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.MinVolumeX">
            <summary>
            The skin x location for volume knob at the minimum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.MinVolumeY">
            <summary>
            The skin y location for volume knob at the minimum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.MaxVolumeX">
            <summary>
            The skin x location for volume knob at the maximum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.MaxVolumeY">
            <summary>
            The skin y location for volume knob at the maximum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.ScaledMinVolume">
            <summary>
            The scaled location for volume knob at the minimum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.ScaledMaxVolume">
            <summary>
            The scaled location for volume knob at the maximum volume value
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.Volume.UseSystemVolume">
            <summary>
            True IFF we want to tie this volume to the system volume instead
            of the app volume
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VolumeListItem">
            <summary>
            List item that displays text on the left half of the item 
            while displaying a volume control on the right half.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeListItem._volume">
            <summary>
            Object that displays and controls the system volume settings
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeListItem.#ctor">
            <summary>
            Creates a new list item that contains a volume control
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeListItem.SetBoundsInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sizes the text box to the left half of the item and the volume control to the right half
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeListItem.Volume">
            <summary>
            Object that displays and controls the system volume settings
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeListItem.Selected">
            <summary>
            Overridden to handle background images on ourself and our child elements
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VolumeSelector">
            <summary>
            A volume slider surrounded by an up button and a down button
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._incButton">
            <summary>
            Button that increases the volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._decButton">
            <summary>
            Button that decreases the volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._volume">
            <summary>
            The underlying volume object that we connect with
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._slider">
            <summary>
            The window that contains our slider image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._highlight">
            <summary>
            The window that contains our highlight image
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._volumeMinPercent">
            <summary>
            The percent of my width from the left edge for the location
            of the minimum volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._volumeMaxPercent">
            <summary>
            The percent of my width from the right edge for the location
            of the maximum volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._knobHeightPercent">
            <summary>
            The percent of my height that serves as the width and height of the volume knob
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._incKeys">
            <summary>
            Key codes that increase the volume
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VolumeSelector._decKeys">
            <summary>
            Key codes that decrease the volume
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.#ctor">
            <summary>
            Creates a new volume selector
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to handle our volume up and down keys
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the key code</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes our internal items since we can't skin list items easily, yet
            </summary>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.IncVolume">
            <summary>
            Increases the volume
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.DecVolume">
            <summary>
            Decreases the volume
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.incButton_Clicked(System.Object,System.EventArgs)">
            <summary>
            Handles our increment volume button click
            </summary>
            <param name="sender">The inc volume button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VolumeSelector.decButton_Clicked(System.Object,System.EventArgs)">
            <summary>
            Handles our decrement volume button click
            </summary>
            <param name="sender">The dec volume button</param>
            <param name="e">Don't care</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.Selected">
            <summary>
            Whether this selector is selected
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.IncButton">
            <summary>
            Button that increases the volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.DecButton">
            <summary>
            Button that decreases the volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.Volume">
            <summary>
            The underlying volume object that we connect with
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.Slider">
            <summary>
            The window that contains our slider image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.Highlight">
            <summary>
            The window that contains our highlight image
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.KnobImage">
            <summary>
            The image file for the volume knob
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.VolumeMinPercent">
            <summary>
            The percent of my width from the left edge for the location
            of the minimum volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.VolumeMaxPercent">
            <summary>
            The percent of my width from the right edge for the location
            of the maximum volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.KnobHeightPercent">
            <summary>
            The percent of my height that serves as the width and height of the volume knob
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.IncKeys">
            <summary>
            Key codes that increase the volume
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VolumeSelector.DecKeys">
            <summary>
            Key codes that decrease the volume
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VScrollBar">
            <summary>
            A simple vertical scrollbar
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VScrollBar._indicatorPad">
            <summary>
            Pads the indicator image inside the non-visible region
            by this value times the width
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.#ctor">
            <summary>
            Creates a new vertical scrollbar
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse down events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Holds the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse move events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles our mouse up events
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.FrameMove(System.DateTime)">
            <summary>
            The arrow backgrounds are always drawn square, with the exception of
            some boundary safe calculations in the case of really fat/wide scrollbars.
            You shouldn't make fat scrollbars anyway because they look ugly.
            </summary>
            <param name="currentTime">Time stamp to use for animations</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.VScrollBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets defaults for our button placement
            </summary>
            <param name="x">
            The x coord of the new bounds
            </param>
            <param name="y">
            The y coord of the new bounds
            </param>
            <param name="width">
            The width of the new bounds
            </param>
            <param name="height">
            The height of the new bounds
            </param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VScrollBar.IndicatorPad">
            <summary>
            Pads the indicator image inside the non-visible region
            by this value times the width
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.VScrollBar.EffectiveNonVisibleRegion">
            <summary>
            Calculates the non-visible region that we can paint in, given
            the indicator pad value
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.SmartKeyEventArgs">
            <summary>
            Overridden to provide another flag to signal that processing should stop
            with this application (no other app or activex control can have this message)
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SmartKeyEventArgs.ShouldContinueProcessing">
            <summary>
            Determines if this message should be proccessed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.SmartKeyEventArgs.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Creates a new set of args from the given key code
            </summary>
            <param name="keyData">The key code</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.SmartKeyEventArgs.ContinueProcessing">
            <summary>
            Indicates whether further processing of this message should be halted.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerControlArgs">
            <summary>
            Encapsulates data for player controls to be added and removed from the parent form
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerControlArgs.TheControl">
            <summary>
            The control tied to this event
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.PlayerControlArgs.FullScreen">
            <summary>
            Whether the control is a full-screen widget
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.PlayerControlEventHandler">
            <summary>
            Template for handling a player control event
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.VideoActiveMode">
            <summary>
            Specifies different modes of power-management overrides
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoActiveMode.Always">
            <summary>
            The application is considered "active" all the time
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.VideoActiveMode.VideoAndSlideShow">
            <summary>
            The application is considered "active" only while playing slideshows or videos
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.ImageAngle">
            <summary>
            Specifies which angle to rotate an image by
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ImageAngle.None">
            <summary>
            No angle
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ImageAngle.RotateCW90">
            <summary>
            Rotate the image clockwise by 90 degrees
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ImageAngle.Rotate180">
            <summary>
            Rotate the image 180 degrees
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.ImageAngle.RotateCCW90">
            <summary>
            Rotate the image counter-clockwise by 90 degrees
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.CompletionPhase">
            <summary>
            An enum that determines when a certain completion action should be run
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CompletionPhase.None">
            <summary>
            Specifies that an action should not be run.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CompletionPhase.Commit">
            <summary>
            Specifies that an action should be run during the commit phase of the wizard.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CompletionPhase.Exit">
            <summary>
            Specifies that an action should be run when the application exits.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CompletionPhase.WhenActivated">
            <summary>
            Specifies that an action should be run whenever this page is activated.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.CompletionPhase.Always">
            <summary>
            Specifies that an action should be run during every phase.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardCompletePage">
            <summary>
            Provides a general purpose wizard completion page
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardCompletePage.ActionProperty">
            <summary>
            The "Action" property determines the action that should be executed for an item in the list
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardCompletePage.CompletionPhaseProperty">
            <summary>
            The "CompletionPhase" property determines when the action for an item should be executed
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardCompletePage._options">
            <summary>
            The list of options the user may choose from to complete the setup process
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardCompletePage.#ctor">
            <summary>
            Creates a new WizardCompletePage
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardCompletePage.Commit">
            <summary>
            Overriden to run any actions that should execute during the commit phase
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardCompletePage.OnApplicationExit(System.Object,System.EventArgs)">
            <summary>
            Runs any actions that should execute before application shutdown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardCompletePage.OnItemActivated(System.Object,SnapStream.ViewScape.Widgets.ItemActivatedArgs)">
            <summary>
            Executes any actions that should be run when an item is selected
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardCompletePage.ExecuteActions(SnapStream.ViewScape.Widgets.CompletionPhase)">
            <summary>
            Executes actions given the current completion phase and the CompletionPhase flags specified
            on each list item
            </summary>
            <param name="phase"></param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardCompletePage.Options">
            <summary>
            Gets / sets the list of options the user may select from.  This may be any list type.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardButton">
            <summary>
            Determines the set of enabled buttons on the <see cref="T:SnapStream.ViewScape.Widgets.WizardFrame">WizardFrame</see>.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.None">
            <summary>
            Specifies that no buttons should be enabled.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.Back">
            <summary>
            Specifies that the back button should be enabled.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.Next">
            <summary>
            Specifies that the next button should be enabled.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.Finish">
            <summary>
            Specifies that the finish button should be enabled.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.DisabledFinish">
            <summary>
            Specifies that the finish button should be visible but disabled.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.DefaultForPage">
            <summary>
            Specifies that the set of enabled buttons depends on the position of this page in the
            wizard page sequence.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardButton.Unknown">
            <summary>
            Specifies that the set of enabled buttons is unknown.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardState">
            <summary>
            Determines the state of the wizard.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardState.Running">
            <summary>
            Specifies that the wizard is running.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardState.Finished">
            <summary>
            Specifies that the wizard has completed.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardState.Canceled">
            <summary>
            Specifies that the wizard has been canceled.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardFrame">
            <summary>
            Manages a set of <see cref="T:SnapStream.ViewScape.Widgets.WizardPage">WizardPage</see> ojects and controls navigation for the wizard.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardFrame.NavigateNextCommand">
            <summary>
            The command that should be fired when the wizard should navigate to the next page in its sequence.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardFrame.NavigateBackCommand">
            <summary>
            The command that should be fired when the wizard should navigate to the previous page in its sequence.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardFrame.NavigateToCommand">
            <summary>
            The command that should be fired when the wizard should navigate to a specific page in its sequence.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardFrame.FinishCommand">
            <summary>
            The command that should be fired when the wizard should finish.
            </summary>
        </member>
        <member name="F:SnapStream.ViewScape.Widgets.WizardFrame.CancelCommand">
            <summary>
            The command that should be fired when the wizard should be canceled.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.#ctor">
            <summary>
            Initializes a new instance of the WizardFrame class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.NavigateNext">
            <summary>
            Navigates to the next page in the WizardFrame's page sequence.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.NavigateBack">
            <summary>
            Navigates to the previous page in the WizardFrame's page sequence.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.NavigateTo(System.String)">
            <summary>
            Navigates to a page based on the page's id.
            </summary>
            <param name="id">The id of the page to navigate to</param>
            <returns>True if the navigation succeeded, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.NavigateTo(SnapStream.ViewScape.Widgets.PageInfo)">
            <summary>
            Navigates to a page.
            </summary>
            <param name="pi">The page to navigate to</param>
            <returns>True if the navigation succeeded, false otherwise</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.Finish">
            <summary>
            Finishes this wizard and commits any changes that the <see cref="T:SnapStream.ViewScape.Widgets.WizardPage">WizardPages</see> may
            have made.
            </summary>
            <remarks>
            This method may fail if any pages report that their state is invalid.
            </remarks>
            <returns>True if the wizard was successfully finished, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.Cancel">
            <summary>
            Cancels this wizard and discards any changes that the <see cref="T:SnapStream.ViewScape.Widgets.WizardPage">WizardPages</see> may
            have made.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.GenerateSummary">
            <summary>
            Generates an ArrayList of summary items which is suitable for display in a <see cref="T:SnapStream.ViewScape.Widgets.TextPane">TextPane</see>.
            </summary>
            <returns>The array of items.  This will include both strings and <see cref="T:SnapStream.ViewScape.Widgets.TextPane.TextFormatter">TextFormatters</see>.</returns>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.EnterModal">
            <summary>
            Notifies this wizard that a modal context has been entered.  Navigation is disabled when
            the user is in a modal context.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.LeaveModal">
            <summary>
            Notifies this wizard that a modal context has been left.  Navigation is disabled when
            the user is in a modal context.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.EndDeferLoad">
            <summary>
            Supports the markup model.  Do not call this method directly, it is called by the <see cref="T:SnapStream.Serialization.Parser">Parser</see>
            to notify this object that its loading has completed.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.DeferLoad">
            <summary>
            Supports the markup model.  Do not call this method directly, it is called by the <see cref="T:SnapStream.Serialization.Parser">Parser</see>
            to notify this object that its has started loading the object from markup.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.OnSSMsg(SnapStream.ViewScape.Widgets.SSMsgEvent)">
            <summary>
            Overridden to handle mouse activation and deactivation.
            </summary>
            <param name="msg">The event parameters</param>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardFrame.FrameMove(System.DateTime)">
            <summary>
            Overridden to support animation.
            </summary>
            <param name="now">The current time</param>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.PageX">
            <summary>
            Gets or sets the X coordinate of wizard pages in this WizardFrame.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.PageY">
            <summary>
            Gets or sets the Y coordinate of wizard pages in this WizardFrame.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.PageWidth">
            <summary>
            Gets or sets the width of wizard pages in this WizardFrame.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.PageHeight">
            <summary>
            Gets or sets the height of wizard pages in this WizardFrame.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.WizardState">
            <summary>
            Gets the state of this wizard.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.Heading">
            <summary>
            Gets the TextWindow that is used to display the heading for all pages.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.DefaultHeading">
            <summary>
            Gets or sets the default heading to use when a page does not specify a heading of its own.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SubHeading">
            <summary>
            Gets the TextWindow object that is used to display the subheading for all pages.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.DefaultSubHeading">
            <summary>
            Gets or set the default sub heading to use when a page does not specify a sub heading of its own.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.HeadingImage">
            <summary>
            Gets the Window object that displays the heading image.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.DefaultHeadingImage">
            <summary>
            Gets or sets the default heading image to use when a page does not specify a heading image of its own.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.BackButton">
            <summary>
            Gets the back button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.BackButtonText">
            <summary>
            Gets or sets the text of the back button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.DefaultInputContext">
            <summary>
            Gets or sets the default input context to use when a page does not specify an input context of its own.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.NextButton">
            <summary>
            Gets the next button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.NextButtonText">
            <summary>
            Gets or sets the text of the next button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.FinishButton">
            <summary>
            Gets the finish button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.FinishButtonText">
            <summary>
            Gets or sets the text of the finish button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CancelButton">
            <summary>
            Gets the cancel button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CancelButtonText">
            <summary>
            Gets or sets the text of the cancel button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.Pages">
            <summary>
            Gets the PageCollection object that maintains information about each of the pages in the wizard.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.StartPage">
            <summary>
            Gets or sets the id of the page that should start the wizard.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CurrentPageIndex">
            <summary>
            Gets the index of the current wizard page.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CurrentPage">
            <summary>
            Gets the current page as a Window.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CurrentWizardPage">
            <summary>
            Gets the current WizardPage.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.CancelConfirmDialog">
            <summary>
            Gets the cancel confirmation dialog box.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.IsClosing">
            <summary>
            Gets a value indicating whether or not this WizardFrame is closing.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.StatusFormat">
            <summary>
            Gets or sets the status format string which is used to populate the <see cref="P:SnapStream.ViewScape.Widgets.WizardFrame.Status">Status</see> window.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.Status">
            <summary>
            Gets the status window.
            </summary>
            <remarks>
            The status window gives the user an indication of where they are in the wizard and
            how much more there is to do.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SideNextButtonGlow">
            <summary>
            Gets or sets the glowing side next button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SideBackButtonGlow">
            <summary>
            Gets or sets the glowing side back button.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SideNextButton">
            <summary>
            Gets or sets the side next button.
            </summary>
            <remarks>
            This window is overlayed on top of the glowing next button ( whose alpha is animated ) to
            create a glowing effect for the button.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SideBackButton">
            <summary>
            Gets or set the side back button.
            </summary>
            <remarks>
            This window is overlayed on top of the glowing back button ( whose alpha is animated ) to
            create a glowing effect for the button.
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.GlowAnimator">
            <summary>
            Gets the animation object used to animate the glowing navigation buttons.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.GlowSpan">
            <summary>
            Gets or sets the timespan over which the glowing navigation buttons should be animated in <see cref="P:System.TimeSpan.Ticks">ticks</see>.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.SummaryFormat">
            <summary>
            Gets or sets the format string that will be used when the wizard generates a summary of all
            the actions it will take.
            </summary>
            <remarks>
            This string specified by this summary format will be at the very top of the summary page so it
            is a good place to put a general heading such as "The wizard will perform the following tasks".
            </remarks>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardFrame.EnabledButtons">
            <summary>
            Gets or sets the currently enabled buttons.
            </summary>
            <remarks>
            Do not set this property to either <see cref="F:SnapStream.ViewScape.Widgets.WizardButton.None">None</see>, <see cref="F:SnapStream.ViewScape.Widgets.WizardButton.DefaultForPage">DefaultForPage</see>, or <see cref="F:SnapStream.ViewScape.Widgets.WizardButton.Unknown">Unknown</see>.
            </remarks>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.WizardFrame.Finished">
            <summary>
            Occurs when the wizard is finished by the user.
            </summary>
        </member>
        <member name="E:SnapStream.ViewScape.Widgets.WizardFrame.Canceled">
            <summary>
            Occurs when the wizard is canceled by the user.
            </summary>
        </member>
        <member name="T:SnapStream.ViewScape.Widgets.WizardSummaryPage">
            <summary>
            Generates a summary that lists the details of the actions the wizard will take when finished.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardSummaryPage.#ctor">
            <summary>
            Initializes a new instance of the WizardSummaryPage class.
            </summary>
        </member>
        <member name="M:SnapStream.ViewScape.Widgets.WizardSummaryPage.Activate">
            <summary>
            Overridden to generate and display the summary for the <see cref="T:SnapStream.ViewScape.Widgets.WizardFrame">wizard</see>.
            </summary>
        </member>
        <member name="P:SnapStream.ViewScape.Widgets.WizardSummaryPage.TextPane">
            <summary>
            Gets the TextPane where the summary items will be displayed.
            </summary>
        </member>
    </members>
</doc>
