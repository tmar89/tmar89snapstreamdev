<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnapStream</name>
    </assembly>
    <members>
        <member name="T:SnapStream.Convert">
            <summary>
            Performs common conversions.
            </summary>
        </member>
        <member name="M:SnapStream.Convert.#ctor">
            <summary>
            Creates a new Convert object
            </summary>
        </member>
        <member name="M:SnapStream.Convert.ToQSEncodedString(System.String)">
            <summary>
            Encodes a string into a format that can be passed in the query string
            </summary>
            <param name="stringToEncode">String to encode</param>
            <returns>Encoded string</returns>
        </member>
        <member name="M:SnapStream.Convert.FromQSEncodedString(System.String)">
            <summary>
            Decodes an encoded string into a plain text string
            </summary>
            <param name="stringToDecode">String to decode</param>
            <returns>Plain text string</returns>
        </member>
        <member name="M:SnapStream.Convert.Asc(System.String)">
            <summary>
            Returns the ascii integer value of a specified character
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Convert.Chr(System.Int32)">
            <summary>
            Returns the char representation of a raw ascii integer value
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:SnapStream.GetValueOverride">
            <summary>
            Represents the method that will implement the GetValueOverride callback of PropertyMetadata
            </summary>
        </member>
        <member name="T:SnapStream.SetValueOverride">
            <summary>
            Represents the method that will implement the SetValueOverride callback of PropertyMetadata
            </summary>
        </member>
        <member name="T:SnapStream.PropertyInvalidatedCallback">
            <summary>
            Represents the method that will implement the PropertyInvalidatedCallback callback of PropertyMetadata
            </summary>
        </member>
        <member name="T:SnapStream.ReadLocalValueOverride">
            <summary>
            Represents the method that will implement the ReadLocalValueOverride callback of PropertyMetadata
            </summary>
        </member>
        <member name="T:SnapStream.WriteLocalValueOverride">
            <summary>
            Represents the method that will implement the WriteLocalValueOverride callback of PropertyMetadata
            </summary>
        </member>
        <member name="T:SnapStream.PropertyMetadata">
            <summary>
            Supplies metadata for a DependencyProperty.
            </summary>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor">
            <summary>
            Creates a new PropertyMetadata
            </summary>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.GetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.GetValueOverride,SnapStream.SetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
            <param name="setValueOverride">The delegate that should be invoked to override the setting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object,System.Boolean)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
            <param name="readOnly">Specifies whether or not this DependencyProperty should be readonly</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object,System.Boolean,SnapStream.PropertyInvalidatedCallback,SnapStream.GetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
            <param name="readOnly">Specifies whether or not this DependencyProperty should be readonly</param>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object,SnapStream.PropertyInvalidatedCallback)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object,SnapStream.PropertyInvalidatedCallback,SnapStream.GetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(System.Object,SnapStream.PropertyInvalidatedCallback,SnapStream.GetValueOverride,SnapStream.SetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="defaultValue">The default value this DependencyProperty should have</param>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
            <param name="setValueOverride">The delegate that should be invoked to override the setting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.PropertyInvalidatedCallback)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.PropertyInvalidatedCallback,SnapStream.GetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.PropertyInvalidatedCallback,SnapStream.GetValueOverride,SnapStream.SetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="propertyInvalidatedCallback">The delegate that should be invoked when the DependencyProperty is invalidated</param>
            <param name="getValueOverride">The delegate that should be invoked to override the getting of a property</param>
            <param name="setValueOverride">The delegate that should be invoked to override the setting of a property</param>
        </member>
        <member name="M:SnapStream.PropertyMetadata.#ctor(SnapStream.SetValueOverride)">
            <summary>
            Creates a new PropertyMetadata
            </summary>
            <param name="setValueOverride">The delegate that should be invoked to override the setting of a property</param>
        </member>
        <member name="P:SnapStream.PropertyMetadata.DefaultValue">
            <summary>
            Gets or sets the default value of the property
            </summary>
        </member>
        <member name="P:SnapStream.PropertyMetadata.GetValueOverride">
            <summary>
            Gets or sets a callback that will be invoked before looking up the value of a DependencyProperty.
            </summary>
            <remarks>
            If this member is specified the DepenendencyObject will not attempt to get the value of
            the DependencyProperty specified in the GetValue method from its local cache.  The called
            function can make a call to GetValueBase to retrieve the property value from the local cache.
            </remarks>
        </member>
        <member name="P:SnapStream.PropertyMetadata.SetValueOverride">
            <summary>
            Gets or sets a callback that will be invoked before setting the value of a DependencyProperty.
            </summary>
            <remarks>
            If this member is specified the DepenendencyObject will not attempt to write the value
            specified in the SetValue method to its local cache.  The called function can make a call
            to SetValueBase to store the property value in the local cache.
            </remarks>
        </member>
        <member name="P:SnapStream.PropertyMetadata.PropertyInvalidatedCallback">
            <summary>
            Gets or sets a callback that will be invoked when the DependencyProperty is changed.
            </summary>
        </member>
        <member name="P:SnapStream.PropertyMetadata.ReadLocalValueOverride">
            <summary>
            Gets or sets a callback that will be invoked when a value is read from the local cache
            </summary>
        </member>
        <member name="P:SnapStream.PropertyMetadata.WriteLocalValueOverride">
            <summary>
            Gets or sets a callback that will be invoked when a value is written to the local cache
            </summary>
        </member>
        <member name="P:SnapStream.PropertyMetadata.ReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the DependencyProperty is readonly
            </summary>
        </member>
        <member name="T:SnapStream.DependencyObject">
            <summary>
            DependencyObject allows arbitrary strongly typed data to be associated with any object that derives
            from it.  This allows an object to set properties on another object for its own use.
            </summary>
            <remarks>
            DependencyObject allows a loose coupling to exist between components that would otherwise be difficult
             to achieve or type/implementation specific.
            </remarks>
        </member>
        <member name="F:SnapStream.DependencyObject.EmptyValue">
            <summary>
            Represents a value that that was cleared.
            </summary>
        </member>
        <member name="M:SnapStream.DependencyObject.#ctor">
            <summary>
            Creates a new DependencyObject.
            </summary>
        </member>
        <member name="M:SnapStream.DependencyObject.ClearValue(SnapStream.DependencyProperty)">
            <summary>
            Removes a property from this object.
            </summary>
            <remarks> 
            After removing a property the default value for that property will always be returned.
            </remarks>
            <param name="dp">The DependencyProperty to clear</param>
        </member>
        <member name="M:SnapStream.DependencyObject.GetValue(SnapStream.DependencyProperty)">
            <summary>
            Retrieves the value of the specified property.
            </summary>
            <remarks>
            The return value will be of the type specified in the metadata for the DependencyProperty.
            </remarks>
            <param name="dp">The property whose value should be returned</param>
            <returns>The value of the property</returns>
        </member>
        <member name="M:SnapStream.DependencyObject.GetValueBase(SnapStream.DependencyProperty)">
            <summary>
            Retrieves the value of the specified property.
            </summary>
            <remarks>
            This method does not invoke the GetValueOverride callback from the DependencyProperty's PropertyMetadata.
            The return value will be of the type specified in the metadata for the DependencyProperty.
            </remarks>
            <param name="dp">The property whose value should be returned</param>
            <returns>The value of the property</returns>
        </member>
        <member name="M:SnapStream.DependencyObject.GetValueCore(SnapStream.DependencyProperty,System.Object,SnapStream.PropertyMetadata)">
            <summary>
            Retrieves the value of the specified property.
            </summary>
            <remarks>This method should be overridden if the object wants to customize processing of GetValue.</remarks>
            <param name="dp">The property whose value should be returned</param>
            <param name="baseValue">The base value of the DependencyProperty</param>
            <param name="metadata">The metadata associated with the DependencyProperty</param>
            <returns>The value of the property</returns>
        </member>
        <member name="M:SnapStream.DependencyObject.InvalidateProperty(SnapStream.DependencyProperty)">
            <summary>
            Invalidates the property.
            </summary>
            <param name="dp">The property to invalidate</param>
        </member>
        <member name="M:SnapStream.DependencyObject.OnPropertyInvalidated(SnapStream.DependencyProperty,SnapStream.PropertyMetadata)">
            <summary>
            Called when a property gets invalidated.
            </summary>
            <param name="dp">The property that was invalidated</param>
            <param name="metadata">The metadata associated with the property</param>
        </member>
        <member name="M:SnapStream.DependencyObject.ReadLocalValue(SnapStream.DependencyProperty)">
            <summary>
            Retrieves the value of a property that exists in the property cache.
            </summary>
            <param name="dp">The property to read</param>
            <returns>The current cached value of the property if it exists or DependencyObject.EmptyValue otherwise.</returns>
        </member>
        <member name="M:SnapStream.DependencyObject.SetValue(SnapStream.DependencyProperty,System.Object)">
            <summary>
            Sets the value of a property.
            </summary>
            <exception cref="T:System.ArgumentException">the value is not compatible with the DependencyProperty</exception>
            <param name="dp">The property whose value should be set</param>
            <param name="value">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.DependencyObject.SetValueBase(SnapStream.DependencyProperty,System.Object)">
            <summary>
            Sets the value of the specified property.
            </summary>
            <exception cref="T:System.ArgumentException">the value is not compatible with the DependencyProperty</exception>
            <remarks>
            This method does not invoke the SetValueOverride callback from the DependencyProperty's PropertyMetadata.
            </remarks>
            <param name="dp">The property whose value should be returned</param>
            <param name="value">The value to set the DependencyProperty to</param>
        </member>
        <member name="T:SnapStream.ValidateValueCallback">
            <summary>
            Represents the method that will implement the ValidateValueCallback callback of DependencyProperty
            </summary>
        </member>
        <member name="T:SnapStream.DependencyProperty">
            <summary>
            DependencyProperty provides a mechanism for associating arbitrary data with a DependencyObject.
            </summary>
            <remarks>
            A DependencyProperty is a singleton object with respect to the property's name and owner type
            which means that any given type can only register one DependencyProperty with a given name.
            Several common services can be built on top of the infrastructure provided by DependencyProperty such
            as data binding and state invalidation.  It is up to the consumers of DependencyProperty to implement
             these services.
            </remarks>
        </member>
        <member name="M:SnapStream.DependencyProperty.FromName(System.String,System.Type)">
            <summary>
            Finds a given DependencyProperty given it's name and the type of the owner
            </summary>
            <param name="name">The name of the property</param>
            <param name="ownerType">The type that owns the property</param>
            <returns>The property if it exists</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
            <summary>
            Registers an attached property.
            </summary>
            <remarks>
            In order for attached properties to be found by the parser the type must declare a
            public static method that has the form void Set{name}( DependencyObject, {propertyType} )
            and {propertyType} Get{name}( DependencyObject ).  If these are not provided
            DependencyObject.SetValue or DependencyObject.GetValue are used instead.
            </remarks>
            <param name="name">The name of the property to register</param>
            <param name="propertyType">The type of the property to register</param>
            <param name="ownerType">The type that owns the new DependencyProperty</param>
            <returns>The new DependencyProperty</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,SnapStream.PropertyMetadata)">
            <summary>
            Registers an attached property.
            </summary>
            <remarks>
            In order for attached properties to be found by the parser the type must declare a
            public static method that has the form void Set{name}( DependencyObject, {propertyType} )
            and {propertyType} Get{name}( DependencyObject ).  If these are not provided
            DependencyObject.SetValue or DependencyObject.GetValue are used instead.
            </remarks>
            <param name="name">The name of the property to register</param>
            <param name="propertyType">The type of the property to register</param>
            <param name="ownerType">The type that owns the new DependencyProperty</param>
            <param name="metadata">The metadata associated with this property</param>
            <returns>The new DependencyProperty</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Object)">
            <summary>
            Registers an attached property.
            </summary>
            <remarks>
            In order for attached properties to be found by the parser the type must declare a
            public static method that has the form void Set{name}( DependencyObject, {propertyType} )
            and {propertyType} Get{name}( DependencyObject ).  If these are not provided
            DependencyObject.SetValue or DependencyObject.GetValue are used instead.
            </remarks>
            <param name="name">The name of the property to register</param>
            <param name="propertyType">The type of the property to register</param>
            <param name="ownerType">The type that owns the new DependencyProperty</param>
            <param name="defaultValue">The defaultValue for this property</param>
            <returns>The new DependencyProperty</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,SnapStream.PropertyMetadata,SnapStream.ValidateValueCallback)">
            <summary>
            Registers an attached property.
            </summary>
            <remarks>
            In order for attached properties to be found by the parser the type must declare a
            public static method that has the form void Set{name}( DependencyObject, {propertyType} )
            and {propertyType} Get{name}( DependencyObject ).  If these are not provided
            DependencyObject.SetValue or DependencyObject.GetValue are used instead.
            </remarks>
            <param name="name">The name of the property to register</param>
            <param name="propertyType">The type of the property to register</param>
            <param name="ownerType">The type that owns the new DependencyProperty</param>
            <param name="metadata">The metadata associated with this property</param>
            <param name="validateValueCallback">The callback that should be invoked for validation</param>
            <returns>The new DependencyProperty</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.IsValidType(System.Object,System.Type)">
            <summary>
            Helper method that ensures that value is of the type indicated by propertyType
            </summary>
            <param name="value">The value whose type should be validated</param>
            <param name="propertyType">The type to validate against</param>
            <returns>true if value is an instance of propertyType otherwise false</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.#ctor(System.String,System.Type,System.Type,SnapStream.PropertyMetadata,SnapStream.ValidateValueCallback)">
            <summary>
            This constructor is private so that we can enforce singleton creation of DependencyProperty objects
            </summary>
        </member>
        <member name="M:SnapStream.DependencyProperty.IsValidType(System.Object)">
            <summary>
            Ensures that the specified object is valid given the type of the DependencyProperty
            </summary>
            <param name="value">The value whose type needs to be checked</param>
            <returns>true if value is an instance of PropertyType, false otherwise</returns>
        </member>
        <member name="M:SnapStream.DependencyProperty.IsValidValue(System.Object)">
            <summary>
            Ensures that the specified object is type valid as well as running the value
            through any validators to ensure that the value is valid at a higher level
            </summary>
            <param name="value">The value to validate</param>
            <returns>true if the object is valid, false otherwise</returns>
        </member>
        <member name="P:SnapStream.DependencyProperty.Metadata">
            <summary>
            Gets the default metadata that is associated with this property.
            </summary>
        </member>
        <member name="P:SnapStream.DependencyProperty.Name">
            <summary>
            Gets the name of this property
            </summary>
        </member>
        <member name="P:SnapStream.DependencyProperty.OwnerType">
            <summary>
            Get the type that owns this property
            </summary>
        </member>
        <member name="P:SnapStream.DependencyProperty.PropertyType">
            <summary>
            Gets the type of the property
            </summary>
        </member>
        <member name="P:SnapStream.DependencyProperty.ValidateValueCallback">
            <summary>
            Gets a callback that handles validation.
            </summary>
            <remarks>
            If this is unspecified then type compatibilty between PropertyType and the type of
            the value is enough to determine validity.
            </remarks>
        </member>
        <member name="T:SnapStream.DependencyProperty.Key">
            <summary>
            Represents a key into our internal property hashtable
            </summary>
        </member>
        <member name="T:SnapStream.StringTableItem">
            <summary>
            Represents an item in the StringTable
            </summary>
            <remarks>
            This class allows string tables to be built in markup.  In code you can simply use a
            StringTable as though it were a Hashtable.
            </remarks>
        </member>
        <member name="T:SnapStream.Serialization.IAddChild">
            <summary>
            IAddChild provides a generic way for the parser to add items to an object.
            Implement this interface when you can have children and want those to
            be accesible to the parser
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.IAddChild.AddChild(System.Object)">
            <summary>
            Adds a child to the object implementing this interface.  In your implementation
            of this method you can use the object's type to determine the appropriate action
            to take.
            </summary>
            <param name="o">the object to add</param>
        </member>
        <member name="M:SnapStream.Serialization.IAddChild.AddText(System.String)">
            <summary>
            Adds textual content to the object implementing this interface.  Most objects
            will not have textual content but those that do will get a notification
            every time new text is encountered which allows for complex flow based
            rendering of text in those objects where text and content can be freely mixed
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:SnapStream.StringTableItem.#ctor">
            <summary>
            Creates a new StringTableItem
            </summary>
        </member>
        <member name="F:SnapStream.StringTableItem.Id">
            <summary>
            The id for this item
            </summary>
        </member>
        <member name="F:SnapStream.StringTableItem.Value">
            <summary>
            The value for this item
            </summary>
        </member>
        <member name="T:SnapStream.StringTable">
            <summary>
            Provides a string table that can be used by the parser to perform string substitutions.
            </summary>
        </member>
        <member name="F:SnapStream.StringTable._global">
            <summary>
            The global StringTable.
            </summary>
        </member>
        <member name="M:SnapStream.StringTable.#ctor">
            <summary>
            Creates a new StringTable.
            </summary>
        </member>
        <member name="P:SnapStream.StringTable.Global">
            <summary>
            Gets or sets the global string table.
            </summary>
            <remarks>
            It is up to the application to set this if it wishes to use a global string table.
            </remarks>
        </member>
        <member name="P:SnapStream.StringTable.PropertyProvider">
            <summary>
            Gets or sets the string property provider.
            </summary>
            <remarks>
            If a string lookup fails then the type specified here will be queried for a public
            static string property with the same name as the requested id.
            </remarks>
        </member>
        <member name="P:SnapStream.StringTable.Item(System.String)">
            <summary>
            Gets or sets a string value by key
            </summary>
        </member>
        <member name="T:SnapStream.TypeConversion">
            <summary>
            Implements generic type conversion
            </summary>
        </member>
        <member name="M:SnapStream.TypeConversion.Convert(System.Object,System.Type)">
            <summary>
            Converts a specified value to the requested type
            </summary>
            <param name="valueToConvert">The value that should be converted</param>
            <param name="typeToConvertTo">The type to convert value to</param>
            <returns>The converted value if the conversion was sucessfull, null otherwise</returns>
        </member>
        <member name="M:SnapStream.TypeConversion.Convert(System.Object,System.Type,System.String)">
            <summary>
            Converts a specified value to the requested type
            </summary>
            <param name="valueToConvert">The value that should be converted</param>
            <param name="typeToConvertTo">The type to convert value to</param>
            <param name="baseUri">Specifies the BaseUri to use on objects that implement IUriContext</param>
            <returns>The converted value if the conversion was sucessfull, null otherwise</returns>
        </member>
        <member name="T:SnapStream.Logging">
            <summary>
            Provides runtime logging capabilities.
            </summary>
        </member>
        <member name="M:SnapStream.Logging.Initialize(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes the logging service.
            </summary>
            <param name="logDirectory">The directory where log files should be saved</param>
            <param name="logFilePrefix">The prefix that should be used for log files</param>
            <param name="appName">The name of the application using logging services</param>
            <param name="version">The version of the application using logging services</param>
            <param name="build">The build of the application using logging services</param>
            <param name="logMutexName">The name of the mutex that ensures mutally exclusive access to the log file</param>
        </member>
        <member name="M:SnapStream.Logging.Initialize(System.String,System.String)">
            <summary>
            Initializes the logging service.
            </summary>
            <param name="logDirectory">The directory where log files should be saved</param>
            <param name="appName">The name of the application using logging services</param>
        </member>
        <member name="M:SnapStream.Logging.WriteLog(System.String)">
            <summary>
            Writes a message to the application log.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:SnapStream.Logging.LogUnhandledException(System.String,System.Exception)">
            <summary>
            Logs an unhandled exception in the application log.
            </summary>
            <param name="location">An indication of where the exception was caught.  Usually a method name.</param>
            <param name="e">The exception to log</param>
        </member>
        <member name="T:SnapStream.Action.ActionState">
            <summary>
            Specifies the state of an Action.
            </summary>
        </member>
        <member name="F:SnapStream.Action.ActionState.Available">
            <summary>
            Indicates that the Action is available
            </summary>
        </member>
        <member name="F:SnapStream.Action.ActionState.Unavailable">
            <summary>
            Indicates that the Action is unavailable
            </summary>
        </member>
        <member name="T:SnapStream.Action.IAction">
            <summary>
            Provides the interface that executable objects should implement.
            </summary>
        </member>
        <member name="M:SnapStream.Action.IAction.Execute">
            <summary>
            Executes the action performed by the object.
            </summary>
        </member>
        <member name="P:SnapStream.Action.IAction.State">
            <summary>
            Gets the state of the action.
            </summary>
        </member>
        <member name="T:SnapStream.Action.ActionSequence">
            <summary>
            Allows a series of actions to be executed by a single action.
            </summary>
        </member>
        <member name="M:SnapStream.Action.ActionSequence.Execute">
            <summary>
            Executes the actions that are associated with this ActionSequence
            </summary>
        </member>
        <member name="M:SnapStream.Action.ActionSequence.AddChild(System.Object)">
            <summary>
            Adds an action to this ActionSequence
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:SnapStream.Action.ActionSequence.AddText(System.String)">
            <summary>
            Not Implemented
            </summary>
            <param name="text">The text to add</param>
        </member>
        <member name="P:SnapStream.Action.ActionSequence.State">
            <summary>
            Gets the state of the action.
            </summary>
            <remarks>
            If any of this ActionSequence's child actions are available then this ActionSequence will
            also be available.
            </remarks>
        </member>
        <member name="T:SnapStream.Action.RegistryStringValueConverter">
            <summary>
            Provides a TypeConverter for the RegistryStringValue class
            </summary>
        </member>
        <member name="M:SnapStream.Action.RegistryStringValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if a conversion to the specified type is possible.
            </summary>
            <remarks>
            Currently RegistryStringValue may only be converted to a String object.
            </remarks>
            <param name="context">The context</param>
            <param name="destinationType">The type to test for conversion to</param>
            <returns>True if the conversion is possible, false otherwise</returns>
        </member>
        <member name="T:SnapStream.Action.RegistryStringValue">
            <summary>
            Provides a means for accessing values from the registry.
            </summary>
        </member>
        <member name="M:SnapStream.Action.RegistryStringValue.#ctor">
            <summary>
            Initializes a new instance of the RegistryStringValue class.
            </summary>
        </member>
        <member name="M:SnapStream.Action.RegistryStringValue.ToString">
            <summary>
            Overriden to return the value of the registry entry identified by this RegistryStringValue object.
            </summary>
            <returns>The Value property.</returns>
        </member>
        <member name="P:SnapStream.Action.RegistryStringValue.BaseKey">
            <summary>
            Gets or sets the base key for the registry value.
            </summary>
        </member>
        <member name="P:SnapStream.Action.RegistryStringValue.SubKey">
            <summary>
            Gets or sets the sub key for the registry value.
            </summary>
        </member>
        <member name="P:SnapStream.Action.RegistryStringValue.ValueName">
            <summary>
            Gets or sets the name of the registry value.
            </summary>
        </member>
        <member name="P:SnapStream.Action.RegistryStringValue.Value">
            <summary>
            Gets the actual value of the registry entry identified by this RegistryStringValue object.
            </summary>
        </member>
        <member name="T:SnapStream.Action.LaunchApplication">
            <summary>
            Provides an action that will launch an application when it is executed.
            </summary>
        </member>
        <member name="F:SnapStream.Action.LaunchApplication.ExecuteCommand">
            <summary>
            Gets the "LaunchApplication.Execute" Command
            </summary>
            <remarks>
            This command is provided so that applications that have special requirements with respect to launching
            processes can hook into the process.  This might be used to pass additional command line options to
            the target application or to monitor the lifetime of an application.
            </remarks>
        </member>
        <member name="M:SnapStream.Action.LaunchApplication.#ctor">
            <summary>
            Initializes a new instance of the LaunchApplication class.
            </summary>
        </member>
        <member name="M:SnapStream.Action.LaunchApplication.Execute">
            <summary>
            Launches the specified application.
            </summary>
        </member>
        <member name="M:SnapStream.Action.LaunchApplication.ActualCommandLine">
            <summary>
            Gets the command line to use when launching the application.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SnapStream.Action.LaunchApplication.State">
            <summary>
            Gets the state of this action.
            </summary>
            <remarks>
            If the executable refered to by this object is found then the action will indicate that
            it is Available otherwise it will indicate that it is Unavailable.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.LaunchApplication.Path">
            <summary>
            Gets or sets the path to the executable.
            </summary>
        </member>
        <member name="P:SnapStream.Action.LaunchApplication.Directory">
            <summary>
            Gets or sets the directory that contains the executable to launch.
            </summary>
        </member>
        <member name="P:SnapStream.Action.LaunchApplication.Executable">
            <summary>
            Gets or sets the file name of the executable to launch.
            </summary>
        </member>
        <member name="P:SnapStream.Action.LaunchApplication.CommandLine">
            <summary>
            Gets or sets the command line to pass to the application.
            </summary>
        </member>
        <member name="T:SnapStream.Action.LaunchDefaultBrowser">
            <summary>
            Provides an action that will launch the user's default browser.
            </summary>
        </member>
        <member name="M:SnapStream.Action.LaunchDefaultBrowser.Execute">
            <summary>
            Launches the users default browser with the specified url.
            </summary>
        </member>
        <member name="P:SnapStream.Action.LaunchDefaultBrowser.State">
            <summary>
            Gets the state of the action.
            </summary>
            <remarks>
            This action is always Available.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.LaunchDefaultBrowser.Url">
            <summary>
            Gets or sets the url to browse to.
            </summary>
        </member>
        <member name="T:SnapStream.Action.ShellExecute">
            <summary>
            Provides an action that will launch a file through the Windows shell.
            </summary>
        </member>
        <member name="M:SnapStream.Action.ShellExecute.#ctor">
            <summary>
            Initializes a new instance of the ShellExecute class.
            </summary>
        </member>
        <member name="M:SnapStream.Action.ShellExecute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShellExecute class.
            </summary>
            <param name="path">The path to the item that should be opened</param>
        </member>
        <member name="M:SnapStream.Action.ShellExecute.Execute">
            <summary>
            Calls the Windows shell to execute the specified file.
            </summary>
        </member>
        <member name="P:SnapStream.Action.ShellExecute.State">
            <summary>
            Gets the state of this action.
            </summary>
            <remarks>
            This action is always Available.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.ShellExecute.Path">
            <summary>
            Gets or sets the path of the item to execute.
            </summary>
        </member>
        <member name="P:SnapStream.Action.ShellExecute.Operation">
            <summary>
            Gets or sets the operation to perform on the item.
            </summary>
            <remarks>
            This will usually be set to a shell verb like "open" or "print".  If nothing is specified the default
            "open" verb will be used.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.ShellExecute.Parameters">
            <summary>
            Gets or sets the parameters to pass while executing the item.
            </summary>
        </member>
        <member name="P:SnapStream.Action.ShellExecute.Directory">
            <summary>
            Gets or sets the directory to execute the item from.
            </summary>
        </member>
        <member name="T:SnapStream.Action.ExecuteCommand">
            <summary>
            Provides an action that executes a Command
            </summary>
        </member>
        <member name="M:SnapStream.Action.ExecuteCommand.#ctor">
            <summary>
            Initializes a new instance of the ExecuteCommand class.
            </summary>
        </member>
        <member name="M:SnapStream.Action.ExecuteCommand.#ctor(SnapStream.Commands.Command)">
            <summary>
            Initializes a new instance of the ExecuteCommand class.
            </summary>
            <param name="command">The command to execute</param>
        </member>
        <member name="M:SnapStream.Action.ExecuteCommand.#ctor(SnapStream.Commands.Command,System.Object)">
            <summary>
            Initializes a new instance of the ExecuteCommand class.
            </summary>
            <param name="command">The command to execute</param>
            <param name="data">The data to associate with the execution of the command</param>
        </member>
        <member name="M:SnapStream.Action.ExecuteCommand.Execute">
            <summary>
            Fires the command associated with the ExecuteCommand object.
            </summary>
        </member>
        <member name="P:SnapStream.Action.ExecuteCommand.State">
            <summary>
            Gets the state of the action.
            </summary>
            <remarks>
            This action is always available.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.ExecuteCommand.Command">
            <summary>
            Gets or sets the Command that should be fired by the object.
            </summary>
        </member>
        <member name="P:SnapStream.Action.ExecuteCommand.Data">
            <summary>
            Gets or sets the data to pass to the handler of the command.
            </summary>
        </member>
        <member name="T:SnapStream.Action.GenerateKeystroke">
            <summary>
            Provides an action that will send a keystroke to the active window.
            </summary>
        </member>
        <member name="M:SnapStream.Action.GenerateKeystroke.Execute">
            <summary>
            Sends the key sequence to the active window.
            </summary>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.State">
            <summary>
            Gets the state of the action.
            </summary>
            <remarks>
            This action is always Available.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Keys">
            <summary>
            Gets or sets the Keys value to send.
            </summary>
            <remarks>
            This property sets the key code as well as any modifier bits that should
            be sent.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Key">
            <summary>
            Gets or sets the Key value to send
            </summary>
            <remarks>
            This property sets only the key code and will not change any of the modifier bits.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Char">
            <summary>
            Sets the value to send as a character.
            </summary>
            <remarks>
            This property will properly convert the specified character to the correct
            key code and modifer bits so that the exact character specified here will be sent.
            </remarks>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Alt">
            <summary>
            Gets or sets whether Alt should be sent.
            </summary>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Shift">
            <summary>
            Gets or sets wheter Shift should be sent.
            </summary>
        </member>
        <member name="P:SnapStream.Action.GenerateKeystroke.Ctrl">
            <summary>
            Gets or sets whether Ctrl should be sent.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.Shared">
            <summary>
            Provides access to properties that are shared across SnapStream applications.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.Shared._thuggedValue">
            <summary>
            Default key value that was overwritten
            </summary>
        </member>
        <member name="F:SnapStream.Apps.Shared._globalProfile">
            <summary>
            The name of the global Firefly profile.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.Shared._mouseProfile">
            <summary>
            The name of the mouse Firefly profile.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.Shared._defaultProfile">
            <summary>
            The name of the default Firefly profile.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.Shared._profileExtension">
            <summary>
            The file extension for Firefly profiles.
            </summary>
        </member>
        <member name="M:SnapStream.Apps.Shared.AssociateFileType(System.String,System.String)">
            <summary>
            Associates a file type created by our installer to
            a specific extension
            </summary>
            <param name="extension">The file extension to be associated</param>
            <param name="fileType">The file type we created to be associated</param>
        </member>
        <member name="M:SnapStream.Apps.Shared.DissociateFileType(System.String)">
            <summary>
            Dissociates ourselves with the given extension
            </summary>
            <param name="extension">The file extension to dissociate from</param>
        </member>
        <member name="M:SnapStream.Apps.Shared.GetMCLFiles">
            <summary>
            Returns all of the MCL files in the shared location
            </summary>
            <returns>The array list of mcl file names</returns>
        </member>
        <member name="P:SnapStream.Apps.Shared.SharedAppDataDirectory">
            <summary>
            Gets the path to the shared application data directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.Shared.MCLDirectory">
            <summary>
            Gets the path to the MCL directory.
            </summary>
            <remarks>
            A MCL file is a Media Center Link file that acts as a shortcut.  Several SnapStream applications
            support MCL files and all of them read the MCL files from this directory.
            </remarks>
        </member>
        <member name="T:SnapStream.Apps.BeyondMedia">
            <summary>
            Provides access to propertes that are used by Beyond Media
            </summary>
        </member>
        <member name="M:SnapStream.Apps.BeyondMedia.GetReportCrashMessage">
            <summary>
            Gets a string that should be displayed to the end user in the case of an unexpected crash.
            </summary>
            <returns>The string that should be displayed to the end user when a crash is encountered</returns>
        </member>
        <member name="M:SnapStream.Apps.BeyondMedia.GetReportCrashCaption">
            <summary>
            Gets a string that should be used as the caption of the crash report dialog.
            </summary>
            <returns>The crash report caption</returns>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.VideoFileType">
            <summary>
            The video file association type for beyond media
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.AudioFileType">
            <summary>
            The audio file association type for beyond media
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.BeyondMediaExecutablePath">
            <summary>
            The path to the Beyond Media executable
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.InstallDirectory">
            <summary>
            The path to the Beyond Media install directory
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.StartupShortcutPath">
            <summary>
            Gets the path to the shortcut for Beyond Media in the Startup folder.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.AppDataDirectory">
            <summary>
            Gets the path of the application data directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.ShortcutsDirectory">
            <summary>
            Gets the path of the shortcuts directory.
            </summary>
            <remarks>
            The shortcuts directory is the place that Beyond Media loads shortcuts from for inclusion
            in the main menu.
            </remarks>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.ShortcutIconsDirectory">
            <summary>
            Gets the path of the shortcut icon cache directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.SkinsDirectory">
            <summary>
            Gets the path of the skins directory.
            </summary>
            <remarks>
            The skins directory is the repository for all Beyond Media skins.  Each skin has an xml file in
            this directory plus an additional directory containing screens and images also in this directory.
            </remarks>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.SoundsDirectory">
            <summary>
            Gets the path of the sounds directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.Version">
            <summary>
            Gets the installed version number of Beyond Media.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.Build">
            <summary>
            Gets the installed build number of Beyond Media.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.LogDirectory">
            <summary>
            Gets the path to the log directory.
            </summary>
            <remarks>
            The log directory is the place where all Beyond Media activity is logged.  Crashes and unexpected
            behavior are also logged here.
            </remarks>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.PluginsDirectory">
            <summary>
            Gets the path to the plugins directory.
            </summary>
            <remarks>
            The plugins directory contains all the plugins that Beyond Media will attempt to load.  Each plugin
            resides in its own child directory of the plugins directory and must contain a Plugins.xml file to
            be loaded by Beyond Media.
            </remarks>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.SetupDirectory">
            <summary>
            Gets the path to the Beyond Media Setup Wizard directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.PitchPageFinalDirectory">
            <summary>
            Gets the path to the pitch page directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.PitchPageDefaultDirectory">
            <summary>
            Gets the path to the pitch page directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.PitchPageDownloadDirectory">
            <summary>
            Gets the path to the pitch page directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.LoadingImage">
            <summary>
            Gets the path to the Beyond Media loading image.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.LoadingBarImage">
            <summary>
            Gets the path to the Beyond Media loading image.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.LoadingBarRect">
            <summary>
            Gets the Rectangle to use for the Beyond Media loading window.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.MutexName">
            <summary>
            Gets the name of the mutex that ensures Beyond Media is running as a singleton.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondMedia.SetupWizardMutexName">
            <summary>
            Gets the name of the mutex that enures the Beyond Media Setup Wizard is running as a singleton.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.BeyondTV">
            <summary>
            Provides access to propertes that are used by Beyond TV
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTV_REG_KEY">
            <summary>
            The registry key where Beyond TV information is stored.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTVLINK_REG_KEY">
            <summary>
            The registry key where Beyond TV Link information is stored.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTV_SUBKEY_INSTALLDIR">
            <summary>
            The name of the registry value where Beyond TV keeps its installation location.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTV_SUBKEY_AGENTEXE">
            <summary>
            The name of the registry value where Beyond TV keeps the executable name for the Beyond TV Agent.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTV_SUBKEY_GUIEXE">
            <summary>
            The name of the registry value where Beyond TV keeps the executable name for the Beyond TV Viewscape.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.BeyondTV.BEYONDTV_STARTUP_SHORTCUT">
            <summary>
            The file name of the Beyond TV startup shortcut that is placed in the Windows Startup folder.
            </summary>
        </member>
        <member name="M:SnapStream.Apps.BeyondTV.HasBeyondTV">
            <summary>
            Determines if Beyond TV is installed.
            </summary>
            <returns>True if Beyond TV is installed, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.Apps.BeyondTV.SupportsNoFocus">
            <summary>
            Determines if the version of Beyond TV that is installed supports command processing without
            taking focus.
            </summary>
            <returns>True if the version of Beyond TV that is installed supports focusless command processing, false otherwise.</returns>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BTVAgentExecutablePath">
            <summary>
            Gets the path to the Beyond TV agent executable.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BTVGUIExecutablePath">
            <summary>
            Gets the path to the Beyond TV GUI executable.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BTVLinkExecutablePath">
            <summary>
            Gets the path to the Beyond TV Link executable.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BTVInstallDirectory">
            <summary>
            Gets the path to the Beyond TV install directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BTVStartupShortcutPath">
            <summary>
            Gets the path to the shortcut for Beyond TV in the Startup folder.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.Version">
            <summary>
            Gets the installed version number of Beyond TV.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.BeyondTV.BuildNumber">
            <summary>
            Gets the installed build number of Beyond TV.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.Firefly">
            <summary>
            Provides access to propertes that are used by Firefly
            </summary>
        </member>
        <member name="P:SnapStream.Apps.Firefly.FireflyDocumentsDirectory">
            <summary>
            Gets the path to the Firefly data directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.Firefly.FireflyProfilesDirectory">
            <summary>
            Gets the path to the Firefly profiles directory.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.MCLEventArgs">
            <summary>
            Encapsulates any data needed for a MCL event
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCLEventArgs._pathName">
            <summary>
            The file name of the MCL
            </summary>
        </member>
        <member name="M:SnapStream.Apps.MCLEventArgs.#ctor(System.String)">
            <summary>
            Creates some mcl event arguments
            </summary>
            <param name="path">The filename of the mcl</param>
        </member>
        <member name="P:SnapStream.Apps.MCLEventArgs.PathName">
            <summary>
            The file name of the MCL
            </summary>
        </member>
        <member name="T:SnapStream.Apps.MCLEventHandler">
            <summary>
            Template for handling our mcl events
            </summary>
        </member>
        <member name="T:SnapStream.Apps.MCL">
            <summary>
            Contains the common functionality to interface with MCL files
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.ROOT">
            <summary>
            The root tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.NAME">
            <summary>
            The name tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.URL">
            <summary>
            The url tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.START_IMAGE">
            <summary>
            The start image tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.THUMBNAIL">
            <summary>
            The thumbnail tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.DESCRIPTION">
            <summary>
            The description tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.COMPANY_NAME">
            <summary>
            The company name tag name for the MCL XML
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.EXTENSION">
            <summary>
            The file extension to identify MCL XML files
            </summary>
        </member>
        <member name="M:SnapStream.Apps.MCL.CreateMCL(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Creates a new MCL XML file
            </summary>
            <param name="sName">The name of the MCL</param>
            <param name="sURL">The URL</param>
            <param name="sStartImage">The start image</param>
            <param name="sThumbnail">The thumbnail</param>
            <param name="iCategory">The category</param>
            <param name="iType">The type</param>
            <param name="iCapabilities">The capabilities</param>
            <param name="sDescription">The description</param>
            <param name="sCompanyName">The company name</param>
        </member>
        <member name="M:SnapStream.Apps.MCL.RaiseMCLCreatedEvent(System.String)">
            <summary>
            Raises our MCL created event
            </summary>
            <param name="name">The name of the MCL XML file</param>
        </member>
        <member name="E:SnapStream.Apps.MCL.MCLCreated">
            <summary>
            Our MCL created event.  This notifies the current application that
            a new MCL XML file has been created and is ready to be parsed and added
            dynamically to the menu system
            </summary>
        </member>
        <member name="T:SnapStream.Apps.MCL.CreateMCLWithState">
            <summary>
            Helper class for creating a new MCL XML file
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sName">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sURL">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sStartImage">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sThumbnail">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sDescription">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.MCL.CreateMCLWithState.m_sCompanyName">
            <summary>
            The various attributes to be set.
            </summary>
        </member>
        <member name="M:SnapStream.Apps.MCL.CreateMCLWithState.Start">
            <summary>
            Spawns a new thread to create the MCL XML file
            </summary>
        </member>
        <member name="M:SnapStream.Apps.MCL.CreateMCLWithState.CreateMCLThreadProc">
            <summary>
            Downloads the images and creates a new mcl xml file
            </summary>
        </member>
        <member name="T:SnapStream.Apps.MicrosoftWindows">
            <summary>
            Provides properties and methods for retrieving information from Windows.
            </summary>
        </member>
        <member name="M:SnapStream.Apps.MicrosoftWindows.GetNonFloppyDrives">
            <summary>
            Gets the drives on the system that are not floppy drives
            </summary>
            <returns>The drives that aren't floppies</returns>
        </member>
        <member name="P:SnapStream.Apps.MicrosoftWindows.SystemApplicationDataDirectory">
            <summary>
            Gets the path to the common application data directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.MicrosoftWindows.ProgramFilesDirectory">
            <summary>
            Gets the path to the Program Files directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.MicrosoftWindows.WindowsDirectory">
            <summary>
            Gets the path to the Windows directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.MicrosoftWindows.MyMusicDirectory">
            <summary>
            Gets the path to the "My Music" directory.
            </summary>
        </member>
        <member name="P:SnapStream.Apps.MicrosoftWindows.MyVideosDirectory">
            <summary>
            Gets the path to the "My Videos" directory.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.QuickDVD">
            <summary>
            Provides properties and methods for dealing with QuickDVD
            </summary>
        </member>
        <member name="F:SnapStream.Apps.QuickDVD.QUICKDVD_REG_KEY">
            <summary>
            The registry key where QuickDVD stores information.
            </summary>
        </member>
        <member name="F:SnapStream.Apps.QuickDVD.QUICKDVD_SUBKEY_APPNAME">
            <summary>
            The name of the value where QuickDVD stores the application path.
            </summary>
        </member>
        <member name="M:SnapStream.Apps.QuickDVD.HasQuickDVD">
            <summary>
            Determines if QuickDVD is installed.
            </summary>
            <returns>True if QuickDVD is installed, false otherwise.</returns>
        </member>
        <member name="P:SnapStream.Apps.QuickDVD.QuickDVDPath">
            <summary>
            Gets the path to the QuickDVD executable.
            </summary>
        </member>
        <member name="T:SnapStream.Apps.TopLevelWindowInfo">
            <summary>
            Contains the information associated with a windows application including
            the window text, the window handle, and a method to retrieve the window icon
            </summary>
        </member>
        <member name="F:SnapStream.Apps.TopLevelWindowInfo._text">
            <summary>
            The text displayed in the title bar of a the window
            </summary>
        </member>
        <member name="F:SnapStream.Apps.TopLevelWindowInfo._handle">
            <summary>
            The window handle
            </summary>
        </member>
        <member name="M:SnapStream.Apps.TopLevelWindowInfo.#ctor(System.IntPtr)">
            <summary>
            Creates the TopLevelWindowInfo from the handle
            </summary>
            <param name="hWnd">
            Handle used to create the TopLevelWindowInfo
            </param>
        </member>
        <member name="M:SnapStream.Apps.TopLevelWindowInfo.GetIcon">
            <summary>
            Returns the icon for the member window handle
            </summary>
            <returns>
            Bitmap that contains the icon associated with the handle
            </returns>
        </member>
        <member name="P:SnapStream.Apps.TopLevelWindowInfo.WindowText">
            <summary>
            The text displayed in the title bar of a the window
            </summary>
        </member>
        <member name="P:SnapStream.Apps.TopLevelWindowInfo.Handle">
            <summary>
            The window handle
            </summary>
        </member>
        <member name="T:SnapStream.Apps.TopLevelRunningApps">
            <summary>
            Generates a list of TopLevelWindowInfos for all top level running applications
            </summary>
        </member>
        <member name="F:SnapStream.Apps.TopLevelRunningApps._myself">
            <summary>
            Handle to the current process so that we don't list ourselves
            </summary>
        </member>
        <member name="F:SnapStream.Apps.TopLevelRunningApps._runningApps">
            <summary>
            List of TopLevelWindoInfos for the current running applications
            Note: Does not include the current process
            </summary>
        </member>
        <member name="M:SnapStream.Apps.TopLevelRunningApps.#ctor">
            <summary>
            Creates the TopLevelRunningApps object
            </summary>
        </member>
        <member name="M:SnapStream.Apps.TopLevelRunningApps.AddRunningApp(System.IntPtr,System.IntPtr)">
            <summary>
            Callback used by the enumwindows command to add running application information
            </summary>
            <param name="hWnd">
            Handle to the window
            </param>
            <param name="lparam">
            Reference to this object (since the method has to be static, 
            we can't access member variables without this)
            </param>
            <returns>
            True
            </returns>
        </member>
        <member name="M:SnapStream.Apps.TopLevelRunningApps.GetRunningApplications">
            <summary>
            Returns an array of TopLevelWindowInfos for the running applications
            Note: Does not include the current process
            </summary>
            <returns>
            Array of TopLevelWindows
            </returns>
        </member>
        <member name="M:SnapStream.Apps.TopLevelRunningApps.RefreshList">
            <summary>
            Refreshes the list of TopLevelWindowInfos
            Note: Does not include the current process
            </summary>
        </member>
        <member name="M:SnapStream.Apps.TopLevelRunningApps.AddTopLevelWindowInfo(System.IntPtr)">
            <summary>
            Give a window handle, adds the TopLevelWindowInfo to the list
            </summary>
            <param name="hWnd">
            Window handle
            </param>
        </member>
        <member name="T:SnapStream.Commands.CommandConverter">
            <summary>
            Provides a TypeConverter to convert strings to commands.
            </summary>
        </member>
        <member name="M:SnapStream.Commands.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if a conversion from the specified type is possible.
            </summary>
            <remarks>
            Currently a Command may only be converted from a string.
            </remarks>
            <param name="context">The context</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if sourceType is String, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Commands.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if a conversion to the specified type is possible.
            </summary>
            <remarks>
            Currently a Command may only be converted to a String object.
            </remarks>
            <param name="context">The context</param>
            <param name="destinationType">The type to test for conversion to</param>
            <returns>True if the conversion is possible, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Commands.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified value to a Command if possible.
            </summary>
            <exception cref="T:System.NotSupportedException">Will be thrown if value is any type other than String.</exception>
            <param name="context">The context</param>
            <param name="culture">The culture info</param>
            <param name="value">The value to convert</param>
            <returns>The command that corresponds to the value.  If value is not a String an exception will be thrown.</returns>
        </member>
        <member name="T:SnapStream.Commands.CommandExecuteArgs">
            <summary>
            Provides data for Command execution.
            </summary>
        </member>
        <member name="M:SnapStream.Commands.CommandExecuteArgs.#ctor">
            <summary>
            Initializes a new instance of the CommandExecuteArgs class
            </summary>
        </member>
        <member name="M:SnapStream.Commands.CommandExecuteArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the CommandExecuteArgs class
            </summary>
            <param name="data">The data that should be passed to the handler of a command</param>
        </member>
        <member name="P:SnapStream.Commands.CommandExecuteArgs.Data">
            <summary>
            Gets or set the data for this command.
            </summary>
        </member>
        <member name="P:SnapStream.Commands.CommandExecuteArgs.ReturnData">
            <summary>
            Gets or sets the data that is returned by the handler of the command.
            </summary>
        </member>
        <member name="T:SnapStream.Commands.CommandExecuteHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.Commands.Command.Execute">Execute</see> event of a <see cref="T:SnapStream.Commands.Command">Command</see>.
            </summary>
        </member>
        <member name="T:SnapStream.Commands.Command">
            <summary>
            Provides a way for components to interact by firing commands.
            </summary>
            <remarks>
            Commands are a very useful pattern for decoupling the handling of an action from the
            initiating of an action.  Neither side of the interaction needs to know about the other.
            </remarks>
        </member>
        <member name="F:SnapStream.Commands.Command._name">
            <summary>
            The name of the Command
            </summary>
        </member>
        <member name="M:SnapStream.Commands.Command.#ctor">
            <summary>
            Initializes a new instance of the Command class.
            </summary>
        </member>
        <member name="M:SnapStream.Commands.Command.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Command class.
            </summary>
            <remarks>
            It is a good idea to ensure the uniqueness of command names by prefixing the name
            of a command with some company or developer specific string.  The namespace for
            commands is shared and may not be partitioned using any other means.  A command
            published by SnapStream may look something like "SnapStream.Commands.OpenVideoFile"
            for instance.  Commands that are more generic do not need a namespace prefix.
            </remarks>
            <param name="name">The name of the command</param>
        </member>
        <member name="M:SnapStream.Commands.Command.ToString">
            <summary>
            Returns the name of this Command.
            </summary>
            <returns>The name of this Command.</returns>
        </member>
        <member name="M:SnapStream.Commands.Command.Fire">
            <summary>
            Fires this Command.
            </summary>
            <remarks>
            Any command handler that has subscribed to the <see cref="E:SnapStream.Commands.Command.Execute">Execute</see>
            event will be invoked by this method.
            </remarks>
        </member>
        <member name="M:SnapStream.Commands.Command.Fire(SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Fires this Command.
            </summary>
            <remarks>
            Any command handler that has subscribed to the <see cref="E:SnapStream.Commands.Command.Execute">Execute</see>
            event will be invoked by this method.
            </remarks>
            <param name="args">The arguments to pass to the Command</param>
        </member>
        <member name="M:SnapStream.Commands.Command.HasHandlers">
            <summary>
            Determines if this Command has any registered handlers.
            </summary>
            <returns>True if this Command has handlers, false otherwise.</returns>
        </member>
        <member name="E:SnapStream.Commands.Command.Execute">
            <summary>
            Occurs when <see cref="M:SnapStream.Commands.Command.Fire">Fire</see> is called.
            </summary>
        </member>
        <member name="P:SnapStream.Commands.Command.Name">
            <summary>
            Gets or sets the name of the Command.
            </summary>
        </member>
        <member name="T:SnapStream.Commands.CommandManager">
            <summary>
            Provides for central registration of commands.
            </summary>
        </member>
        <member name="M:SnapStream.Commands.CommandManager.#ctor">
            <summary>
            Initializes a new instance of the CommandManager class.
            </summary>
        </member>
        <member name="M:SnapStream.Commands.CommandManager.Register(System.String)">
            <summary>
            Registers a Command.
            </summary>
            <remarks>
            Commands are singletons with respect to their name so multiple calls to Register with
            the same name will always return the same Command object.
            </remarks>
            <param name="name">The name of the command to regster</param>
            <returns>The registered command</returns>
        </member>
        <member name="M:SnapStream.Commands.CommandManager.Fire(System.String)">
            <summary>
            Fires a command.
            </summary>
            <param name="name">The name of the Command to fire.</param>
        </member>
        <member name="M:SnapStream.Commands.CommandManager.Fire(System.String,SnapStream.Commands.CommandExecuteArgs)">
            <summary>
            Fires a command.
            </summary>
            <param name="name">The name of the Command to fire</param>
            <param name="args">The arguments to pass the command handler</param>
        </member>
        <member name="M:SnapStream.Commands.CommandManager.GetEnumerator">
            <summary>
            Gets an enumerator for enumerating through all the registered commands.
            </summary>
            <returns>An enumerator that can be used to enumerate all the registered commands on this CommandManager instance.</returns>
        </member>
        <member name="T:SnapStream.Commands.SingletonCommandManager">
            <summary>
            Maintains a reference to the global <see cref="T:SnapStream.Commands.CommandManager">CommandManager</see>
            </summary>
        </member>
        <member name="F:SnapStream.Commands.SingletonCommandManager.Instance">
            <summary>
            Gets the global <see cref="T:SnapStream.Commands.CommandManager">CommandManager</see>
            </summary>
        </member>
        <member name="T:SnapStream.Commands.StandardCommands">
            <summary>
            Provides a means of accessing commonly used <see cref="T:SnapStream.Commands.Command">Command</see> objects.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Exit">
            <summary>
            Gets the "Exit" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Play">
            <summary>
            Gets the "Play" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Pause">
            <summary>
            Gets the "Pause" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Stop">
            <summary>
            Gets the "Stop" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.FastFoward">
            <summary>
            Gets the "FastFoward" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Rewind">
            <summary>
            Gets the "Rewind" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.SkipFowad">
            <summary>
            Gets the "SkipFowad" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.SkipBack">
            <summary>
            Gets the "SkipBack" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Mute">
            <summary>
            Gets the "Mute" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Down">
            <summary>
            Gets the "Down" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Up">
            <summary>
            Gets the "Up" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Left">
            <summary>
            Gets the "Left" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Right">
            <summary>
            Gets the "Right" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.ScrollUp">
            <summary>
            Gets the "ScrollUp" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.ScrollDown">
            <summary>
            Gets the "ScrollDown" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.ScrollLeft">
            <summary>
            Gets the "ScrollLeft" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.ScrollRight">
            <summary>
            Gets the "ScrollRight" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.ContextMenu">
            <summary>
            Gets the "ContextMenu" command.
            </summary>
        </member>
        <member name="T:SnapStream.Commands.StandardCommands.Application">
            <summary>
            Manages application commands.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.Exit">
            <summary>
            Gets the "Application.Exit" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.FullScreen">
            <summary>
            Gets the "Application.FullScreen" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ToggleFullScreen">
            <summary>
            Gets the "Application.ToggleFullScreen" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ShowScreen">
            <summary>
            Gets the "Application.ShowScreen" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ShowDefaultScreen">
            <summary>
            Gets the "Application.ShowDefaultScreen" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ToggleOptionsCommand">
            <summary>
            Gets the "Application.ToggleOptions" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ShowOptionGroupCommand">
            <summary>
            Gets the "Application.ShowOptionGroup" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.HideOptionGroupCommand">
            <summary>
            Gets the "Application.HideOptionGroup" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.FindOptionCommand">
            <summary>
            Gets the "Application.FindOption" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.ShowScreenSaver">
            <summary>
            Gets the "Application.ShowScreenSaver" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Application.HideScreenSaver">
            <summary>
            Gets the "Application.HideScreenSaver" command.
            </summary>
        </member>
        <member name="T:SnapStream.Commands.StandardCommands.Player">
            <summary>
            Manages video and audio player commands.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.PlayVideo">
            <summary>
            Gets the "Player.PlayVideo" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.PlayAudio">
            <summary>
            Gets the "Player.PlayAudio" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.PlayDVD">
            <summary>
            Gets the "Player.PlayDVD" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.StopVideo">
            <summary>
            Gets the "Player.StopVideo" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.StopAudio">
            <summary>
            Gets the "Player.StopAudio" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.StopDVD">
            <summary>
            Gets the "Player.StopDVD" command.
            </summary>
        </member>
        <member name="F:SnapStream.Commands.StandardCommands.Player.ToggleShuffle">
            <summary>
            Gets the "Player.ToggleShuffle" command.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.Config">
            <summary>
            Contains the configuration settings for an application.
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Config.#ctor">
            <summary>
            Initializes a new instance of the Config class
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Config.Initialize(System.String,System.String)">
            <summary>
            Initialize the config object from the given settings and configuration files
            </summary>
            <param name="settingsPath">
            Path to the file that contains the Beyond Media settings file
            </param>
            <param name="configPath">
            Path to the file that contains the enumerated settings and their default values
            </param>
            <returns>True if the files were loaded successfully, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.AddProperties(System.String)">
            <summary>
            Add the properties from the given file into the Config object
            </summary>
            <param name="path">
            Path to the file that contains additional settings for Beyond Media
            </param>
            <returns>True if the file was loaded successfully, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.Save">
            <summary>
            Saves the config properties.
            </summary>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.IsSet(System.String)">
            <summary>
            Determines if the property with the given name is set.
            </summary>
            <param name="propName">The name of the property</param>
            <returns>True if the property is set, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.Remove(System.String)">
            <summary>
            Removes a property.
            </summary>
            <param name="propName">The name of the setting to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetValue(System.String,System.Type,System.Object@)">
            <summary>
            Gets the property value with the given name and type
            </summary>
            <param name="propName">Name of the property</param>
            <param name="type">Convert the value to this type</param>
            <param name="output">Property as object</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetProperty(System.String,System.Type,System.Object@)">
            <summary>
            Gets the property value with the given name and type
            </summary>
            <param name="propName">Name of the property</param>
            <param name="type">Convert the value to this type</param>
            <param name="output">Property as object</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsInt(System.String,System.Int32@)">
            <summary>
            Get the given property as an int
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as int</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsLong(System.String,System.Int64@)">
            <summary>
            Get the given property as a long
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as long</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsBool(System.String,System.Boolean@)">
            <summary>
            Get the given property as a bool
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as bool</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsDateTime(System.String,System.DateTime@)">
            <summary>
            Get the given property as a DateTime
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as DateTime</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsString(System.String,System.String@)">
            <summary>
            Get the given property as a string
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as string</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyAsGuid(System.String,System.Guid@)">
            <summary>
            Get the given property as a guid
            </summary>
            <param name="propName">Name of the property</param>
            <param name="output">Property value as Guid</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.SetProperty(System.String,System.String)">
            <summary>
            Set the property with the given value
            </summary>
            <param name="propName">Property name</param>
            <param name="propValue">Property value</param>
        </member>
        <member name="M:SnapStream.Configuration.Config.SetProperty(System.String,System.Object)">
            <summary>
            Set the property with the given value
            </summary>
            <param name="propName">Property name</param>
            <param name="propValue">Property value</param>
        </member>
        <member name="M:SnapStream.Configuration.Config.SetPropertyArray(System.String,System.Collections.ArrayList)">
            <summary>
            Set the property array with the given name and values
            </summary>
            <param name="propName">Name of the array</param>
            <param name="propValues">Values of the array</param>
        </member>
        <member name="M:SnapStream.Configuration.Config.SetValue(System.String,System.Object)">
            <summary>
            Set the property with the given value
            </summary>
            <param name="propName">Property name</param>
            <param name="propValue">Property value</param>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyBag(System.String,SnapStream.Configuration.PropertyBag@)">
            <summary>
            Get a PropertyBag with the given name
            </summary>
            <param name="name">The name of the bag</param>
            <param name="output">PropertyBag with the given name</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetPropertyArray(System.String,SnapStream.Configuration.PropertyArray@)">
            <summary>
            Gets a PropertyArray with the given name
            </summary>
            <param name="name">The name of the array</param>
            <param name="output">PropertyArray with the given name</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.AddPropertyArray(System.String)">
            <summary>
            Creates a property array with the given name and adds it to the list of arrays
            Note: Will overwrite an existing array
            </summary>
            <param name="name">Name of the array</param>
            <returns>The array that was created</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.GetSettingInfo(System.String)">
            <summary>
            Gets meta-information about a property.
            </summary>
            <param name="name">The name of the property</param>
            <returns>The <see cref="T:SnapStream.Configuration.Setting">Setting</see> object for the given property if one exists, null otherwise.</returns>
        </member>
        <member name="M:SnapStream.Configuration.Config.Dispose">
            <summary>
            Cleans up any resources used by this object.
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Config.Template">
            <summary>
            Gets the <see cref="T:SnapStream.Configuration.ConfigTemplate">ConfigTemplate</see> object that maintains meta-information about properties.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.ConfigTemplate">
            <summary>
            Maintains metadata about settings
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.IUriContext">
            <summary>
            Provides a way of communicating uri information about where an object was loaded from
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.IUriContext.BaseUri">
            <summary>
            This property will always represent the full path to the directory this object
            is being loaded from.  The filename this object is being loaded from is not
            supplied.
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.FromFile(System.String)">
            <summary>
            Loads a ConfigTemplate from a file on disk.
            </summary>
            <param name="path">The path to load the template from</param>
            <returns>The ConfigTemplate loaded from the file or null if the specified file was not a ConfigTemplate.</returns>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.#ctor">
            <summary>
            Initializes a new instance of the ConfigTemplate class.
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.AddSettings(SnapStream.Configuration.ConfigTemplate)">
            <summary>
            Adds the information in one ConfigTemplate to this ConfigTemplate.
            </summary>
            <param name="t">The template to get information from</param>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.GetDefaultValue(SnapStream.Configuration.Setting,System.Type)">
            <summary>
            Gets the default value of a <see cref="T:SnapStream.Configuration.Setting">Setting</see>.
            </summary>
            <param name="setting">The <see cref="T:SnapStream.Configuration.Setting">Setting</see> to get the default value for</param>
            <param name="type">The type to convert the default value to</param>
            <returns>The default value converted to the specified <see cref="T:System.Type">Type</see> or null if the conversion failed.</returns>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.GetDefaultValue(System.String,System.Type)">
            <summary>
            Gets the default value of a <see cref="T:SnapStream.Configuration.Setting">Setting</see>.
            </summary>
            <param name="name">The name of the <see cref="T:SnapStream.Configuration.Setting">Setting</see> to get the default value for</param>
            <param name="type">The type to convert the default value to</param>
            <returns>The default value converted to the specified <see cref="T:System.Type">Type</see> or null if the conversion failed.</returns>
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.AddSetting(SnapStream.Configuration.Setting)">
            <summary>
            Adds a <see cref="T:SnapStream.Configuration.Setting">Setting</see> to this ConfigTemplate.
            </summary>
            <param name="setting">The <see cref="T:SnapStream.Configuration.Setting"/>Setting</param> to add.
        </member>
        <member name="M:SnapStream.Configuration.ConfigTemplate.GetEnumerator">
            <summary>
            Gets an enumerator for iterating over the <see cref="T:SnapStream.Configuration.Setting">Setting</see> object in this ConfigTemplate.
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="P:SnapStream.Configuration.ConfigTemplate.Item(System.String)">
            <summary>
            Gets or sets a <see cref="T:SnapStream.Configuration.Setting">Setting</see> object by name.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.Property">
            <summary>
            A simple name/value pair
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Property._name">
            <summary>
            The Name field for this property
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Property._value">
            <summary>
            The Value field for this property
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Property.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Property.#ctor(System.String,System.String)">
            <summary>
            Creates a new property with the specified Name and Value
            </summary>
            <param name="name">Set to the Name field</param>
            <param name="val">Set to the Value field</param>
        </member>
        <member name="M:SnapStream.Configuration.Property.Serialize(System.Xml.XmlDocument,System.Xml.XmlNode@)">
            <summary>
            Creates a node for this Property in the document (does NOT add it)
            </summary>
            <param name="doc">The root document to create the node from</param>
            <param name="node">The node that was created to hold this property's info</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="M:SnapStream.Configuration.Property.Deserialize(System.Xml.XmlNode)">
            <summary>
            Populates this property object from the given node
            </summary>
            <param name="node">The node that contains our xml</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="P:SnapStream.Configuration.Property.Name">
            <summary>
            The Name field for this property
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Property.Value">
            <summary>
            The Value field for this property
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Property.ValueAsBool">
            <summary>
            The Value field for this property formatted as a boolean
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Property.ValueAsInt32">
            <summary>
            The Value field for this property formatted as a 32-bit integer
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Property.ValueAsLong">
            <summary>
            The Value field for this property formatted as a 64-bit integer
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Property.ValueAsGuid">
            <summary>
            The Value field for this property formatted as a GUID
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.PropertyArray">
            <summary>
            A Name paired with an array of values
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyArray._array">
            <summary>
            The Value fields for this property array
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyArray._name">
            <summary>
            The Name field of this property array
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.PropertyArray.#ctor">
            <summary>
            Creates a property array with no name
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.PropertyArray.#ctor(System.String)">
            <summary>
            Creates a property array with the given name
            </summary>
            <param name="name">The Name of this property array</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyArray.CommonInit(System.String)">
            <summary>
            Creates a property array with the given name
            </summary>
            <param name="name">The Name of this property array</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyArray.Serialize(System.Xml.XmlDocument,System.Xml.XmlNode@)">
            <summary>
            Creates a node for this PropertyArray in the document (does NOT add it)
            </summary>
            <param name="doc">The root document to create the node from</param>
            <param name="node">The node that was created to hold this property array's info</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyArray.Deserialize(System.Xml.XmlNode)">
            <summary>
            Populates this property array from the given node
            </summary>
            <param name="node">The node that contains our xml</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="P:SnapStream.Configuration.PropertyArray.Name">
            <summary>
            The Name field of this property array
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyArray.Values">
            <summary>
            The Value fields for this property array
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.PropertyType">
            <summary>
            Represents the type of a property maintained by a <see cref="T:SnapStream.Configuration.PropertyBag">PropertyBag</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyType.None">
            <summary>
            The type of a property that does not exist.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyType.Property">
            <summary>
            The type of a property that is associated with a <see cref="F:SnapStream.Configuration.PropertyType.Property">Property</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyType.Bag">
            <summary>
            The type of a property that is associated with a <see cref="T:SnapStream.Configuration.PropertyBag">PropertyBag</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyType.Array">
            <summary>
            The type of a property that is associated with a <see cref="T:SnapStream.Configuration.PropertyArray">PropertyArray</see>.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.PropertyBag">
            <summary>
            Contains property objects
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyBag._propsList">
            <summary>
            The list of Property objects in this bag
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyBag._bagsList">
            <summary>
            The list of PropertyBag objects in this bag
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyBag._arraysList">
            <summary>
            The list of PropertyArray objects in this bag
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.PropertyBag._name">
            <summary>
            The Name field of this PropertyBag
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.#ctor">
            <summary>
            Creates a new property bag without a name
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.#ctor(System.String)">
            <summary>
            Creates a new property bag with the given name
            </summary>
            <param name="name">The Name of this bag</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.CommonInit(System.String)">
            <summary>
            Creates a new property bag with the given name
            </summary>
            <param name="name">The Name of this bag</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Load(System.String)">
            <summary>
            Loads this PropertyBag from a file, clearing out the old values first
            </summary>
            <param name="filename">The path of the file</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Load(System.String,System.Boolean)">
            <summary>
            Loads this PropertyBag from a file 
            </summary>
            <param name="filename">The path of the file</param>
            <param name="clear">True if this PropertyBag's values should be cleared before loading</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Save(System.String)">
            <summary>
            Saves this PropertyBag to a file
            </summary>
            <param name="filename">The path to the file to save the PropertyBag to</param>
            <returns>True if the PropertyBag was able to save the file, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Clear">
            <summary>
            Clears all the properties from this PropertyBag
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Contains(System.String)">
            <summary>
            Determines if this PropertyBag contains a property with the specified name
            </summary>
            <param name="name">The name of the property</param>
            <returns>True if this PropertyBag contains either a Property, PropertyBag, or PropertyArray with the specified name, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.ContainsProperty(System.String)">
            <summary>
            Determines if this PropertyBag contains the specified Property
            </summary>
            <param name="name">The name of the Property</param>
            <returns>True if this PropertyBag contains a Property with the specified name</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.ContainsBag(System.String)">
            <summary>
            Determines if this PropertyBag contains the specified PropertyBag
            </summary>
            <param name="name">The name of the PropertyBag</param>
            <returns>True if this PropertyBag contains a PropertyBag with the specified name</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.ContainsArray(System.String)">
            <summary>
            Determines if this PropertyBag contains the specified PropertyArray
            </summary>
            <param name="name">The name of the PropertyArray</param>
            <returns>True if this PropertyBag contains a PropertyArray with the specified name</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetPropertyType(System.String)">
            <summary>
            Determines the type of property with the specified name
            </summary>
            <param name="name">The name of the property</param>
            <returns>The PropertyType of the property, PropertyType.None if the property does not exist</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.AddProperty(SnapStream.Configuration.Property)">
            <summary>
            Adds a Property to this PropertyBag
            </summary>
            <param name="prop">The Property to add.  This will overwrite any Property with the same name</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetProperty(System.String)">
            <summary>
            Gets a property object from this bag with the given name.
            </summary>
            <param name="name">The name of the Property</param>
            <returns>The Property if it exists, null otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetProperty(System.String,SnapStream.Configuration.Property@)">
            <summary>
            Gets a property object from this bag with the given name.
            </summary>
            <param name="name">The name of the property</param>
            <param name="output">Property with the given name</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetProperty(System.String,System.String@)">
            <summary>
            Gets a property value from this bag with the given name.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetPropertyAt(System.Int32)">
            <summary>
            Gets a property by index
            </summary>
            <param name="i">The index of the property to get</param>
            <returns>The property at the specified index if it exists, null otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetPropertyAt(System.Int32,System.String@,System.String@)">
            <summary>
            Gets a property by index
            </summary>
            <param name="i">The index of the property to get</param>
            <param name="name">Returns the name of the property</param>
            <param name="val">Returns the value of the property</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemoveProperty(System.String)">
            <summary>
            Removes a property based on it's name
            </summary>
            <param name="name">The name of a property to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemovePropertyAt(System.Int32)">
            <summary>
            Removes a property based on it's index
            </summary>
            <param name="i">The index of the property to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetString(System.String,System.String)">
            <summary>
            Gets the specified property as a string
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a string</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetBool(System.String,System.Boolean)">
            <summary>
            Gets the specified property as a bool
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a bool</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetInteger(System.String,System.Int32)">
            <summary>
            Gets the specified property as an int
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as an int</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetLong(System.String,System.Int64)">
            <summary>
            Gets the specified property as a long
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a long</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetFloat(System.String,System.Single)">
            <summary>
            Gets the specified property as a float
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a float</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetDouble(System.String,System.Double)">
            <summary>
            Gets the specified property as a double
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a double</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetDateTime(System.String,System.DateTime)">
            <summary>
            Gets the specified property as a DateTime
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a DateTime</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetGuid(System.String,System.Guid)">
            <summary>
            Gets the specified property as a Guid
            </summary>
            <param name="name">The name of the property</param>
            <param name="defaultValue">The default value to use if the property doesn't exist</param>
            <returns>The property value as a Guid</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetProperty(System.String,System.String)">
            <summary>
            Sets a property object from this bag with the given name.
            Note: if no property was found, one will be created, added and set
            </summary>
            <param name="name">The name of the property</param>
            <param name="val">The value to be set</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetProperty(System.String,System.String,System.Boolean@)">
            <summary>
            Sets a property object from this bag with the given name.
            Note: if no property was found, one will be created, added and set
            </summary>
            <param name="name">The name of the property</param>
            <param name="val">The value to be set</param>
            <param name="found">True IFF the Property already existed</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetString(System.String,System.String)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetBool(System.String,System.Boolean)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetInteger(System.String,System.Int32)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetLong(System.String,System.Int64)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetFloat(System.String,System.Single)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetDouble(System.String,System.Double)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetDateTime(System.String,System.DateTime)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.SetGuid(System.String,System.Guid)">
            <summary>
            Sets the specified property as a string
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="val">The value to set the property to</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.AddBag(SnapStream.Configuration.PropertyBag)">
            <summary>
            Adds a new PropertyBag to this PropertyBag
            </summary>
            <param name="bag">The PropertyBag to add.  This value will overwrite any PropertyBag with the same name</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetBag(System.String,SnapStream.Configuration.PropertyBag@)">
            <summary>
            Gets a PropertyBag with the given name
            </summary>
            <param name="name">The name of the bag</param>
            <param name="output">PropertyBag with the given name</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetBag(System.String)">
            <summary>
            Returns the PropertyBag with the specified name
            </summary>
            <param name="name">The name of the PropertyBag to get</param>
            <returns>The PropertyBag with the specified name if it exists, null otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetBagAt(System.Int32,SnapStream.Configuration.PropertyBag@)">
            <summary>
            Gets a PropertyBag by index
            </summary>
            <param name="i">The index of the PropertyBag to get</param>
            <param name="bag">The PropertyBag at the specified index, or null if the index is out of range</param>
            <returns>True if successful, False otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetBagAt(System.Int32)">
            <summary>
            Gets a PropertyBag by index
            </summary>
            <param name="i">The index of the PropertyBag to get</param>
            <returns>The PropertyBag at the specified index</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.AddNewBag(System.String)">
            <summary>
            Creates a PropertyBag with the given name and adds it to this PropertyBag
            Note: overwrites any bag that already exist with this name
            </summary>
            <param name="name">The name of the PropertyBag</param>
            <returns>The newly created PropertyBag</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemoveBag(System.String)">
            <summary>
             Removes a PropertyBag by name
            </summary>
            <param name="name">The name of the PropertyBag to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemoveBagAt(System.Int32)">
            <summary>
            Removes a PropertyBag by index
            </summary>
            <param name="index">The index of the PropertyBag to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetArray(System.String,SnapStream.Configuration.PropertyArray@)">
            <summary>
            Gets a PropertyArray with the given name
            </summary>
            <param name="name">The name of the array</param>
            <param name="output">PropertyArray with the given name</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetArray(System.String)">
            <summary>
            Gets a PropertyArray with the given name
            </summary>
            <param name="name">The name of the PropertyArray</param>
            <returns>The PropertyArray if it exists, null otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetArrayAt(System.Int32,SnapStream.Configuration.PropertyArray@)">
            <summary>
            Gets a PropertyArray by index
            </summary>
            <param name="i">The index of the PropertyArray</param>
            <param name="output">The PropertyArray at the given index</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.GetArrayAt(System.Int32)">
            <summary>
            Gets a PropertyArray by index
            </summary>
            <param name="i">The index of the PropertyArray</param>
            <returns>The PropertyArray at the given index</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.AddArray(SnapStream.Configuration.PropertyArray)">
            <summary>
            Adds a PropertyArray to this PropertyBag
            </summary>
            <param name="array">The PropertyArray to add.  This will overwrite any PropertyArray with the same name</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.AddNewArray(System.String)">
            <summary>
            Creates a PropertyArray with the given name and adds it to this PropertyBag
            Note: overwrites any array that already exist with this name
            </summary>
            <param name="name">The name of the array</param>
            <returns>The newly created PropertyArray</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemoveArray(System.String)">
            <summary>
            Removes a PropertyArray by name
            </summary>
            <param name="name">The name of the PropertyArray to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.RemoveArrayAt(System.Int32)">
            <summary>
            Removes a PropertyArray by index
            </summary>
            <param name="i">The index of the PropertyArray to remove</param>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Serialize(System.Xml.XmlDocument,System.Xml.XmlNode@)">
            <summary>
            Creates a node for this PropertyBag in the document (does NOT add it)
            </summary>
            <param name="doc">The root document to create the node from</param>
            <param name="node">The node that was created to hold this property bag's info</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Deserialize(System.Xml.XmlNode)">
            <summary>
            Populates this property bag from the given node
            </summary>
            <param name="rootNode">The node that contains our xml</param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="M:SnapStream.Configuration.PropertyBag.Deserialize(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Populates this property bag from the given node
            </summary>
            <param name="rootNode">The node that contains our xml</param>
            <param name="clearExisting">
            True to clear any existing properties, false otherwise
            </param>
            <returns>True IFF the operation was a success</returns>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.Name">
            <summary>
            The Name field of this PropertyBag
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.Bags">
            <summary>
            The sorted list of bags in this bag
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.BagCount">
            <summary>
            The number of PropertyBags this PropertyBag contains
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.Arrays">
            <summary>
            The sorted list of arrays in this bag
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.ArrayCount">
            <summary>
            The number of PropertyArrays this PropertyBag contains
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.Properties">
            <summary>
            The sorted list of properties in this bag
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.PropertyBag.PropertyCount">
            <summary>
            The number of Propertys this PropertyBag contains
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.SettingType">
            <summary>
            Defines the possible types of settings.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.SettingType.String">
            <summary>
            The type of a string setting.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.SettingType.Numeric">
            <summary>
            The type of a numeric setting.
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.SettingType.Enumeration">
            <summary>
            The type of an enumerated setting.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.Setting">
            <summary>
            Maintains meta information about a particular setting
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Setting.NameProperty">
            <summary>
            Gets the Setting.Name DependencyProperty
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Setting.#ctor">
            <summary>
            Creates a new Setting
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.Setting.HasValues">
            <summary>
            Call this before accessing the Values property so that creation of the
            values table can be delayed
            </summary>
            <returns>true if there are values</returns>
        </member>
        <member name="M:SnapStream.Configuration.Setting.AddValue(System.String,System.String,System.Object)">
            <summary>
            Adds a new setting to our values table
            </summary>
            <param name="id">The id of the value</param>
            <param name="label">The label of the value</param>
            <param name="value">The actual value</param>
        </member>
        <member name="M:SnapStream.Configuration.Setting.AddValue(System.String,System.Object)">
            <summary>
            Adds a new SettingValue that will use the object value as the id.
            </summary>
            <param name="label">the label</param>
            <param name="value">the value which will also be used as the id for the SettingValue if value is a string</param>
        </member>
        <member name="M:SnapStream.Configuration.Setting.AddValue(SnapStream.Configuration.SettingValue)">
            <summary>
            Adds a new SettingValue
            </summary>
            <param name="value">The new SettingValue to add</param>
        </member>
        <member name="M:SnapStream.Configuration.Setting.SnapStream#Serialization#IAddChild#AddChild(System.Object)">
            <summary>
            Implements IAddChild
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:SnapStream.Configuration.Setting.SnapStream#Serialization#IAddChild#AddText(System.String)">
            <summary>
            Implements IAddChild
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:SnapStream.Configuration.Setting.GetEnumerator">
            <summary>
            Returns an enumerator of all the SettingValues contained in this setting.  SettingValue objects
            will enumerate in the same order they were added
            </summary>
            <returns>the enumerator</returns>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Name">
            <summary>
            The name of this setting
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Type">
            <summary>
            The general type of this setting.
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Label">
            <summary>
            The label that should be used when displaying a setting.  This can be overridden
            by the control that the setting is bound to
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Category">
            <summary>
            The category for this setting.  This information might be used by a navigator
            that displays a category view
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Description">
            <summary>
            The description for this setting
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Values">
            <summary>
            The values that this setting can have
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.DynamicValues">
            <summary>
            When this property is set it incorporates any SettingValue objects in the IEnumerable into
            this setting.  Use this when the values for a setting object are unknown statically
            ( objects in the filesystem for instance ).
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.Default">
            <summary>
            The default value for this setting.  If DefaultRef has been set and there are
            values for the setting then that object will be returned
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.DefaultRef">
            <summary>
            Specifies a reference to the default value
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.Setting.UpdateAction">
            <summary>
            Specifies an action to execute when the value of this setting is updated
            </summary>
        </member>
        <member name="E:SnapStream.Configuration.Setting.Changed">
            <summary>
            Occurs when this Setting object's value is changed.
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.SettingValue">
            <summary>
            Value definition for settings that are one of several enumerated values
            </summary>
            <summary>
            Value definition for settings that are one of several enumerated values
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.SettingValue.#ctor">
            <summary>
            Initializes this instance to default values
            </summary>
        </member>
        <member name="M:SnapStream.Configuration.SettingValue.#ctor(System.String,System.Object)">
            <summary>
            Initializes this instance.  Since id is null here the value will become to id
            </summary>
            <param name="label">the label this value should have</param>
            <param name="value">the value this value should have</param>
        </member>
        <member name="M:SnapStream.Configuration.SettingValue.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes this instance
            </summary>
            <param name="id">the id of the value.  if this is null then the value becomes the id for this object</param>
            <param name="label">the label this value should have</param>
            <param name="value">the value this value should have</param>
        </member>
        <member name="P:SnapStream.Configuration.SettingValue.Id">
            <summary>
            The Id for this value.  This can be used in a DefaultRef on the Setting object this value is attached to.
            If Id is null then the actual value will be used if it is a string, else the empty string.
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.SettingValue.Label">
            <summary>
            The label for this value.  If set to a null value then the empty string is used
            </summary>
        </member>
        <member name="P:SnapStream.Configuration.SettingValue.Value">
            <summary>
            The actual value for this setting
            </summary>
        </member>
        <member name="T:SnapStream.Configuration.Util">
            <summary>
            Contains utilities for the properties objects
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Util._NAME_TAG">
            <summary>
            The xml tag used for the name field
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Util._VALUE_TAG">
            <summary>
            The xml tag used for the value field
            </summary>
        </member>
        <member name="F:SnapStream.Configuration.Util._URI_TAG">
            <summary>
            The xml text used for the URI to create new nodes
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuUpdateType">
            <summary>
            Defines the type of update that is occuring on a menu.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuUpdateType.All">
            <summary>
            Indicates that all properties of a menu are being updated.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuUpdateType.Label">
            <summary>
            Indicates that the Label property of a menu is being updated.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuUpdateType.Items">
            <summary>
            Indicates that the Items property of a menu is being updated.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuUpdateType.State">
            <summary>
            Indicates that the State property of a menu is being updated.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuUpdateEventArgs">
            <summary>
            Provides data for the <see cref="E:SnapStream.Menus.MenuItem.Update">Update</see> event.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuUpdateEventArgs.#ctor">
            <summary>
            Initializes a new instance of the MenuUpdateEventArgs class.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuUpdateEventArgs.#ctor(SnapStream.Menus.MenuUpdateType)">
            <summary>
            Initializes a new instance of the MenuUpdateEventArgs class.
            </summary>
            <param name="updateType">The type of update</param>
        </member>
        <member name="P:SnapStream.Menus.MenuUpdateEventArgs.UpdateType">
            <summary>
            Gets or sets the type of menu update.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuUpdateEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:SnapStream.Menus.MenuItem.Update">Update</see> event.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuItemState">
            <summary>
            Defines the various states that a <see cref="T:SnapStream.Menus.MenuItem">MenuItem</see> can be in.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItemState.Normal">
            <summary>
            The MenuItem is normal
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItemState.Hidden">
            <summary>
            The MenuItem should be hidden
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItemState.Grayed">
            <summary>
            The MenuItem should be grayed
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItemState.Disabled">
            <summary>
            The MenuItem should be disabled
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItemState.Checked">
            <summary>
            The MenuItem should be checked
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuItem">
            <summary>
            Represents a menu item in a <see cref="T:SnapStream.Menus.Menu">Menu</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._id">
            <summary>
            The id of the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._label">
            <summary>
            The label of the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._image">
            <summary>
            The image associated with the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._mesh">
            <summary>
            The mesh associated with the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._items">
            <summary>
            The items contained by this MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._action">
            <summary>
            The action associated with the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._state">
            <summary>
            The state of the MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._parent">
            <summary>
            The parent of this MenuItem.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._separator">
            <summary>
            Whether or not this MenuItem is a separator.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.MenuItem._baseUri">
            <summary>
            Used for relative lookup of files
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.#ctor">
            <summary>
            Initializes a new instance of the MenuItem class.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.HasItems">
            <summary>
            Determines if this MenuItem has any sub items.
            </summary>
            <returns>True if this MenuItem has sub items, false otherwise.</returns>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.AddItem(SnapStream.Menus.MenuItem)">
            <summary>
            Adds a MenuItem to this MenuItem.
            </summary>
            <param name="item">The MenuItem to add</param>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.Clear">
            <summary>
            Removes all child MenuItems from this MenuItem.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.Remove(SnapStream.Menus.MenuItem)">
            <summary>
            Removes the specified MenuItem from this MenuItem.
            </summary>
            <param name="item">The MenuItem to remove</param>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.Remove(System.Int32)">
            <summary>
            Removes the specified MenuItem from this MenuItem.
            </summary>
            <param name="index">The index of the MenuItem to remove</param>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies this MenuItems sub items to an <see cref="T:System.Array">Array</see>.
            </summary>
            <param name="array">The <see cref="T:System.Array">Array</see> to copy to</param>
            <param name="index">The index to start copying from</param>
        </member>
        <member name="M:SnapStream.Menus.MenuItem.GetEnumerator">
            <summary>
            Gets an enumerator that supports iteration over this MenuItem's sub items.
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="E:SnapStream.Menus.MenuItem.Update">
            <summary>
            Occurs when the MenuItem is updated.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Id">
            <summary>
            Gets or sets the id of this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Label">
            <summary>
            Gets or sets the label of this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Image">
            <summary>
            Gets or sets the image of this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Mesh">
            <summary>
            Gets or sets the mesh associated with this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Action">
            <summary>
            Gets or sets the action associated with this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Command">
            <summary>
            Gets or sets the command associated with this MenuItem.
            </summary>
            <remarks>
            This property simply sets the <see cref="P:SnapStream.Menus.MenuItem.Action">Action</see> property to an
            <see cref="T:SnapStream.Action.ExecuteCommand">ExecuteCommand</see> object which implements <see cref="T:SnapStream.Action.IAction">IAction</see>.
            </remarks>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Items">
            <summary>
            Gets the sub items associated with this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.DynamicItems">
            <summary>
            Sets dynamic items on this MenuItem.
            </summary>
            <remarks>
            Dynamic items can be set with an IEnumerable that contains MenuItems.  You cannot retrieve
            the list of dynamic items because it is incorporated into the <see cref="P:SnapStream.Menus.MenuItem.Items">Items</see>
            property when you set this property.  This property can be set any number of times to add
            more dynamic items to this MenuItem.
            </remarks>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Enabled">
            <summary>
            Gets or sets whether this MenuItem should be enabled.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Grayed">
            <summary>
            Gets or sets whether this MenuItem should be grayed.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Checked">
            <summary>
            Gets or set whether this MenuItem should be checked.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Visible">
            <summary>
            Gets or set whether this MenuItem should be visible.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Parent">
            <summary>
            Gets or sets the parent of this MenuItem.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.IsSeparator">
            <summary>
            Gets or sets whether this MenuItem should be treated as a separator.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Item(System.Int32)">
            <summary>
            Gets a sub MenuItem by index.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Item(System.String)">
            <summary>
            Gets a sub MenuItem by id.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.IsSynchronized">
            <summary>
            Gets a value indicating whether or not access to this MenuItem is synchronized.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.Count">
            <summary>
            Gets the number of sub MenuItems this MenuItem contains.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.SyncRoot">
            <summary>
            Gets the object to synchronize against.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItem.BaseUri">
            <summary>
            Gets or sets the base uri for this MenuItem.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.Menu">
            <summary>
            Gives a more logical name for a top level menu.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.Menu.#ctor">
            <summary>
            Initializes a new instance of the Menu class.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.Menus">
            <summary>
            Maintains a list of <see cref="T:SnapStream.Menus.Menu">Menu</see> object.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.Menus.#ctor">
            <summary>
            Initializes a new instance of the Menus class.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.Menus.AddMenu(SnapStream.Menus.Menu)">
            <summary>
            Adds a menu to the list.
            </summary>
            <param name="menu">The menu to add</param>
        </member>
        <member name="M:SnapStream.Menus.Menus.RemoveMenu(SnapStream.Menus.Menu)">
            <summary>
            Removes a menu from the list.
            </summary>
            <param name="menu">The menu to remove</param>
        </member>
        <member name="M:SnapStream.Menus.Menus.RemoveMenu(System.String)">
            <summary>
            Removes a menu from the list by name.
            </summary>
            <param name="menuName">The name of the menu to remove</param>
        </member>
        <member name="M:SnapStream.Menus.Menus.RemoveMenu(System.Int32)">
            <summary>
            Removes a menu from the list by index.
            </summary>
            <param name="index">The index of the menu to remove</param>
        </member>
        <member name="M:SnapStream.Menus.Menus.Clear">
            <summary>
            Removes all menus from the list.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.Menus.FindMenu(System.String)">
            <summary>
            Finds a menu by name.
            </summary>
            <param name="name">The name of the menu to find</param>
            <returns>The menu if it exists, null otherwise.</returns>
        </member>
        <member name="M:SnapStream.Menus.Menus.GetEnumerator">
            <summary>
            Gets an enumerator for enumerating all the menus contained in this Menus object.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="P:SnapStream.Menus.Menus.Count">
            <summary>
            Gets the number of menus in this Menus object.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.Menus.Item(System.Int32)">
            <summary>
            Gets a menu by index.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.IMenuItem">
            <summary>
            The interface that a concrete menu item represention should implement.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.IMenuItem.MenuItem">
            <summary>
            Sets the <see cref="P:SnapStream.Menus.IMenuItem.MenuItem">MenuItem</see> that the concrete menu item object
            should use to populate its properties.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuItemTypeAttribute">
            <summary>
            Provides an attribute for specifying the type of a menu's items.
            </summary>
            <remarks>
            This attribute should be used on a class that represents a concrete instance of a menu.  The
            <see cref="T:SnapStream.Menus.MenuItem">MenuItem</see>, and <see cref="T:SnapStream.Menus.Menu">Menu</see> classes describe the attributes
            of an abstract menu (i.e. they describe properties that all menus will have in common).  It is up to the
            class that provides a concrete representation of the menu to actually create items that use those
            abstract descriptions.  This attribute specifies how that mapping should take place.
            The <see cref="T:SnapStream.Menus.MenuManager">MenuManager</see> class uses this attribute when it tries to create a concrete
            menu object from the abstract representation provided by these two classes.
            </remarks>
        </member>
        <member name="M:SnapStream.Menus.MenuItemTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the MenuItemTypeAttribute.
            </summary>
            <param name="menuItemType">The type that should be used when instantiating sub items for the menu.</param>
        </member>
        <member name="M:SnapStream.Menus.MenuItemTypeAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the MenuItemTypeAttribute.
            </summary>
            <param name="menuItemType">The type that should be used when instantiating sub items for the menu.</param>
            <param name="separatorItemType">The type that should be used when instantiating separator items for the menu.</param>
        </member>
        <member name="P:SnapStream.Menus.MenuItemTypeAttribute.MenuItemType">
            <summary>
            Gets the type that should be used to instantiate normal menu items.
            </summary>
        </member>
        <member name="P:SnapStream.Menus.MenuItemTypeAttribute.SeparatorItemType">
            <summary>
            Gets the type that should be used to instantiate separator menu items.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.ReloadMenuHandler">
            <summary>
            Represents the method that will be invoked when a <see cref="T:SnapStream.Menus.Menu">Menu</see> is reloaded.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.MenuManager">
            <summary>
            Manages menus and provides menu loading services.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.#ctor">
            <summary>
            Initializes a new instance of the MenuManager class.
            </summary>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.Initialize(System.String)">
            <summary>
            Initializes this MenuManager object with menu definitions contained in an xml file.
            </summary>
            <param name="path">The path to the file that contains the menu definitions</param>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.Reload(System.String)">
            <summary>
            Reloads the specified menu.
            </summary>
            <param name="which">The name of the menu to reload</param>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.AddReloadHandler(System.String,SnapStream.Menus.ReloadMenuHandler)">
            <summary>
            Adds a handler that will get invoked when the specified menu is reloaded.
            </summary>
            <param name="menu">The name of the menu to monitor</param>
            <param name="h">The handler that should be invoked when the specified menu is reloaded</param>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.CreateMenu(SnapStream.Menus.Menu,System.Type)">
            <summary>
            Creates a new concrete menu from an abstract menu description.
            </summary>
            <remarks>
            The type specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The type must also have a
            <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="menu">The <see cref="T:SnapStream.Menus.Menu">Menu</see> to load</param>
            <param name="menuType">The Type of the concrete menu</param>
            <returns>The concrete menu object.</returns>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.CreateMenu(System.String,System.Type)">
            <summary>
            Creates a new concrete menu from an abstract menu description.
            </summary>
            <remarks>
            The type specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The type must also have a
            <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="name">The name of the menu to load</param>
            <param name="menuType">The Type of the concrete menu</param>
            <returns>The concrete menu object.</returns>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.CreateMenu(System.Int32,System.Type)">
            <summary>
            Creates a new concrete menu from an abstract menu description.
            </summary>
            <remarks>
            The type specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The type must also have a
            <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="index">The index of the menu to load</param>
            <param name="menuType">The Type of the concrete menu</param>
            <returns>The concrete menu object.</returns>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.LoadMenu(SnapStream.Menus.Menu,System.Object)">
            <summary>
            Loads a menu into an already created concrete menu object.
            </summary>
            <remarks>
            The object specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The Type of the object
            must also have a <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="menu">The <see cref="T:SnapStream.Menus.Menu">Menu</see> to load</param>
            <param name="theMenu">The concrete menu object to add menu items to</param>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.LoadMenu(System.String,System.Object)">
            <summary>
            Loads a menu into an already created concrete menu object.
            </summary>
            <remarks>
            The object specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The Type of the object
            must also have a <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="name">The name of the menu to load</param>
            <param name="theMenu">The concrete menu object to add menu items to</param>
        </member>
        <member name="M:SnapStream.Menus.MenuManager.LoadMenu(System.Int32,System.Object)">
            <summary>
            Loads a menu into an already created concrete menu object.
            </summary>
            <remarks>
            The object specified must implement the <see cref="T:SnapStream.Serialization.IAddChild">IAddChild</see> and
            <see cref="T:SnapStream.Serialization.IObjectFactory">IObjectFactory</see> interfaces.  The Type of the object
            must also have a <see cref="T:SnapStream.Menus.MenuItemTypeAttribute">MenuItemType</see> attribute applied to it.
            </remarks>
            <param name="index">The index of the menu to load</param>
            <param name="theMenu">The concrete menu object to add menu items to</param>
        </member>
        <member name="P:SnapStream.Menus.MenuManager.Menus">
            <summary>
            Gets the list of menu descriptions loaded by this MenuManager.
            </summary>
        </member>
        <member name="T:SnapStream.Menus.SingletonMenuManager">
            <summary>
            Maintains a reference to the global <see cref="T:SnapStream.Menus.MenuManager">MenuManager</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Menus.SingletonMenuManager.Instance">
            <summary>
            Gets the global <see cref="T:SnapStream.Menus.MenuManager">MenuManager</see>.
            </summary>
        </member>
        <member name="T:SnapStream.Performance.PerformanceMonitor">
            <summary>
            Class that will measure how long it takes a particular block of code to run.
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor.Frequency">
            <summary>
            This is the frequency at which the high performance counters run in ticks / sec
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor.MeasurePerformance">
            <summary>
            Determines whether or not performance data should be gathered.  To turn on performance
            gathering set HKEY_LOCAL_MACHINE\SOFTWARE\SnapStream Media[MonitorPerformance] to any
            number but 0
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor.ParentDataSlot">
            <summary>
            Provides a mechanism for storing the current performance monitor in a thread
            safe manner
            </summary>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.#cctor">
            <summary>
            Initializes the performance counter's frequency and determines whether or not
            any performance gathering should be done.
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor._name">
            <summary>
            The name of this performance monitor
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor._enterTime">
            <summary>
            The time in ticks that this stack frame was entered
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor._exitTime">
            <summary>
            The time in ticks that this stack frame was exited
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor._childCounters">
            <summary>
            The stack frames below this one that are being measured
            </summary>
        </member>
        <member name="F:SnapStream.Performance.PerformanceMonitor._parent">
            <summary>
            The current parent performance monitor.
            </summary>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.#ctor">
            <summary>
            Creates a new performance monitor and uses the name of the function that
            created this PerformanceMonitor
            </summary>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.#ctor(System.String)">
            <summary>
            Creates a new PerformanceMonitor with the specified name
            </summary>
            <param name="name">The name of the new PerformanceMonitor</param>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.Dispose">
            <summary>
            Stops measuring of the current stack frame
            </summary>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.Add(SnapStream.Performance.PerformanceMonitor)">
            <summary>
            Adds a new PerformanceMonitor to this one.  This indicates that the current monitor
            has child monitors that factor into the execution time of the current frame
            </summary>
            <param name="pc"></param>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.Report(System.String)">
            <summary>
            Generates a report of the performance data collected by this PerformanceMonitor and save it to
            a file as well as sending the report to the trace listeners
            </summary>
            <param name="file">The file to save to</param>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.Report">
            <summary>
            Generates a report of the performance data collected by this PerformanceMonitor and sends
            it to the trace listeners
            </summary>
        </member>
        <member name="M:SnapStream.Performance.PerformanceMonitor.ReportCore(System.Int32,System.Int64)">
            <summary>
            Performs the real work of generating a report item and sending it to the trace listeners
            </summary>
            <param name="level">The indentation level</param>
            <param name="totalCost">The total cost of the entire run being measured.</param>
        </member>
        <member name="P:SnapStream.Performance.PerformanceMonitor.CurrentParent">
            <summary>
            The current parent.  This represents a performance measurement that is being taken
            in a parent stack frame
            </summary>
        </member>
        <member name="P:SnapStream.Performance.PerformanceMonitor.IsMeasuringPerformance">
            <summary>
            Determines whether or not performance data should be gathered.  To turn on performance
            gathering set HKEY_LOCAL_MACHINE\SOFTWARE\SnapStream Media[MonitorPerformance] to any
            number but 0
            </summary>
        </member>
        <member name="P:SnapStream.Performance.PerformanceMonitor.TotalTime">
            <summary>
            Gets the total amount of time spent executing this stack frame
            </summary>
        </member>
        <member name="P:SnapStream.Performance.PerformanceMonitor.TotalTimeMs">
            <summary>
            Gets the total amount of time spent executing this stack frame in milliseconds.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.ILoaded">
            <summary>
            ILoaded provides a way for the parser to notify an object that it is done parsing it and
            will not be used again by the parser.  This method is called after the object that implements
            this interface has been added to the parent, but not before that parent object has been added
            to its parent object, so any relationship between this object and its ancestors will not be
            available.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ILoaded.DeferLoad">
            <summary>
            Tells the object that it is being loaded
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ILoaded.EndDeferLoad">
            <summary>
            Tells the object that the parser is done loading it
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.IParseLiteralContent">
            <summary>
            Provides a way for objects to parse their own content.  Not currently supported
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.IParseLiteralContent.Parse(System.Xml.XmlTextReader,SnapStream.Serialization.ParserContext)">
            <summary>
            Informs the object that it should initialize itself.  The object implementing this method
            must read data until the current element is closed.
            </summary>
            <param name="xmlTextReader">The xml stream that </param>
            <param name="parserContext"></param>
        </member>
        <member name="T:SnapStream.Serialization.IObjectFactory">
            <summary>
            Provides a uniform factory method interface.  Objects that implement this interface take over
            responsibility for creating their own immediate child objects
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.IObjectFactory.CreateObject(System.Type)">
            <summary>
            Creates a new object.
            </summary>
            <param name="type">The type of object to create</param>
            <returns>The new object or null if the parser should create the object itself</returns>
        </member>
        <member name="T:SnapStream.Serialization.NamespaceMap">
            <summary>
            Specifies how an xml namespace should be mapped into a set of types
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.NamespaceMap.#ctor">
            <summary>
            Initializes a new instance of the NamespaceMap class.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.NamespaceMap.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the NamespaceMap class.
            </summary>
            <param name="namespaceUri">The namespace uri</param>
            <param name="assemblyName">The assembly name</param>
            <param name="assemblyNamespace">The namespace within the assembly to load objects from</param>
        </member>
        <member name="P:SnapStream.Serialization.NamespaceMap.NamespaceUri">
            <summary>
            The xml namespace to map
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.NamespaceMap.AssemblyName">
            <summary>
            The assembly's partial name.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.NamespaceMap.AssemblyNamespace">
            <summary>
            The namespace within the specified assembly that contains the types
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.Mapper">
            <summary>
            Responsible for mapping (namespace, typename) into Type objects
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the Mapper class.
            </summary>
            <param name="assemblyNames">The list of assembly names that should initially be referencable</param>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.#ctor(System.String[],SnapStream.Serialization.NamespaceMap[])">
            <summary>
            Initializes a new instance of the Mapper class.
            </summary>
            <param name="assemblyNames">The list of assembly names that should initially be referencable</param>
            <param name="namespaceMaps">The list of namespace maps that should initially be in effect</param>
        </member>
        <member name="F:SnapStream.Serialization.Mapper.DefaultNamespace">
            <summary>
            The default namespace
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.AddMapping(System.String,System.String,System.String)">
            <summary>
            Adds a new namespace mapping to our table
            </summary>
            <param name="xmlNamespace">the xml namespace uri to map this to</param>
            <param name="clrNamespace">the clr namespace to search</param>
            <param name="assemblyName">the assembly that contains the types</param>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.GetTypeFromFullClassname(System.String,System.String)">
            <summary>
            Given the fully qualified class name and its namespaceUri, 
            the Type of the class will be returned
            </summary>
            <param name="namespaceUri">NamespaceUri that the class belongs to</param>
            <param name="localName">Fully qualified class name</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.GetType(System.String,System.String)">
            <summary>
            Gets the type that maps to the given xml namespace and local name.
            </summary>
            <param name="namespaceUri">The namespace uri of the element to map</param>
            <param name="localName">The name of the element to map</param>
            <returns>The type that the namespace and element name are refering to.</returns>
        </member>
        <member name="M:SnapStream.Serialization.Mapper._GetType(System.String,System.String)">
            <summary>
            Searches the mapped assembies for the specified type.  namespaceUri is used to determine
            which definitions to look through.
            </summary>
            <param name="namespaceUri"></param>
            <param name="localName"></param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.LoadAssemblyFromFile(System.String)">
            <summary>
            Loads an assembly from a file by using the registered assembly path
            </summary>
            <param name="assemblyName">The name of the assembly to load</param>
            <returns>The assembly</returns>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.SetAssemblyPath(System.String,System.String)">
            <summary>
            Used to specify the path that an assembly should be loaded from
            </summary>
            <param name="assemblyName">The partial name of the assembly.  null or Empty strings result in a new default search path</param>
            <param name="assemblyPath">The path</param>
        </member>
        <member name="M:SnapStream.Serialization.Mapper.Combine(SnapStream.Serialization.NamespaceMap[])">
            <summary>
            Incorporates the definitions from one namespace map into this Mapper
            </summary>
            <param name="namespaceMaps">The namespaces to add</param>
            <returns>this object</returns>
        </member>
        <member name="P:SnapStream.Serialization.Mapper.DefaultMapper">
            <summary>
            Gets a mapper that has the default assemblies and namespaces specified
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.Mapper.TwoStringKey">
            <summary>
            Acts as the key into our map
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.ParserContext">
            <summary>
            Used to maintain the state of the parser during a load
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.#ctor">
            <summary>
            Initializes a new instance of the ParserContext class.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.PopScope">
            <summary>
            Pops the top of the context stack
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.PushScope">
            <summary>
            Pushes a new uninitialized entry onto the context stack
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.PushScope(SnapStream.Serialization.XamlNode)">
            <summary>
            Pushes a new node onto the stack but sets the parent to null
            </summary>
            <param name="node">The node to push</param>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.PushScope(SnapStream.Serialization.XamlNode,System.Object)">
            <summary>
            Pushes a new parent and node onto the stack but doesn't touch the BaseUri property
            </summary>
            <param name="node">The node to push</param>
            <param name="parent">The parent to push</param>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.AddNamedObject(System.String,System.Object)">
            <summary>
            Adds a named object so that it can be refered to in other places in the xml file
            </summary>
            <param name="name">The name of the object</param>
            <param name="o">The actual object</param>
            <remarks>
            To use named objects from xml simply use the def:Name attribute on the object that you want
            to be named.  Then anywhere where you would like to reuse that object simply refer to it
            as {name}
            </remarks>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.GetNamedObject(System.String)">
            <summary>
            Retrieves a named object
            </summary>
            <param name="name">The name of the object to look for</param>
            <returns>The object if it exists or null</returns>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.GetObjectName(System.Object)">
            <summary>
            Retrieves the name of the specified object
            </summary>
            <param name="o">The object whose name needs to be found</param>
            <returns>The name of the object if it exists, else null</returns>
        </member>
        <member name="M:SnapStream.Serialization.ParserContext.PeekScope">
            <summary>
            Returns the top item in the context stack
            </summary>
            <returns></returns>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.StringTable">
            <summary>
            Specifies the string table that should be used for doing string substitutions
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.BaseUri">
            <summary>
            Specifies the base url the file is being loaded from.  This should not include the
            filename of the file.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.Mapper">
            <summary>
            The current mapper
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.Parent">
            <summary>
            The current parent
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.Root">
            <summary>
            The root of the object tree.  If this is specified and the root of the xml document being loaded
            specifies a type that is compatible with this object then a root element will not be created
            and the value indicated here will be used instead.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.ParentNode">
            <summary>
            The current parent node.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.ParserContext.ContextStack">
            <summary>
            The context stack which contains ContextStackEntry objects
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.ParserContext.ContextStackEntry">
            <summary>
            Maintains information about a parse operation.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.ParserContext.ContextStackEntry.BaseUri">
            <summary>
            The uri from which this element in the heirarchy was loaded.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.ParserContext.ContextStackEntry.Parent">
            <summary>
            The parent object of the current element.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.ParserContext.ContextStackEntry.ParentNode">
            <summary>
            The parent node of the current node.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.GetDefaultMapperDelegate">
            <summary>
            Represents the method that will be called when the default mapper for an application needs to be retrieved.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.Parser">
            <summary>
            The Parser class provides object loading services from an xml data source.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.Parser.GetDefaultMapper">
            <summary>
            The function that gets called when there is no default mapper specified
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadFile(System.String)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="path">The path of the xml file</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadFile(System.String,System.Object)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="path">The path of the xml file</param>
            <param name="root">The root object that should be used for this file</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadFile(System.String,System.Object,SnapStream.StringTable)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="path">The path of the xml file</param>
            <param name="root">The root object that should be used for this file</param>
            <param name="table">The string table to use for string substitution</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadFile(System.String,SnapStream.Serialization.ParserContext)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="path">The path of the xml file</param>
            <param name="context">The context the parser should use to load the file</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadXml(System.IO.Stream)">
            <summary>
            Loads an object from a stream
            </summary>
            <param name="stream">The stream to read from</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadXml(System.IO.Stream,System.Object)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="stream">The stream to read from</param>
            <param name="root">The root object that should be used for this file</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadXml(System.IO.Stream,System.Object,SnapStream.StringTable)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="stream">The stream to read from</param>
            <param name="root">The root object that should be used for this file</param>
            <param name="table">The string table to use for string substitution</param>
            <returns>the object specified by the xml file</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadXml(System.IO.Stream,SnapStream.Serialization.ParserContext)">
            <summary>
            Loads an object from the filesystem
            </summary>
            <param name="stream">The stream to read from</param>
            <param name="context">The context the parser should use to load the file</param>
            <returns>the object specified by the xml file</returns>
            <remarks>
            If a root object is specified in the provided context and no Mapper is provided then
            this method will attempt to get a public static DefaultMapper property of type Mapper.
            This allows the object being loaded to dictate the namespaces involved.
            </remarks>
        </member>
        <member name="M:SnapStream.Serialization.Parser.AddChild(System.Object,System.Object,SnapStream.Serialization.ParserContext)">
            <summary>
            Performs the work of actually adding the child to the parent via whatever means are required.
            </summary>
            <param name="parent">The parent object</param>
            <param name="child">The child to add</param>
            <param name="context">The current parser context</param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.DoObjectSubstitution(System.String,SnapStream.Serialization.ParserContext)">
            <summary>
            Searches for a given named object and returns the actual object
            </summary>
            <param name="name">The name of the object surrounded by {}</param>
            <param name="context">The current parser context</param>
            <returns>The value if it is found else null</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.DoStringSubstitution(System.String,SnapStream.Serialization.ParserContext)">
            <summary>
            Performs string substitution and will also defer to DoObjectSubstitution if no % are found in the input
            </summary>
            <param name="value">The string to search for references</param>
            <param name="context">The current parser context</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.ConvertValue(System.Object,System.Type,SnapStream.Serialization.ParserContext)">
            <summary>
            Uses TypeConversion to convert a value of one type to another
            </summary>
            <param name="valueToConvert">The actual value to convert</param>
            <param name="typeToConvertTo">The type to convert to</param>
            <param name="context">The current parser context</param>
            <returns>The converted value or null if no appropriate conversion could be found</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.IsPropertyReadOnly(SnapStream.Serialization.XamlPropertyComplexStartNode)">
            <summary>
            Determines whether the property referenced by theNode is read only
            </summary>
            <param name="theNode">The node</param>
            <returns>true if the property is read only, false otherwise</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.SetProperty(SnapStream.Serialization.XamlPropertyComplexStartNode,System.Object,System.Object,SnapStream.Serialization.ParserContext)">
            <summary>
            Sets the value of a property on an object running that value through type conversion first
            </summary>
            <param name="theNode">The node that represents theValue</param>
            <param name="theObject">The object that will have its value set</param>
            <param name="theValue">The value of the property to be set</param>
            <param name="context">The current parser context</param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.CreateObject(System.Type,SnapStream.Serialization.ParserContext,SnapStream.Serialization.XamlNode)">
            <summary>
            Handles the creation of an object.
            </summary>
            <param name="type">The type of object to create</param>
            <param name="context">The current parser context</param>
            <param name="node">The node that forced creation of the object</param>
            <returns>The new object if it is able to be created, else null</returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.ProcessNode(SnapStream.Serialization.XamlNode,SnapStream.Serialization.ParserContext)">
            <summary>
            Processes each node manipulating the context stack as needed
            </summary>
            <param name="node">The node to process</param>
            <param name="context">The current context</param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.ProcessDependencyPropertyAttribute(System.Xml.XmlTextReader,SnapStream.Serialization.ParserContext)">
            <summary>
            Handles the case where a DependencyProperty is being set.
            </summary>
            <param name="reader"></param>
            <param name="context"></param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.ProcessAttributes(System.Xml.XmlTextReader,SnapStream.Serialization.ParserContext)">
            <summary>
            Processes all the attributes on the current node
            </summary>
            <param name="reader">The xml source</param>
            <param name="context">The current parser context</param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.GetMemberInfo(System.Type,System.String,System.Reflection.MemberTypes)">
            <summary>
            Helper to retrieve member info through reflection
            </summary>
            <param name="type">The type to get information for</param>
            <param name="propName">The name of the member</param>
            <param name="types">A bit field indicating the valid member types</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Serialization.Parser.LoadCore(System.Xml.XmlTextReader,SnapStream.Serialization.ParserContext)">
            <summary>
            Handles the core task of reading and processing a xaml document.  This method is really just a lexer that
            passes any tokens it encounters ( in the form of XamlNodes ) to ProcessNode for the actual handling.
            </summary>
            <param name="reader">The xml source</param>
            <param name="context">The current parser context</param>
        </member>
        <member name="M:SnapStream.Serialization.Parser.ParseStringForAttribute(System.String,System.String)">
            <summary>
            Parses a string looking for an attribute
            </summary>
            <param name="attributeName">The name of the attribute</param>
            <param name="stringToParse">The string containing the attribute</param>
            <returns>The value of the attribute if it is specified else null</returns>
        </member>
        <member name="T:SnapStream.Serialization.XamlNodeType">
            <summary>
            Represents the type of a markup node.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.Unknown">
            <summary>
            An unknown node type.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.DocumentStart">
            <summary>
            The start of a document.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.DocumentEnd">
            <summary>
            The end of a document.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.ElementStart">
            <summary>
            The start of an element.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.ElementEnd">
            <summary>
            The end of an element.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.Property">
            <summary>
            A property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyComplexStart">
            <summary>
            The start of a complex property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyComplexEnd">
            <summary>
            The end of a complex property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyArrayStart">
            <summary>
            The start of an <see cref="T:System.Array">Array</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyArrayEnd">
            <summary>
            The end of an <see cref="T:System.Array">Array</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyIListStart">
            <summary>
            The start of an <see cref="T:System.Collections.IList">IList</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyIListEnd">
            <summary>
            The end of an <see cref="T:System.Collections.IList">IList</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyIDictionaryStart">
            <summary>
            The start of an <see cref="T:System.Collections.IDictionary">IDictionary</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PropertyIDictionaryEnd">
            <summary>
            The end of an <see cref="T:System.Collections.IDictionary">IDictionary</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.LiteralContent">
            <summary>
            Literal content.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.Text">
            <summary>
            Textual content.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.RoutedEvent">
            <summary>
            A routed event.  Not used.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.ClrEvent">
            <summary>
            A normal event.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.XmlnsProperty">
            <summary>
            The xmlns property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.XmlAttribute">
            <summary>
            An xml attribute.  Not used.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.ProcessingInstruction">
            <summary>
            A processing instruction.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.IncludeTag">
            <summary>
            An include tag.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.DefTag">
            <summary>
            A tag in the "Definition" namespace.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.DefAttribute">
            <summary>
            An attribute in the "Definition" namespace.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.EndAttributes">
            <summary>
            The end of markup attributes.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.EndStartElement">
            <summary>
            The end of an empty element.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.Language">
            <summary>
            The language.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.PIMapping">
            <summary>
            A mapping processing instruction.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.UnknownTagStart">
            <summary>
            The start of an unknown tag.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.UnknownTagEnd">
            <summary>
            The end of an unknown tag.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.UnknownAttribute">
            <summary>
            An unknown attribute.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNodeType.ProcAttribute">
            <summary>
            A proc attribute.  Not used.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlNode">
            <summary>
            Base node from which all others derive
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNode._token">
            <summary>
            The node type.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNode._depth">
            <summary>
            The depth of this node in the document heirarchy.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNode._lineNumber">
            <summary>
            The line number where this node starts.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlNode._linePosition">
            <summary>
            The position in the line where this node starts.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="M:SnapStream.Serialization.XamlNode.#ctor(SnapStream.Serialization.XamlNodeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlNode class.
            </summary>
            <param name="token">The type of the node</param>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlNode.Depth">
            <summary>
            Gets the depth of this node in the document heirarchy.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlNode.LineNumber">
            <summary>
            Gets the line number where this node starts.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlNode.LinePosition">
            <summary>
            Gets the position in the line where this node starts.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlNode.Token">
            <summary>
            Gets the type of this node.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlAttributeNode">
            <summary>
            The base class for nodes that are represented by simple xml attributes.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlAttributeNode._value">
            <summary>
            The value of this attribute.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlAttributeNode.#ctor(SnapStream.Serialization.XamlNodeType,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlAttributeNode class.
            </summary>
            <param name="token">The node type</param>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="value">The value of the attribute</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlAttributeNode.Value">
            <summary>
            Gets the value of the attribute.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlClrEventNode">
            <summary>
            Represents an event that is being set in markup.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlClrEventNode._eventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlClrEventNode._eventInfo">
            <summary>
            The EventInfo object associated with the event.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlClrEventNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Reflection.EventInfo,System.String)">
            <summary>
            Initializes a new instance of the XamlClrEventNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="eventName">The name of the event</param>
            <param name="eventInfo">The event info</param>
            <param name="value">The value of the attribute</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlClrEventNode.EventInfo">
            <summary>
            Gets the <see cref="P:SnapStream.Serialization.XamlClrEventNode.EventInfo">EventInfo</see> associated with the event.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlClrEventNode.EventName">
            <summary>
            Gets the name of the event.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlDefAttributeNode">
            <summary>
            Represents an attribute appearing in the "Definition" namespace.
            </summary>
            <remarks>
            The "Definition" namespace is a special namespace understood by the <see cref="T:SnapStream.Serialization.Parser">Parser</see>
            and allows control over certain aspects of parsing.
            </remarks>
        </member>
        <member name="F:SnapStream.Serialization.XamlDefAttributeNode._name">
            <summary>
            The name of the attribute.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlDefAttributeNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlDefAttributeNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="name">The name of the attribute</param>
            <param name="value">The value of the attribute</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlDefAttributeNode.Name">
            <summary>
            Gets the name of the attribute.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlDefTagNode">
            <summary>
            Represents an xml element appearing in the "Definition" namespace.
            </summary>
            <remarks>
            The "Definition" namespace is a special namespace understood by the <see cref="T:SnapStream.Serialization.Parser">Parser</see>
            and allows control over certain aspects of parsing.
            </remarks>
        </member>
        <member name="F:SnapStream.Serialization.XamlDefTagNode._isEmptyElement">
            <summary>
            Indicates whether or not this element was empty.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlDefTagNode._xmlReader">
            <summary>
            The XmlReader that the element was loaded from.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlDefTagNode.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Xml.XmlReader,System.String)">
            <summary>
            Initializes a new instance of the XamlDefTagNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="isEmptyElement">Whether or not the element was empty</param>
            <param name="xmlReader">The XmlReader the element was loaded from</param>
            <param name="defTagName">The name of the element</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlDefTagNode.IsEmptyElement">
            <summary>
            Gets a value indicating whether or not the element is empty.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlDefTagNode.XmlReader">
            <summary>
            Gets the XmlReader object the element was loaded from.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlUnknownAttributeNode">
            <summary>
            Represents an unknown attribute in Xaml. This may be handled by a custom Serializer
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlUnknownAttributeNode._name">
            <summary>
            The name of the unknown attribute.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlUnknownAttributeNode._namespaceUri">
            <summary>
            The namespace uri of the unknown attribute.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlUnknownAttributeNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlUnknownAttributeNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="namespaceUri">The xml namespace uri</param>
            <param name="name">The name of the attribute</param>
            <param name="value">The value of the attribute</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlUnknownAttributeNode.Name">
            <summary>
            Gets the name of the unknown attribute.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlUnknownAttributeNode.NamespaceUri">
            <summary>
            Gets the namespace uri of the unknown attribute.  This may be empty.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlUnknownTagStartNode">
            <summary>
            Represents the start of an unknown element tag in Xaml. This may be handled by a custom Serializer
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlUnknownTagStartNode._namespaceUri">
            <summary>
            The namespace uri of the unknown tag.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlUnknownTagStartNode._name">
            <summary>
            The name of the unknown tag.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlUnknownTagStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlUnknownTagStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="namespaceUri">The xml namespace uri</param>
            <param name="name">The name of the tag</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlUnknownTagStartNode.Name">
            <summary>
            Gets the name of the unknown tag.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlUnknownTagStartNode.NamespaceUri">
            <summary>
            Gets the namespace uri of the unknown tag.  This may be empty.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlUnknownTagEndNode">
            <summary>
            Represents the end of an unknown element tag in Xaml. This may be handled by a custom Serializer
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlUnknownTagEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of the XamlUnknownTagEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlDocumentStartNode">
            <summary>
            Represents the start of a Xaml document.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlDocumentStartNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of the XamlDocumentStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlDocumentEndNode">
            <summary>
            Represents the end of a Xaml document.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlDocumentEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of the XamlDocumentEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlElementStartNode">
            <summary>
            Represents the start of an element in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlElementStartNode._assemblyName">
            <summary>
            The name of the assembly which the object is defined in.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlElementStartNode._elementType">
            <summary>
            The type of the element.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlElementStartNode._serializerType">
            <summary>
            The type of the serializer.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlElementStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of a XamlElementStartNode
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="assemblyName">The name of the assembly</param>
            <param name="typeFullName">The full name of the type</param>
            <param name="elementType">The type of the element</param>
            <param name="serializerType">The type of the serializer for the element</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlElementStartNode.AssemblyName">
            <summary>
            Gets the name of the assembly the object is defined in.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlElementStartNode.ElementType">
            <summary>
            Gets the type of the element.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlElementStartNode.SerializerType">
            <summary>
            Gets the type of the serializer for the element.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlElementStartNode.SerializerTypeFullName">
            <summary>
            Gets the full type name of the serializer for the element.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlElementStartNode.TypeFullName">
            <summary>
            Gets the full type name of the element.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlElementEndNode">
            <summary>
            Represents the end of an element in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlElementEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of a XamlElementEndNode
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlEndAttributesNode">
            <summary>
            Represents the end of any attribute nodes on an element in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlEndAttributesNode.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of a XamlEndAttributesNode
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="compact">Specifies whether or not the attributes were compact</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlEndAttributesNode.IsCompact">
            <summary>
            Gets whether or not this node is the end of a compact attribute.
            </summary>
            <remarks>
            Compact attributes are not supported.  This property always returns false.
            </remarks>
        </member>
        <member name="T:SnapStream.Serialization.XamlEndStartElementNode">
            <summary>
            Represents the end of an empty element node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlEndStartElementNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of a XamlEndStartElementNode
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlIncludeTagNode">
            <summary>
            Represents an include tag node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlIncludeTagNode._resourceUri">
            <summary>
            The uri to the resource to be included.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlIncludeTagNode.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlIncludeTagNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="resourceUri">The uri of the resource to include</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlIncludeTagNode.ResourceUri">
            <summary>
            Gets the uri of the resource to include.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlLanguageNode">
            <summary>
            Represents a language node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlLanguageNode._language">
            <summary>
            The language.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlLanguageNode.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlLanguageNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="language">The language</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlLanguageNode.Language">
            <summary>
            Gets the language.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlLiteralContentNode">
            <summary>
            Represents literal content in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlLiteralContentNode._content">
            <summary>
            The literal content
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlLiteralContentNode.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlLanguageNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="content">The literal content</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlLiteralContentNode.Content">
            <summary>
            Gets the literal content.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlPIMappingNode">
            <summary>
            Represents a mapping node in Xaml.XamlPIMappingNode which maps an xml namespace to a clr namespace and assembly
            </summary>
            <remarks>
            PI Mappings allow you to declaratively reference components that are not in the default namespace.
            </remarks>
        </member>
        <member name="F:SnapStream.Serialization.XamlPIMappingNode._assemblyName">
            <summary>
            The assembly name that the mapping refers to.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPIMappingNode._clrNamespace">
            <summary>
            The namespace within the assembly that contains the components to be referenced.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPIMappingNode._xmlNamespace">
            <summary>
            The xml namespace that will be used to refer to this mapping.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPIMappingNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlPIMappingNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="xmlnsValue">The xml namespace</param>
            <param name="clrnsValue">The CLR namespace</param>
            <param name="assyValue">The assembly name</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlPIMappingNode.AssemblyName">
            <summary>
            Gets the assembly name that the mapping refers to.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPIMappingNode.ClrNamespace">
            <summary>
            Gets the namespace within the assembly that the mapping refers to.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPIMappingNode.XmlNamespace">
            <summary>
            Gets the xml namespace that will be used in markup to refer to objects in the specified namespace and assembly.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyComplexStartNode">
            <summary>
            Represents the start of complex property node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyComplexStartNode._assembly">
            <summary>
            The assembly that the property is defined in.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyComplexStartNode._dpOrMiOrPiOrFi">
            <summary>
            The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyComplexStartNode._declaringType">
            <summary>
            The type that declares the property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyComplexStartNode._propType">
            <summary>
            The type of the property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyComplexStartNode._propName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyComplexStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyComplexStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPiOrFi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyComplexStartNode.#ctor(SnapStream.Serialization.XamlNodeType,System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyComplexStartNode class.
            </summary>
            <param name="token">The type of the node</param>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPiOrFi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.Assembly">
            <summary>
            Gets the assembly the property is defined in.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.AssemblyName">
            <summary>
            Gets the name of the assembly the property is defined in.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.AttachedPropertySetter">
            <summary>
            Gets the property as a MethodInfo.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.DependencyProperty">
            <summary>
            Gets the property as a DependencyProperty.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.DpOrMiOrPiOrFi">
            <summary>
            Gets the object that represents the property to the parser.
            </summary>
            <remarks>
            This property can be one of several different types.  To access a type specific
            property info use one of <see cref="P:SnapStream.Serialization.XamlPropertyComplexStartNode.AttachedPropertySetter">AttachedPropertySetter</see>,
            <see cref="P:SnapStream.Serialization.XamlPropertyComplexStartNode.DependencyProperty">DependencyProperty</see>
            </remarks>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.FieldInfo">
            <summary>
            Gets the property information as a FieldInfo.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.DeclaringType">
            <summary>
            Gets the type that declares the property.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.PropertyInfo">
            <summary>
            Gets the property information as a PropertyInfo.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyComplexStartNode.TypeFullName">
            <summary>
            Gets the full name of the type that declares the property.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyComplexEndNode">
            <summary>
            Represents the end of a complex property node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyComplexEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlPropertyComplexEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyArrayStartNode">
            <summary>
            Represents the start of an array node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyArrayStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyArrayStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyArrayEndNode">
            <summary>
            Represents the end of an array node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyArrayEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlPropertyArrayEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyIDictionaryStartNode">
            <summary>
            Represents the start of a dictionary node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyIDictionaryStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyIDictionaryStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyIDictionaryEndNode">
            <summary>
            Represents the end of an array node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyIDictionaryEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlPropertyIDictionaryEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyIListStartNode">
            <summary>
            Represents the start of an IList or IAddChild node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyIListStartNode.#ctor(System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyIListStartNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyIListEndNode">
            <summary>
            Represents the end of an IList or IAddChild node in Xaml.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyIListEndNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the XamlPropertyIListEndNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
        </member>
        <member name="T:SnapStream.Serialization.XamlPropertyNode">
            <summary>
            Represents a property node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyNode._value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlPropertyNode._namespaceUri">
            <summary>
            The namespace uri.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlPropertyNode.#ctor(System.Int32,System.Int32,System.Int32,System.Object,System.Reflection.Assembly,System.Type,System.Type,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlPropertyNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="dpOrMiOrPi">The DependencyProperty or MethodInfo or PropertyInfo or FieldInfo object</param>
            <param name="assembly">The assembly that the property is defined in</param>
            <param name="declaringType">The type that declares the property</param>
            <param name="propType">The type of the property</param>
            <param name="propName">The name of the property</param>
            <param name="value">The value of the property</param>
            <param name="namespaceUri">The namespace uri the property was defined in</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyNode.NamespaceUri">
            <summary>
            Gets the namespace uri the property was defined in.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlPropertyNode.Value">
            <summary>
            Gets the value of the property.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlTextNode">
            <summary>
            Represents a text node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlTextNode._text">
            <summary>
            The text of the node.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlTextNode.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlTextNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="text">The text of the node</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlTextNode.Text">
            <summary>
            Gets the text associated with the node.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlXmlnsPropertyNode">
            <summary>
            Represents an xmlns property node in Xaml.
            </summary>
            <remarks>
            This node will appear anytime an xmlns declaration is made inside a Xaml document.
            </remarks>
        </member>
        <member name="F:SnapStream.Serialization.XamlXmlnsPropertyNode._prefix">
            <summary>
            The namespace prefix.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlXmlnsPropertyNode._namespaceUri">
            <summary>
            The namespace uri.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlXmlnsPropertyNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlXmlnsPropertyNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="prefix">The namespace prefix</param>
            <param name="namespaceUri">The namespace uri</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlXmlnsPropertyNode.NamespaceUri">
            <summary>
            Gets the namespace uri associated with the xmlns declaration.
            </summary>
        </member>
        <member name="P:SnapStream.Serialization.XamlXmlnsPropertyNode.Prefix">
            <summary>
            Gets the namespace prefix associated with the xmlns declaration.
            </summary>
        </member>
        <member name="T:SnapStream.Serialization.XamlProcessingInstructionNode">
            <summary>
            Represents a processing instruction node in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlProcessingInstructionNode._target">
            <summary>
            The target of the PI.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlProcessingInstructionNode._content">
            <summary>
            The content of the PI.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlProcessingInstructionNode.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the XamlProcessingInstructionNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="target">The target of the PI</param>
            <param name="content">The content of the PI</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlProcessingInstructionNode.Target">
            <summary>
            Gets the target of the processing instruction.
            </summary>
            <remarks>
            The target is the name immediately following the start of a processing instruction declaration.  So in
            the processing instruction &lt;?Mapping XmlNamespace='...' ?&gt; the target would be "Mapping".
            </remarks>
        </member>
        <member name="P:SnapStream.Serialization.XamlProcessingInstructionNode.Content">
            <summary>
            Gets the content of the processing instruction.
            </summary>
            <remarks>
            The content is the data immediately following the target of a processing instruction declaration.  So in
            the processing instruction &lt;?Mapping XmlNamespace='...' ?&gt; the content would be "XmlNamespace='...'".
            </remarks>
        </member>
        <member name="T:SnapStream.Serialization.XamlCommentNode">
            <summary>
            Represents a comment in Xaml.
            </summary>
        </member>
        <member name="F:SnapStream.Serialization.XamlCommentNode._comment">
            <summary>
            The contents of the comment.
            </summary>
        </member>
        <member name="M:SnapStream.Serialization.XamlCommentNode.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the XamlCommentNode class.
            </summary>
            <param name="lineNumber">The line number</param>
            <param name="linePosition">The line position</param>
            <param name="depth">The depth</param>
            <param name="comment">The contents of the comment</param>
        </member>
        <member name="P:SnapStream.Serialization.XamlCommentNode.Comment">
            <summary>
            Gets the contents of the comment.
            </summary>
        </member>
        <member name="T:SnapStream.Util.CommandLineParser">
            <summary>
            Takes an array of string objects and parses them into key value pairs appropriately
            </summary>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.#ctor">
            <summary>
            Initializes a new instance of the CommandLineParser class.
            </summary>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.GetCommandLineArgs">
            <summary>
            Gets the command line args that were passed to the current process
            </summary>
            <returns>
            string[] with the command line parameters
            </returns>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.GetCommandLineArgsAsString">
            <summary>
            Gets the command line args that were passed to the current process
            </summary>
            <returns>
            single string that has all command line parameters separated by a space
            arguments that contain a space will be wrapped in double quotes
            </returns>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.GetCommandLinePairs">
            <summary>
            Gets the current process command line arguments and parses them into key value pairs
            </summary>
            <returns>
            Hashtable of key value pairs
            </returns>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.GetCommandLinePairs(System.String)">
            <summary>
            Receives a string representing the command line and parses it into key value pairs
            </summary>
            <returns>
            Hashtable of key value pairs
            </returns>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.Parse(System.String[])">
            <summary>
            Parses command line arguments into a <see cref="T:System.Collections.Hashtable">Hashtable</see>.
            </summary>
            <param name="args">The command line arguments to parse</param>
            <returns>A Hashtable that contains the command line pairs.</returns>
        </member>
        <member name="M:SnapStream.Util.CommandLineParser.GetCommandLinePairsHelper(System.String[])">
            <summary>
            Helper function that takes a string array of command line parameters (in the order that 
            they were passed in) and returns a hashtable of key value pairs
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:SnapStream.Util.FireflyButtonType">
            <summary>
            Defines the category of a Firefly button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonType.Launcher">
            <summary>
            Launcer
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonType.Special">
            <summary>
            Special
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonType.UI">
            <summary>
            UI
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:SnapStream.Util.FireflyButtonState">
            <summary>
            Defines the state of a Firefly button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonState.None">
            <summary>
            The state of the button is unknown
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonState.Down">
            <summary>
            The button is pressed
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonState.Repeat">
            <summary>
            The button is pressed and being held down
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonState.Up">
            <summary>
            The button is not pressed
            </summary>
        </member>
        <member name="T:SnapStream.Util.FireflyButtonActivation">
            <summary>
            Defines the activation state for a Firefly button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.None">
            <summary>
            No activation
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.Down">
            <summary>
            Activate when the button is pressed
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.Repeat">
            <summary>
            Activate when the button is held down
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.Up">
            <summary>
            Activate when the button is released
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.DownRepeat">
            <summary>
            Activate when the button is pressed and held
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.DownUp">
            <summary>
            Activate when the button is pressed and when it is released
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.DownRepeatUp">
            <summary>
            Activate when the button is pressed, held or released
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButtonActivation.RepeatUp">
            <summary>
            Activate when the button is held down or released
            </summary>
        </member>
        <member name="T:SnapStream.Util.FireflyButton">
            <summary>
            Defines the type of a Firefly button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.None">
            <summary>
            No button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Close">
            <summary>
            The "Close" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Maximize">
            <summary>
            The "Maximize" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Play">
            <summary>
            The "Play" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Pause">
            <summary>
            The "Pause" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Stop">
            <summary>
            The "Stop" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.FastForward">
            <summary>
            The "Fast Foward" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Rewind">
            <summary>
            The "Rewind" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.SkipForward">
            <summary>
            The "Skip Forward" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.SkipBack">
            <summary>
            The "Skip Back" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Record">
            <summary>
            The "Record" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number0">
            <summary>
            The "0" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number1">
            <summary>
            The "1" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number2">
            <summary>
            The "2" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number3">
            <summary>
            The "3" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number4">
            <summary>
            The "4" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number5">
            <summary>
            The "5" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number6">
            <summary>
            The "6" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number7">
            <summary>
            The "7" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number8">
            <summary>
            The "8" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Number9">
            <summary>
            The "9" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.ChannelUp">
            <summary>
            The "Channel Up" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.ChannelDown">
            <summary>
            The "Channel Down" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.ChannelRecall">
            <summary>
            The "Back" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.ChannelEnter">
            <summary>
            The "Ent" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.VolumeUp">
            <summary>
            The "Volume Up" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.VolumeDown">
            <summary>
            The "Volume Down" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Mute">
            <summary>
            The "Mute" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Info">
            <summary>
            The "Info" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Options">
            <summary>
            The "Option" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Menu">
            <summary>
            The "Menu" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Exit">
            <summary>
            The "Exit" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.OK">
            <summary>
            The "OK" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Firefly">
            <summary>
            The "Firefly" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Up">
            <summary>
            The "Up" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Down">
            <summary>
            The "Down" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Left">
            <summary>
            The "Left" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Right">
            <summary>
            The "Right" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Music">
            <summary>
            The "Music" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Photos">
            <summary>
            The "Photos" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.DVD">
            <summary>
            The "DVD" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.TV">
            <summary>
            The "TV" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Video">
            <summary>
            The "Video" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Help">
            <summary>
            The "Help" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.Mode">
            <summary>
            The "Mouse" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.A">
            <summary>
            The "A" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.B">
            <summary>
            The "B" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.C">
            <summary>
            The "C" button
            </summary>
        </member>
        <member name="F:SnapStream.Util.FireflyButton.D">
            <summary>
            The "D" button
            </summary>
        </member>
        <member name="T:SnapStream.Util.DISPATCH">
            <summary>
            Defines constants used with the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/automat/htm/chap5_78v9.asp">IDispatch</see> interface.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DISPATCH.METHOD">
            <summary>
            DISPATCH_METHOD
            </summary>
        </member>
        <member name="F:SnapStream.Util.DISPATCH.PROPERTYGET">
            <summary>
            DISPATCH_PROPERTYGET
            </summary>
        </member>
        <member name="F:SnapStream.Util.DISPATCH.PROPERTYPUT">
            <summary>
            DISPATCH_PROPERTYPUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.DISPATCH.PROPERTYPUTREF">
            <summary>
            DISPATCH_PROPERTYPUTREF
            </summary>
        </member>
        <member name="T:SnapStream.Util.HC">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/hooks.asp">Windows Hooks</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.ACTION">
            <summary>
            HC_ACTION
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.GETNEXT">
            <summary>
            HC_GETNEXT
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.SKIP">
            <summary>
            HC_SKIP
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.NOREMOVE">
            <summary>
            HC_NOREMOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.NOREM">
            <summary>
            HC_NOREM
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.SYSMODALON">
            <summary>
            HC_SYSMODALON
            </summary>
        </member>
        <member name="F:SnapStream.Util.HC.SYSMODALOFF">
            <summary>
            HC_SYSMODALOFF
            </summary>
        </member>
        <member name="T:SnapStream.Util.HSHELL">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/shellproc.asp">Shell Hooks</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.WINDOWCREATED">
            <summary>
            HSHELL_WINDOWCREATED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.WINDOWDESTROYED">
            <summary>
            HSHELL_WINDOWDESTROYED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.ACTIVATESHELLWINDOW">
            <summary>
            HSHELL_ACTIVATESHELLWINDOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.WINDOWACTIVATED">
            <summary>
            HSHELL_WINDOWACTIVATED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.GETMINRECT">
            <summary>
            HSHELL_GETMINRECT
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.REDRAW">
            <summary>
            HSHELL_REDRAW
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.TASKMAN">
            <summary>
            HSHELL_TASKMAN
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.LANGUAGE">
            <summary>
            HSHELL_LANGUAGE
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.SYSMENU">
            <summary>
            HSHELL_SYSMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.ENDTASK">
            <summary>
            HSHELL_ENDTASK
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.ACCESSIBILITYSTATE">
            <summary>
            HSHELL_ACCESSIBILITYSTATE
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.APPCOMMAND">
            <summary>
            HSHELL_APPCOMMAND
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.WINDOWREPLACED">
            <summary>
            HSHELL_WINDOWREPLACED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.WINDOWREPLACING">
            <summary>
            HSHELL_WINDOWREPLACING
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.HIGHBIT">
            <summary>
            HSHELL_HIGHBIT
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.FLASH">
            <summary>
            HSHELL_FLASH
            </summary>
        </member>
        <member name="F:SnapStream.Util.HSHELL.RUDEAPPACTIVATED">
            <summary>
            HSHELL_RUDEAPPACTIVATED
            </summary>
        </member>
        <member name="T:SnapStream.Util.HCBT">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/cbtproc.asp">Computer Based Training Hooks</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.MOVESIZE">
            <summary>
            HCBT_MOVESIZE
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.MINMAX">
            <summary>
            HCBT_MINMAX
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.QS">
            <summary>
            HCBT_QS
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.CREATEWND">
            <summary>
            HCBT_CREATEWND
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.DESTROYWND">
            <summary>
            HCBT_DESTROYWND
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.ACTIVATE">
            <summary>
            HCBT_ACTIVATE
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.CLICKSKIPPED">
            <summary>
            HCBT_CLICKSKIPPED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.KEYSKIPPED">
            <summary>
            HCBT_KEYSKIPPED
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.SYSCOMMAND">
            <summary>
            HCBT_SYSCOMMAND
            </summary>
        </member>
        <member name="F:SnapStream.Util.HCBT.SETFOCUS">
            <summary>
            HCBT_SETFOCUS
            </summary>
        </member>
        <member name="T:SnapStream.Util.WH">
            <summary>
            Defines the type of a <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/hooks.asp">Windows Hook</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MIN">
            <summary>
            WH_MIN
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MSGFILTER">
            <summary>
            WH_MSGFILTER
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.JOURNALRECORD">
            <summary>
            WH_JOURNALRECORD
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.JOURNALPLAYBACK">
            <summary>
            WH_JOURNALPLAYBACK
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.KEYBOARD">
            <summary>
            WH_KEYBOARD
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.GETMESSAGE">
            <summary>
            WH_GETMESSAGE
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.CALLWNDPROC">
            <summary>
            WH_CALLWNDPROC
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.CBT">
            <summary>
            WH_CBT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.SYSMSGFILTER">
            <summary>
            WH_SYSMSGFILTER
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MOUSE">
            <summary>
            WH_MOUSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.HARDWARE">
            <summary>
            WH_HARDWARE
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.DEBUG">
            <summary>
            WH_DEBUG
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.SHELL">
            <summary>
            WH_SHELL
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.FOREGROUNDIDLE">
            <summary>
            WH_FOREGROUNDIDLE
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.CALLWNDPROCRET">
            <summary>
            WH_CALLWNDPROCRET
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.KEYBOARD_LL">
            <summary>
            WH_KEYBOARD_LL
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MOUSE_LL">
            <summary>
            WH_MOUSE_LL
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MAX">
            <summary>
            WH_MAX
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MINHOOK">
            <summary>
            WH_MINHOOK
            </summary>
        </member>
        <member name="F:SnapStream.Util.WH.MAXHOOK">
            <summary>
            WH_MAXHOOK
            </summary>
        </member>
        <member name="T:SnapStream.Util.CALLBACK">
            <summary>
            Defines callback types used with <see href="http://msdn.microsoft.com/library/en-us/dnanchor/html/anch_WindowsMultimedia.asp">Windows Multimedia</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.TYPEMASK">
            <summary>
            CALLBACK_TYPEMASK
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.NULL">
            <summary>
            CALLBACK_NULL
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.WINDOW">
            <summary>
            CALLBACK_WINDOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.TASK">
            <summary>
            CALLBACK_TASK
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.FUNCTION">
            <summary>
            CALLBACK_FUNCTION
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.THREAD">
            <summary>
            CALLBACK_THREAD
            </summary>
        </member>
        <member name="F:SnapStream.Util.CALLBACK.EVENT">
            <summary>
            CALLBACK_EVENT
            </summary>
        </member>
        <member name="T:SnapStream.Util.MM">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/dnanchor/html/anch_WindowsMultimedia.asp">Windows Multimedia</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY1MOVE">
            <summary>
            MM_JOY1MOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY2MOVE">
            <summary>
            MM_JOY2MOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY1ZMOVE">
            <summary>
            MM_JOY1ZMOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY2ZMOVE">
            <summary>
            MM_JOY2ZMOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY1BUTTONDOWN">
            <summary>
            MM_JOY1BUTTONDOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY2BUTTONDOWN">
            <summary>
            MM_JOY2BUTTONDOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY1BUTTONUP">
            <summary>
            MM_JOY1BUTTONUP
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.JOY2BUTTONUP">
            <summary>
            MM_JOY2BUTTONUP
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MCINOTIFY">
            <summary>
            MM_MCINOTIFY
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WOM_OPEN">
            <summary>
            MM_WOM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WOM_CLOSE">
            <summary>
            MM_WOM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WOM_DONE">
            <summary>
            MM_WOM_DONE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WIM_OPEN">
            <summary>
            MM_WIM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WIM_CLOSE">
            <summary>
            MM_WIM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.WIM_DATA">
            <summary>
            MM_WIM_DATA
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_OPEN">
            <summary>
            MM_MIM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_CLOSE">
            <summary>
            MM_MIM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_DATA">
            <summary>
            MM_MIM_DATA
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_LONGDATA">
            <summary>
            MM_MIM_LONGDATA
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_ERROR">
            <summary>
            MM_MIM_ERROR
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_LONGERROR">
            <summary>
            MM_MIM_LONGERROR
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MOM_OPEN">
            <summary>
            MM_MOM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MOM_CLOSE">
            <summary>
            MM_MOM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MOM_DONE">
            <summary>
            MM_MOM_DONE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.DRVM_OPEN">
            <summary>
            MM_DRVM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.DRVM_CLOSE">
            <summary>
            MM_DRVM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.DRVM_DATA">
            <summary>
            MM_DRVM_DATA
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.DRVM_ERROR">
            <summary>
            MM_DRVM_ERROR
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.STREAM_OPEN">
            <summary>
            MM_STREAM_OPEN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.STREAM_CLOSE">
            <summary>
            MM_STREAM_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.STREAM_DONE">
            <summary>
            MM_STREAM_DONE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.STREAM_ERROR">
            <summary>
            MM_STREAM_ERROR
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MOM_POSITIONCB">
            <summary>
            MM_MOM_POSITIONCB
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MCISIGNAL">
            <summary>
            MM_MCISIGNAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIM_MOREDATA">
            <summary>
            MM_MIM_MOREDATA
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIXM_LINE_CHANGE">
            <summary>
            MM_MIXM_LINE_CHANGE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MM.MIXM_CONTROL_CHANGE">
            <summary>
            MM_MIXM_CONTROL_CHANGE
            </summary>
        </member>
        <member name="T:SnapStream.Util.REFRESH">
            <summary>
            Defines constants used with the <see href="http://msdn.microsoft.com/workshop/browser/webbrowser/reference/ifaces/iwebbrowser2/refresh2.asp">IWebBrowser2.Refresh</see> method.
            </summary>
        </member>
        <member name="F:SnapStream.Util.REFRESH.NORMAL">
            <summary>
            Refresh that does not include sending the HTTP "pragma:nocache" header to the server
            </summary>
        </member>
        <member name="F:SnapStream.Util.REFRESH.IFEXPIRED">
            <summary>
            Refresh that occurs if the page has expired
            </summary>
        </member>
        <member name="F:SnapStream.Util.REFRESH.CONTINUE">
            <summary>
            For internal use only; do not use
            </summary>
        </member>
        <member name="F:SnapStream.Util.REFRESH.COMPLETELY">
            <summary>
            Refresh that includes sending a "pragma:nocache" header to the server (HTTP URLs only)
            </summary>
        </member>
        <member name="T:SnapStream.Util.CS">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/window_89windowclasse.asp">Window Classes</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.VREDRAW">
            <summary>
            CS_VREDRAW
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.HREDRAW">
            <summary>
            CS_HREDRAW
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.DBLCLKS">
            <summary>
            CS_DBLCLKS
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.OWNDC">
            <summary>
            CS_OWNDC
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.CLASSDC">
            <summary>
            CS_CLASSDC
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.PARENTDC">
            <summary>
            CS_PARENTDC
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.NOCLOSE">
            <summary>
            CS_NOCLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.SAVEBITS">
            <summary>
            CS_SAVEBITS
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.BYTEALIGNCLIENT">
            <summary>
            CS_BYTEALIGNCLIENT
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.BYTEALIGNWINDOW">
            <summary>
            CS_BYTEALIGNWINDOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.CS.GLOBALCLASS">
            <summary>
            CS_GLOBALCLASS
            </summary>
        </member>
        <member name="T:SnapStream.Util.VK">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/winui/winui/WindowsUserInterface/UserInput/VirtualKeyCodes.asp">Virtual Keys</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.ADD">
            <summary>
            VK_ADD
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.APPS">
            <summary>
            VK_APPS
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.ATTN">
            <summary>
            VK_ATTN
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.BACK">
            <summary>
            VK_BACK
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.CANCEL">
            <summary>
            VK_CANCEL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.CAPITAL">
            <summary>
            VK_CAPITAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.CLEAR">
            <summary>
            VK_CLEAR
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.CONTROL">
            <summary>
            VK_CONTROL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.CRSEL">
            <summary>
            VK_CRSEL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.DECIMAL">
            <summary>
            VK_DECIMAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.DELETE">
            <summary>
            VK_DELETE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.DIVIDE">
            <summary>
            VK_DIVIDE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.DOWN">
            <summary>
            VK_DOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.END">
            <summary>
            VK_END
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.EREOF">
            <summary>
            VK_EREOF
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.ESCAPE">
            <summary>
            VK_ESCAPE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.EXECUTE">
            <summary>
            VK_EXECUTE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.EXSEL">
            <summary>
            VK_EXSEL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F1">
            <summary>
            VK_F1
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F10">
            <summary>
            VK_F10
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F11">
            <summary>
            VK_F11
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F12">
            <summary>
            VK_F12
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F13">
            <summary>
            VK_F13
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F14">
            <summary>
            VK_F14
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F15">
            <summary>
            VK_F15
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F16">
            <summary>
            VK_F16
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F17">
            <summary>
            VK_F17
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F18">
            <summary>
            VK_F18
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F19">
            <summary>
            VK_F19
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F2">
            <summary>
            VK_F2
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F20">
            <summary>
            VK_F20
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F21">
            <summary>
            VK_F21
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F22">
            <summary>
            VK_F22
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F23">
            <summary>
            VK_F23
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F24">
            <summary>
            VK_F24
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F3">
            <summary>
            VK_F3
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F4">
            <summary>
            VK_F4
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F5">
            <summary>
            VK_F5
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F6">
            <summary>
            VK_F6
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F7">
            <summary>
            VK_F7
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F8">
            <summary>
            VK_F8
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.F9">
            <summary>
            VK_F9
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.HELP">
            <summary>
            VK_HELP
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.HOME">
            <summary>
            VK_HOME
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.INSERT">
            <summary>
            VK_INSERT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.LCONTROL">
            <summary>
            VK_LCONTROL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.LEFT">
            <summary>
            VK_LEFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.LMENU">
            <summary>
            VK_LMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.LSHIFT">
            <summary>
            VK_LSHIFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.LWIN">
            <summary>
            VK_LWIN
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.MENU">
            <summary>
            VK_MENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.MULTIPLY">
            <summary>
            VK_MULTIPLY
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NEXT">
            <summary>
            VK_NEXT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NONAME">
            <summary>
            VK_NONAME
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMLOCK">
            <summary>
            VK_NUMLOCK
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD0">
            <summary>
            VK_NUMPAD0
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD1">
            <summary>
            VK_NUMPAD1
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD2">
            <summary>
            VK_NUMPAD2
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD3">
            <summary>
            VK_NUMPAD3
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD4">
            <summary>
            VK_NUMPAD4
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD5">
            <summary>
            VK_NUMPAD5
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD6">
            <summary>
            VK_NUMPAD6
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD7">
            <summary>
            VK_NUMPAD7
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD8">
            <summary>
            VK_NUMPAD8
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.NUMPAD9">
            <summary>
            VK_NUMPAD9
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.OEM_CLEAR">
            <summary>
            VK_OEM_CLEAR
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PA1">
            <summary>
            VK_PA1
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PAUSE">
            <summary>
            VK_PAUSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PLAY">
            <summary>
            VK_PLAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PRINT">
            <summary>
            VK_PRINT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PRIOR">
            <summary>
            VK_PRIOR
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.PROCESSKEY">
            <summary>
            VK_PROCESSKEY
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RCONTROL">
            <summary>
            VK_RCONTROL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RETURN">
            <summary>
            VK_RETURN
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RIGHT">
            <summary>
            VK_RIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RMENU">
            <summary>
            VK_///
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RSHIFT">
            <summary>
            VK_RSHIFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.RWIN">
            <summary>
            VK_RWIN
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SCROLL">
            <summary>
            VK_SCROLL
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SELECT">
            <summary>
            VK_SELECT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SEPARATOR">
            <summary>
            VK_SEPARATOR
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SHIFT">
            <summary>
            VK_SHIFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SNAPSHOT">
            <summary>
            VK_SNAPSHOT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SPACE">
            <summary>
            VK_SPACE
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.SUBTRACT">
            <summary>
            VK_SUBTRACT
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.TAB">
            <summary>
            VK_TAB
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.UP">
            <summary>
            VK_UP
            </summary>
        </member>
        <member name="F:SnapStream.Util.VK.ZOOM">
            <summary>
            VK_ZOOM
            </summary>
        </member>
        <member name="T:SnapStream.Util.BitBlt">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/gdi/bitmaps_87eb.asp">GDI Blitting Functions</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.SRCCOPY">
            <summary>
            SRCCOPY
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.SRCPAINT">
            <summary>
            SRCPAINT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.SRCAND">
            <summary>
            SRCAND
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.SRCINVERT">
            <summary>
            SRCINVERT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.SRCERASE">
            <summary>
            SRCERASE
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.NOTSRCCOPY">
            <summary>
            NOTSRCCOPY
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.NOTSRCERASE">
            <summary>
            NOTSRCERASE
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.MERGECOPY">
            <summary>
            MERGECOPY
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.MERGEPAINT">
            <summary>
            MERGEPAINT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.PATCOPY">
            <summary>
            PATCOPY
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.PATPAINT">
            <summary>
            PATPAINT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.PATINVERT">
            <summary>
            PATINVERT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.DSTINVERT">
            <summary>
            DSTINVERT
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.BLACKNESS">
            <summary>
            BLACKNESS
            </summary>
        </member>
        <member name="F:SnapStream.Util.BitBlt.WHITENESS">
            <summary>
            WHITENESS
            </summary>
        </member>
        <member name="T:SnapStream.Util.WMSZ">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowmessages/wm_sizing.asp">WM_SIZING</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.LEFT">
            <summary>
            WMSZ_LEFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.RIGHT">
            <summary>
            WMSZ_RIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.TOP">
            <summary>
            WMSZ_TOP
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.TOPLEFT">
            <summary>
            WMSZ_TOPLEFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.TOPRIGHT">
            <summary>
            WMSZ_TOPRIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.BOTTOM">
            <summary>
            WMSZ_BOTTOM
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.BOTTOMLEFT">
            <summary>
            WMSZ_BOTTOMLEFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.WMSZ.BOTTOMRIGHT">
            <summary>
            WMSZ_BOTTOMRIGHT
            </summary>
        </member>
        <member name="T:SnapStream.Util.GW">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindow.asp">GetWindow</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.HWNDFIRST">
            <summary>
            GW_HWNDFIRST
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.HWNDLAST">
            <summary>
            GW_HWNDLAST
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.HWNDNEXT">
            <summary>
            GW_HWNDNEXT
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.HWNDPREV">
            <summary>
            GW_HWNDPREV
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.OWNER">
            <summary>
            GW_OWNER
            </summary>
        </member>
        <member name="F:SnapStream.Util.GW.CHILD">
            <summary>
            GW_CHILD
            </summary>
        </member>
        <member name="T:SnapStream.Util.SPI">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/systemparametersinfo.asp">SystemParametersInfo</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETBEEP">
            <summary>
            SPI_GETBEEP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETBEEP">
            <summary>
            SPI_SETBEEP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSE">
            <summary>
            SPI_GETMOUSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSE">
            <summary>
            SPI_SETMOUSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETBORDER">
            <summary>
            SPI_GETBORDER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETBORDER">
            <summary>
            SPI_SETBORDER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETKEYBOARDSPEED">
            <summary>
            SPI_GETKEYBOARDSPEED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETKEYBOARDSPEED">
            <summary>
            SPI_SETKEYBOARDSPEED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.LANGDRIVER">
            <summary>
            SPI_LANGDRIVER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.ICONHORIZONTALSPACING">
            <summary>
            SPI_ICONHORIZONTALSPACING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSCREENSAVETIMEOUT">
            <summary>
            SPI_GETSCREENSAVETIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSCREENSAVETIMEOUT">
            <summary>
            SPI_SETSCREENSAVETIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSCREENSAVEACTIVE">
            <summary>
            SPI_GETSCREENSAVEACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSCREENSAVEACTIVE">
            <summary>
            SPI_SETSCREENSAVEACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETGRIDGRANULARITY">
            <summary>
            SPI_GETGRIDGRANULARITY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETGRIDGRANULARITY">
            <summary>
            SPI_SETGRIDGRANULARITY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDESKWALLPAPER">
            <summary>
            SPI_SETDESKWALLPAPER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDESKPATTERN">
            <summary>
            SPI_SETDESKPATTERN
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETKEYBOARDDELAY">
            <summary>
            SPI_GETKEYBOARDDELAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETKEYBOARDDELAY">
            <summary>
            SPI_SETKEYBOARDDELAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.ICONVERTICALSPACING">
            <summary>
            SPI_ICONVERTICALSPACING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETICONTITLEWRAP">
            <summary>
            SPI_GETICONTITLEWRAP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETICONTITLEWRAP">
            <summary>
            SPI_SETICONTITLEWRAP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMENUDROPALIGNMENT">
            <summary>
            SPI_GETMENUDROPALIGNMENT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMENUDROPALIGNMENT">
            <summary>
            SPI_SETMENUDROPALIGNMENT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDOUBLECLKWIDTH">
            <summary>
            SPI_SETDOUBLECLKWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDOUBLECLKHEIGHT">
            <summary>
            SPI_SETDOUBLECLKHEIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETICONTITLELOGFONT">
            <summary>
            SPI_GETICONTITLELOGFONT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDOUBLECLICKTIME">
            <summary>
            SPI_SETDOUBLECLICKTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEBUTTONSWAP">
            <summary>
            SPI_SETMOUSEBUTTONSWAP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETICONTITLELOGFONT">
            <summary>
            SPI_SETICONTITLELOGFONT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFASTTASKSWITCH">
            <summary>
            SPI_GETFASTTASKSWITCH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFASTTASKSWITCH">
            <summary>
            SPI_SETFASTTASKSWITCH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDRAGFULLWINDOWS">
            <summary>
            SPI_SETDRAGFULLWINDOWS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETDRAGFULLWINDOWS">
            <summary>
            SPI_GETDRAGFULLWINDOWS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETNONCLIENTMETRICS">
            <summary>
            SPI_GETNONCLIENTMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETNONCLIENTMETRICS">
            <summary>
            SPI_SETNONCLIENTMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMINIMIZEDMETRICS">
            <summary>
            SPI_GETMINIMIZEDMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMINIMIZEDMETRICS">
            <summary>
            SPI_SETMINIMIZEDMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETICONMETRICS">
            <summary>
            SPI_GETICONMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETICONMETRICS">
            <summary>
            SPI_SETICONMETRICS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETWORKAREA">
            <summary>
            SPI_SETWORKAREA
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETWORKAREA">
            <summary>
            SPI_GETWORKAREA
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETPENWINDOWS">
            <summary>
            SPI_SETPENWINDOWS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETHIGHCONTRAST">
            <summary>
            SPI_GETHIGHCONTRAST
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETHIGHCONTRAST">
            <summary>
            SPI_SETHIGHCONTRAST
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETKEYBOARDPREF">
            <summary>
            SPI_GETKEYBOARDPREF
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETKEYBOARDPREF">
            <summary>
            SPI_SETKEYBOARDPREF
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSCREENREADER">
            <summary>
            SPI_GETSCREENREADER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSCREENREADER">
            <summary>
            SPI_SETSCREENREADER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETANIMATION">
            <summary>
            SPI_GETANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETANIMATION">
            <summary>
            SPI_SETANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFONTSMOOTHING">
            <summary>
            SPI_GETFONTSMOOTHING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFONTSMOOTHING">
            <summary>
            SPI_SETFONTSMOOTHING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDRAGWIDTH">
            <summary>
            SPI_SETDRAGWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDRAGHEIGHT">
            <summary>
            SPI_SETDRAGHEIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETHANDHELD">
            <summary>
            SPI_SETHANDHELD
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETLOWPOWERTIMEOUT">
            <summary>
            SPI_GETLOWPOWERTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETPOWEROFFTIMEOUT">
            <summary>
            SPI_GETPOWEROFFTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETLOWPOWERTIMEOUT">
            <summary>
            SPI_SETLOWPOWERTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETPOWEROFFTIMEOUT">
            <summary>
            SPI_SETPOWEROFFTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETLOWPOWERACTIVE">
            <summary>
            SPI_GETLOWPOWERACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETPOWEROFFACTIVE">
            <summary>
            SPI_GETPOWEROFFACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETLOWPOWERACTIVE">
            <summary>
            SPI_SETLOWPOWERACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETPOWEROFFACTIVE">
            <summary>
            SPI_SETPOWEROFFACTIVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETCURSORS">
            <summary>
            SPI_SETCURSORS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETICONS">
            <summary>
            SPI_SETICONS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETDEFAULTINPUTLANG">
            <summary>
            SPI_GETDEFAULTINPUTLANG
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDEFAULTINPUTLANG">
            <summary>
            SPI_SETDEFAULTINPUTLANG
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETLANGTOGGLE">
            <summary>
            SPI_SETLANGTOGGLE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETWINDOWSEXTENSION">
            <summary>
            SPI_GETWINDOWSEXTENSION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSETRAILS">
            <summary>
            SPI_SETMOUSETRAILS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSETRAILS">
            <summary>
            SPI_GETMOUSETRAILS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSCREENSAVERRUNNING">
            <summary>
            SPI_SETSCREENSAVERRUNNING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SCREENSAVERRUNNING">
            <summary>
            SPI_SCREENSAVERRUNNING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFILTERKEYS">
            <summary>
            SPI_GETFILTERKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFILTERKEYS">
            <summary>
            SPI_SETFILTERKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETTOGGLEKEYS">
            <summary>
            SPI_GETTOGGLEKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETTOGGLEKEYS">
            <summary>
            SPI_SETTOGGLEKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSEKEYS">
            <summary>
            SPI_GETMOUSEKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEKEYS">
            <summary>
            SPI_SETMOUSEKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSHOWSOUNDS">
            <summary>
            SPI_GETSHOWSOUNDS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSHOWSOUNDS">
            <summary>
            SPI_SETSHOWSOUNDS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSTICKYKEYS">
            <summary>
            SPI_GETSTICKYKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSTICKYKEYS">
            <summary>
            SPI_SETSTICKYKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETACCESSTIMEOUT">
            <summary>
            SPI_GETACCESSTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETACCESSTIMEOUT">
            <summary>
            SPI_SETACCESSTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSERIALKEYS">
            <summary>
            SPI_GETSERIALKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSERIALKEYS">
            <summary>
            SPI_SETSERIALKEYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSOUNDSENTRY">
            <summary>
            SPI_GETSOUNDSENTRY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSOUNDSENTRY">
            <summary>
            SPI_SETSOUNDSENTRY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSNAPTODEFBUTTON">
            <summary>
            SPI_GETSNAPTODEFBUTTON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSNAPTODEFBUTTON">
            <summary>
            SPI_SETSNAPTODEFBUTTON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSEHOVERWIDTH">
            <summary>
            SPI_GETMOUSEHOVERWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEHOVERWIDTH">
            <summary>
            SPI_SETMOUSEHOVERWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSEHOVERHEIGHT">
            <summary>
            SPI_GETMOUSEHOVERHEIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEHOVERHEIGHT">
            <summary>
            SPI_SETMOUSEHOVERHEIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSEHOVERTIME">
            <summary>
            SPI_GETMOUSEHOVERTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEHOVERTIME">
            <summary>
            SPI_SETMOUSEHOVERTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETWHEELSCROLLLINES">
            <summary>
            SPI_GETWHEELSCROLLLINES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETWHEELSCROLLLINES">
            <summary>
            SPI_SETWHEELSCROLLLINES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMENUSHOWDELAY">
            <summary>
            SPI_GETMENUSHOWDELAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMENUSHOWDELAY">
            <summary>
            SPI_SETMENUSHOWDELAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSHOWIMEUI">
            <summary>
            SPI_GETSHOWIMEUI
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSHOWIMEUI">
            <summary>
            SPI_SETSHOWIMEUI
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSESPEED">
            <summary>
            SPI_GETMOUSESPEED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSESPEED">
            <summary>
            SPI_SETMOUSESPEED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSCREENSAVERRUNNING">
            <summary>
            SPI_GETSCREENSAVERRUNNING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETDESKWALLPAPER">
            <summary>
            SPI_GETDESKWALLPAPER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETACTIVEWINDOWTRACKING">
            <summary>
            SPI_GETACTIVEWINDOWTRACKING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETACTIVEWINDOWTRACKING">
            <summary>
            SPI_SETACTIVEWINDOWTRACKING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMENUANIMATION">
            <summary>
            SPI_GETMENUANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMENUANIMATION">
            <summary>
            SPI_SETMENUANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETCOMBOBOXANIMATION">
            <summary>
            SPI_GETCOMBOBOXANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETCOMBOBOXANIMATION">
            <summary>
            SPI_SETCOMBOBOXANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETLISTBOXSMOOTHSCROLLING">
            <summary>
            SPI_GETLISTBOXSMOOTHSCROLLING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETLISTBOXSMOOTHSCROLLING">
            <summary>
            SPI_SETLISTBOXSMOOTHSCROLLING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETGRADIENTCAPTIONS">
            <summary>
            SPI_GETGRADIENTCAPTIONS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETGRADIENTCAPTIONS">
            <summary>
            SPI_SETGRADIENTCAPTIONS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETKEYBOARDCUES">
            <summary>
            SPI_GETKEYBOARDCUES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETKEYBOARDCUES">
            <summary>
            SPI_SETKEYBOARDCUES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMENUUNDERLINES">
            <summary>
            SPI_GETMENUUNDERLINES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMENUUNDERLINES">
            <summary>
            SPI_SETMENUUNDERLINES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETACTIVEWNDTRKZORDER">
            <summary>
            SPI_GETACTIVEWNDTRKZORDER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETACTIVEWNDTRKZORDER">
            <summary>
            SPI_SETACTIVEWNDTRKZORDER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETHOTTRACKING">
            <summary>
            SPI_GETHOTTRACKING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETHOTTRACKING">
            <summary>
            SPI_SETHOTTRACKING
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMENUFADE">
            <summary>
            SPI_GETMENUFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMENUFADE">
            <summary>
            SPI_SETMENUFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETSELECTIONFADE">
            <summary>
            SPI_GETSELECTIONFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETSELECTIONFADE">
            <summary>
            SPI_SETSELECTIONFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETTOOLTIPANIMATION">
            <summary>
            SPI_GETTOOLTIPANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETTOOLTIPANIMATION">
            <summary>
            SPI_SETTOOLTIPANIMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETTOOLTIPFADE">
            <summary>
            SPI_GETTOOLTIPFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETTOOLTIPFADE">
            <summary>
            SPI_SETTOOLTIPFADE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETCURSORSHADOW">
            <summary>
            SPI_GETCURSORSHADOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETCURSORSHADOW">
            <summary>
            SPI_SETCURSORSHADOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSESONAR">
            <summary>
            SPI_GETMOUSESONAR
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSESONAR">
            <summary>
            SPI_SETMOUSESONAR
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSECLICKLOCK">
            <summary>
            SPI_GETMOUSECLICKLOCK
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSECLICKLOCK">
            <summary>
            SPI_SETMOUSECLICKLOCK
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSEVANISH">
            <summary>
            SPI_GETMOUSEVANISH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSEVANISH">
            <summary>
            SPI_SETMOUSEVANISH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFLATMENU">
            <summary>
            SPI_GETFLATMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFLATMENU">
            <summary>
            SPI_SETFLATMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETDROPSHADOW">
            <summary>
            SPI_GETDROPSHADOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETDROPSHADOW">
            <summary>
            SPI_SETDROPSHADOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETUIEFFECTS">
            <summary>
            SPI_GETUIEFFECTS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETUIEFFECTS">
            <summary>
            SPI_SETUIEFFECTS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFOREGROUNDLOCKTIMEOUT">
            <summary>
            SPI_GETFOREGROUNDLOCKTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFOREGROUNDLOCKTIMEOUT">
            <summary>
            SPI_SETFOREGROUNDLOCKTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETACTIVEWNDTRKTIMEOUT">
            <summary>
            SPI_GETACTIVEWNDTRKTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETACTIVEWNDTRKTIMEOUT">
            <summary>
            SPI_SETACTIVEWNDTRKTIMEOUT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFOREGROUNDFLASHCOUNT">
            <summary>
            SPI_GETFOREGROUNDFLASHCOUNT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFOREGROUNDFLASHCOUNT">
            <summary>
            SPI_SETFOREGROUNDFLASHCOUNT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETCARETWIDTH">
            <summary>
            SPI_GETCARETWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETCARETWIDTH">
            <summary>
            SPI_SETCARETWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETMOUSECLICKLOCKTIME">
            <summary>
            SPI_GETMOUSECLICKLOCKTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETMOUSECLICKLOCKTIME">
            <summary>
            SPI_SETMOUSECLICKLOCKTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFONTSMOOTHINGTYPE">
            <summary>
            SPI_GETFONTSMOOTHINGTYPE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFONTSMOOTHINGTYPE">
            <summary>
            SPI_SETFONTSMOOTHINGTYPE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFONTSMOOTHINGCONTRAST">
            <summary>
            SPI_GETFONTSMOOTHINGCONTRAST
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFONTSMOOTHINGCONTRAST">
            <summary>
            SPI_SETFONTSMOOTHINGCONTRAST
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFOCUSBORDERWIDTH">
            <summary>
            SPI_GETFOCUSBORDERWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFOCUSBORDERWIDTH">
            <summary>
            SPI_SETFOCUSBORDERWIDTH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.GETFOCUSBORDERHEIGHT">
            <summary>
            SPI_GETFOCUSBORDERHEIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SPI.SETFOCUSBORDERHEIGHT">
            <summary>
            SPI_SETFOCUSBORDERHEIGHT
            </summary>
        </member>
        <member name="T:SnapStream.Util.SC">
            <summary>
            Defines constants used with the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardaccelerators/keyboardacceleratorreference/keyboardacceleratormessages/wm_syscommand.asp">WM_SYSCOMMAND</see> message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.SIZE">
            <summary>
            SC_SIZE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.MOVE">
            <summary>
            SC_MOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.MINIMIZE">
            <summary>
            SC_MINIMIZE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.MAXIMIZE">
            <summary>
            SC_MAXIMIZE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.NEXTWINDOW">
            <summary>
            SC_NEXTWINDOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.PREVWINDOW">
            <summary>
            SC_PREVWINDOW
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.CLOSE">
            <summary>
            SC_CLOSE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.VSCROLL">
            <summary>
            SC_VSCROLL
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.HSCROLL">
            <summary>
            SC_HSCROLL
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.MOUSEMENU">
            <summary>
            SC_MOUSEMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.KEYMENU">
            <summary>
            SC_KEYMENU
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.ARRANGE">
            <summary>
            SC_ARRANGE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.RESTORE">
            <summary>
            SC_RESTORE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.TASKLIST">
            <summary>
            SC_TASKLIST
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.SCREENSAVE">
            <summary>
            SC_SCREENSAVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.HOTKEY">
            <summary>
            SC_HOTKEY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.DEFAULT">
            <summary>
            SC_DEFAULT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.MONITORPOWER">
            <summary>
            SC_MONITORPOWER
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.CONTEXTHELP">
            <summary>
            SC_CONTEXTHELP
            </summary>
        </member>
        <member name="F:SnapStream.Util.SC.SEPARATOR">
            <summary>
            SC_SEPARATOR
            </summary>
        </member>
        <member name="T:SnapStream.Util.ES">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/setthreadexecutionstate.asp">SetThreadExecutionState</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ES.SYSTEM_REQUIRED">
            <summary>
            ES_SYSTEM_REQUIRED
            </summary>
        </member>
        <member name="F:SnapStream.Util.ES.DISPLAY_REQUIRED">
            <summary>
            ES_DISPLAY_REQUIRED
            </summary>
        </member>
        <member name="F:SnapStream.Util.ES.USER_PRESENT">
            <summary>
            ES_USER_PRESENT
            </summary>
        </member>
        <member name="F:SnapStream.Util.ES.CONTINUOUS">
            <summary>
            ES_CONTINUOUS
            </summary>
        </member>
        <member name="T:SnapStream.Util.Mode">
            <summary>
            The firefly operation mode
            </summary>
        </member>
        <member name="F:SnapStream.Util.Mode.Default">
            <summary>
            The default mode of operation
            </summary>
        </member>
        <member name="F:SnapStream.Util.Mode.Mouse">
            <summary>
            Mouse mode is enabled
            </summary>
        </member>
        <member name="T:SnapStream.Util.SMTO">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/sendmessagetimeout.asp">SendMessageTimeout</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SMTO.NORMAL">
            <summary>
            SMTO_NORMAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.SMTO.BLOCK">
            <summary>
            SMTO_BLOCK
            </summary>
        </member>
        <member name="F:SnapStream.Util.SMTO.ABORTIFHUNG">
            <summary>
            SMTO_ABORTIFHUNG
            </summary>
        </member>
        <member name="F:SnapStream.Util.SMTO.NOTIMEOUTIFNOTHUNG">
            <summary>
            SMTO_NOTIMEOUTIFNOTHUNG
            </summary>
        </member>
        <member name="T:SnapStream.Util.IDI">
            <summary>
            Defines constants for predefined icons used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconfunctions/loadicon.asp">LoadIcon</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.APPLICATION">
            <summary>
            IDI_APPLICATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.HAND">
            <summary>
            IDI_HAND
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.QUESTION">
            <summary>
            IDI_QUESTION
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.EXCLAMATION">
            <summary>
            IDI_EXCLAMATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.ASTERISK">
            <summary>
            IDI_ASTERISK
            </summary>
        </member>
        <member name="F:SnapStream.Util.IDI.WINLOGO">
            <summary>
            IDI_WINLOGO
            </summary>
        </member>
        <member name="T:SnapStream.Util.GCL">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/getclasslong.asp">GetClassLong</see> Win32 API.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.CBCLSEXTRA">
            <summary>
            GCL_CBCLSEXTRA
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.CBWNDEXTRA">
            <summary>
            GCL_CBWNDEXTRA
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.HBRBACKGROUND">
            <summary>
            GCL_HBRBACKGROUND
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.HCURSOR">
            <summary>
            GCL_HCURSOR
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.HICON">
            <summary>
            GCL_HICON
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.HICONSM">
            <summary>
            GCL_HICONSM
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.HMODULE">
            <summary>
            GCL_HMODULE
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.MENUNAME">
            <summary>
            GCL_MENUNAME
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.STYLE">
            <summary>
            GCL_STYLE
            </summary>
        </member>
        <member name="F:SnapStream.Util.GCL.WNDPROC">
            <summary>
            GCL_WNDPROC
            </summary>
        </member>
        <member name="T:SnapStream.Util.ICON">
            <summary>
            Defines constants used by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowmessages/wm_geticon.asp">WM_GETICON</see> and
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowmessages/wm_seticon.asp">WM_SETICON</see> messages.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICON.SMALL">
            <summary>
            ICON_SMALL
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICON.BIG">
            <summary>
            ICON_BIG
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICON.SMALL2">
            <summary>
            ICON_SMALL2
            </summary>
        </member>
        <member name="T:SnapStream.Util.TOKEN">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/access_rights_for_access_token_objects.asp">Access Rights for Security Tokens</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.ASSIGN_PRIMARY">
            <summary>
            TOKEN_ASSIGN_PRIMARY
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.DUPLICATE">
            <summary>
            TOKEN_DUPLICATE
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.IMPERSONATE">
            <summary>
            TOKEN_IMPERSONATE
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.QUERY">
            <summary>
            TOKEN_QUERY
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.QUERY_SOURCE">
            <summary>
            TOKEN_QUERY_SOURCE
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.ADJUST_PRIVILEGES">
            <summary>
            TOKEN_ADJUST_PRIVILEGES
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.ADJUST_GROUPS">
            <summary>
            TOKEN_ADJUST_GROUPS
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.ADJUST_DEFAULT">
            <summary>
            TOKEN_ADJUST_DEFAULT
            </summary>
        </member>
        <member name="F:SnapStream.Util.TOKEN.ADJUST_SESSIONID">
            <summary>
            TOKEN_ADJUST_SESSIONID
            </summary>
        </member>
        <member name="T:SnapStream.Util.SE_PRIVILEGE">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/en-us/secauthz/security/privileges.asp">Privileges</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SE_PRIVILEGE.ENABLED_BY_DEFAULT">
            <summary>
            SE_PRIVILEGE_ENABLED_BY_DEFAULT
            </summary>
        </member>
        <member name="F:SnapStream.Util.SE_PRIVILEGE.ENABLED">
            <summary>
            SE_PRIVILEGE_ENABLED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SE_PRIVILEGE.USED_FOR_ACCESS">
            <summary>
            SE_PRIVILEGE_USED_FOR_ACCESS
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHTDN_REASON_FLAG">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/exitwindowsex.asp">ExitWindowsEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.COMMENT_REQUIRED">
            <summary>
            COMMENT_REQUIRED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.DIRTY_PROBLEM_ID_REQUIRED">
            <summary>
            DIRTY_PROBLEM_ID_REQUIRED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.CLEAN_UI">
            <summary>
            CLEAN_UI
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.DIRTY_UI">
            <summary>
            DIRTY_UI
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.USER_DEFINED">
            <summary>
            The reason code is defined by the user
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_FLAG.PLANNED">
            <summary>
            The shutdown was planned
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHTDN_REASON_MAJOR">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/exitwindowsex.asp">ExitWindowsEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.OTHER">
            <summary>
            Other issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.HARDWARE">
            <summary>
            Hardware issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.OPERATINGSYSTEM">
            <summary>
            Operating system issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.SOFTWARE">
            <summary>
            Software issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.APPLICATION">
            <summary>
            Application issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.SYSTEM">
            <summary>
            System failure
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.POWER">
            <summary>
            Power failure
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MAJOR.LEGACY_API">
            <summary>
            The InitiateSystemShutdown function was used instead of InitiateSystemShutdownEx
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHTDN_REASON_MINOR">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/exitwindowsex.asp">ExitWindowsEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.OTHER">
            <summary>
            Other issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.NONE">
            <summary>
            None
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.MAINTENANCE">
            <summary>
            Maintenance
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.INSTALLATION">
            <summary>
            Installation
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.UPGRADE">
            <summary>
            Upgrade
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.RECONFIG">
            <summary>
            Reconfigure
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.HUNG">
            <summary>
            Unresponsive
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.UNSTABLE">
            <summary>
            Unstable
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.DISK">
            <summary>
            Disk
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.PROCESSOR">
            <summary>
            Processor
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.NETWORKCARD">
            <summary>
            Network card
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.POWER_SUPPLY">
            <summary>
            Power supply
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.CORDUNPLUGGED">
            <summary>
            Unplugged
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.ENVIRONMENT">
            <summary>
            Environment
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.HARDWARE_DRIVER">
            <summary>
            Driver
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.OTHERDRIVER">
            <summary>
            Other driver event
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.BLUESCREEN">
            <summary>
            Blue screen crash event
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.SERVICEPACK">
            <summary>
            Service pack
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.HOTFIX">
            <summary>
            Hot fix
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.SECURITYFIX">
            <summary>
            Security patch
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.SECURITY">
            <summary>
            Security issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.NETWORK_CONNECTIVITY">
            <summary>
            Network connectivity
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.WMI">
            <summary>
            WMI issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.SERVICEPACK_UNINSTALL">
            <summary>
            Service pack uninstallation
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.HOTFIX_UNINSTALL">
            <summary>
            Hot fix uninstallation
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.SECURITYFIX_UNINSTALL">
            <summary>
            Security patch uninstallation
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.MMC">
            <summary>
            MMC issue
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHTDN_REASON_MINOR.TERMSRV">
            <summary>
            Termsrv
            </summary>
        </member>
        <member name="T:SnapStream.Util.EWX">
            <summary>
            Defines constants used with <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/exitwindowsex.asp">ExitWindowsEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.LOGOFF">
            <summary>
            Shuts down all processes running in the logon session
            of the process that called ExitWindowsEx
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.SHUTDOWN">
            <summary>
            Shuts down the system to a point at which it is safe to turn off the power
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.REBOOT">
            <summary>
            Shuts down the system and then restarts the system
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.FORCE">
            <summary>
            Forces processes to terminate
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.POWEROFF">
            <summary>
            Shuts down the system and turns off the power
            </summary>
        </member>
        <member name="F:SnapStream.Util.EWX.FORCEIFHUNG">
            <summary>
            Forces processes to terminate if they do not respond
            to the WM_QUERYENDSESSION or WM_ENDSESSION message
            within the timeout interval
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_CLASS">
            <summary>
            Defines the mixer control class found in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see> used to control
            the mixer properties in Windows
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.MASK">
            <summary>
            The portion of the dwControlType that contains the control class
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.CUSTOM">
            <summary>
            MIXERCONTROL_CT_CLASS_CUSTOM
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.METER">
            <summary>
            MIXERCONTROL_CT_CLASS_METER
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.SWITCH">
            <summary>
            MIXERCONTROL_CT_CLASS_SWITCH
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.NUMBER">
            <summary>
            MIXERCONTROL_CT_CLASS_NUMBER
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.SLIDER">
            <summary>
            MIXERCONTROL_CT_CLASS_SLIDER
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.FADER">
            <summary>
            MIXERCONTROL_CT_CLASS_FADER
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.TIME">
            <summary>
            MIXERCONTROL_CT_CLASS_TIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_CLASS.LIST">
            <summary>
            MIXERCONTROL_CT_CLASS_LIST
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_SUBCLASS">
            <summary>
            Defines the mixer control subclass found in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see> used to control
            the mixer properties in Windows
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SUBCLASS.MASK">
            <summary>
            The portion of the dwControlType that contains the control subclass
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_SC_SWITCH">
            <summary>
            Defines the mixer control subclasses for the MIXERCONTROL_CT_CLASS_SWITCH class in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_SWITCH.BOOLEAN">
            <summary>
            MIXERCONTROL_CONTROLTYPE_BOOLEAN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_SWITCH.BUTTON">
            <summary>
            MIXERCONTROL_CONTROLTYPE_BUTTON
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_SC_METER">
            <summary>
            Defines the mixer control subclasses for the MIXERCONTROL_CT_CLASS_METER class in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_METER.POLLED">
            <summary>
            MIXERCONTROL_CONTROLTYPE_POLLED
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_SC_TIME">
            <summary>
            Defines the mixer control subclasses for the MIXERCONTROL_CT_CLASS_TIME class in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_TIME.MICROSECS">
            <summary>
            MIXERCONTROL_CONTROLTYPE_MICROTIME
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_TIME.MILLISECS">
            <summary>
            MIXERCONTROL_CONTROLTYPE_MILLITIME
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_SC_LIST">
            <summary>
            Defines the mixer control subclasses for the MIXERCONTROL_CT_CLASS_LIST class in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_LIST.SINGLE">
            <summary>
            MIXERCONTROL_CONTROLTYPE_SINGLESELECT
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_SC_LIST.MULTIPLE">
            <summary>
            MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CT_UNITS">
            <summary>
            Defines the mixer control type's units in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">the MIXERCONTROL structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.MASK">
            <summary>
            The portion of the dwControlType that contains the control type's units
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.CUSTOM">
            <summary>
            The units are not pre-defined
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.BOOLEAN">
            <summary>
            The data is a boolean flag
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.SIGNED">
            <summary>
            The data is a signed LONG
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.UNSIGNED">
            <summary>
            The data is an unsigned LONG
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.DECIBELS">
            <summary>
            The data is represented in dB
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CT_UNITS.PERCENT">
            <summary>
            The data is represented as a percentage
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL_CONTROLTYPE">
            <summary>
            Commonly used control types for specifying <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">MIXERCONTROL</see>.dwControlType
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.CUSTOM">
            <summary>
            A generic mixer control
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.BOOLEANMETER">
            <summary>
            Measures whether an integer value is FALSE/OFF (zero) or TRUE/ON (nonzero).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.SIGNEDMETER">
            <summary>
            Measures integer values in the range of - 231 through (231 - 1).
            The mixer driver defines the limits of this meter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.PEAKMETER">
            <summary>
            Measures the deflection from 0 in both the positive and negative directions.
            The range of integer values for the peak meter is - 32,768 through 32,767.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.UNSIGNEDMETER">
            <summary>
            Measures integer values in the range of 0 through (232 - 1).
            The mixer driver defines the limits of this meter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.BOOLEAN">
            <summary>
            The generic switch. It can be set to TRUE or FALSE.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.ONOFF">
            <summary>
            An alternative switch that is represented by a graphic
            other than the one used for the Boolean switch. It can be set to ON or OFF.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MUTE">
            <summary>
            Mutes an audio line (suppressing the data flow of the line) or allows the audio data to play.
            This switch is frequently used to help control the lines feeding into the mixer.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MONO">
            <summary>
            Switches between mono and stereo output for a stereo audio line.
            Set to OFF to play stereo data as separate channels.
            Set to ON to combine data from both channels into a mono audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.LOUDNESS">
            <summary>
            Boosts low-volume bass for an audio line. Set to ON to boost low-volume bass.
            Set to OFF to set volume levels to normal. The amount of boost is hardware specific.
            For more information, see the documentation for your mixer device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.STEREOENH">
            <summary>
            Increases stereo separation.
            Set to ON to increase stereo separation.
            Set to OFF for no enhancement.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.BUTTON">
            <summary>
            Set to TRUE for all buttons that the driver should handle as though they had been pressed.
            If the value is FALSE, no action is taken.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.DECIBELS">
            <summary>
            Allows integer decibel values to be entered, in tenths of decibels.
            The range of values for this control is - 32,768 through 32,767.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.SIGNED">
            <summary>
            Allows integer values entered in the range of  - 231 through (231 - 1).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.UNSIGNED">
            <summary>
            Allows integer values entered in the range of 0 through (232 - 1).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.PERCENT">
            <summary>
            Allows values to be entered as percentages.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.SLIDER">
            <summary>
            Has a range of  - 32,768 through 32,767.
            The mixer driver defines the limits of this control.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.PAN">
            <summary>
            Has a range of -32,768 through 32,767.
            The mixer driver defines the limits of this control, with 0 as the midrange value.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.QSOUNDPAN">
            <summary>
            Provides expanded sound control through QSound.
            This control has a range of -15 through 15.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.FADER">
            <summary>
            General fade control. The range of acceptable values is 0 through 65,535.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.VOLUME">
            <summary>
            General volume fade control. The range of acceptable values is 0 through 65,535.
            For information about changing this range, see the documentation for your mixer device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.BASS">
            <summary>
            Bass volume fade control. The range of acceptable values is 0 through 65,535.
            The limits of the bass frequency band are hardware specific.
            For information about band limits, see the documentation for your mixer device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.TREBLE">
            <summary>
            Treble volume fade control. The range of acceptable values is 0 through 65,535.
            The limits of the treble frequency band are hardware specific.
            For information about the band limits, see the documentation for your mixer device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.EQUALIZER">
            <summary>
            Graphic equalizer control. The range of acceptable values
            for one band of the equalizer is 0 through 65,535.
            The number of equalizer bands and their limits are hardware specific.
            For information about the equalizer, see the documentation for your mixer device.
            You can use the MIXERCONTROLDETAILS_LISTTEXT structure
            to retrieve text labels for the equalizer.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.SINGLESELECT">
            <summary>
            Restricts the control selection to one item at a time.
            Unlike the multiplexer control, this control can be used to control
            more than audio source lines. For example, you could use this control
            to select a low-pass filter from a list of filters supported by a mixer device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MUX">
            <summary>
            Restricts the line selection to one source line at a time.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MULTIPLESELECT">
            <summary>
            Allows the user to select multiple items from a list simultaneously.
            Unlike the mixer control, the multiple-select control can be used to control
            more than audio source lines.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MIXER">
            <summary>
            Allows the user to select source lines from a list simultaneously.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MICROTIME">
            <summary>
            Supports timing data expressed in microseconds.
            The range of acceptable values is 0 through (232 -1).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL_CONTROLTYPE.MILLITIME">
            <summary>
            Supports timing data expressed in milliseconds.
            The range of acceptable values is 0 through (232 -1).
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERLINE_COMPONENTTYPE">
            <summary>
            Defines constants used in the dwComponentType field of <see href="">the MIXERLINE structure</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_DIGITAL">
            <summary>
            Audio line is a digital destination
            (for example, digital input to a DAT or CD audio device).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_HEADPHONES">
            <summary>
            Audio line is an adjustable (gain and/or attenuation) destination
            intended to drive headphones. Most audio cards use the same
            audio destination line for speakers and headphones, in which case
            the mixer device simply uses the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_LINE">
            <summary>
            Audio line is a line level destination
            (for example, line level input from a CD audio device)
            that will be the final recording source for the analog-to-digital converter (ADC).
            Because most audio cards for personal computers provide
            some sort of gain for the recording audio source line,
            the mixer device will use the MIXERLINE_COMPONENTTYPE_DST_WAVEIN type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_MONITOR">
            <summary>
            Audio line is a destination used for a monitor.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_SPEAKERS">
            <summary>
            Audio line is an adjustable (gain and/or attenuation) destination
            intended to drive speakers. This is the typical component type
            for the audio output of audio cards for personal computers.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_TELEPHONE">
            <summary>
            Audio line is a destination that will be routed to a telephone line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_UNDEFINED">
            <summary>
            Audio line is a destination that cannot be defined
            by one of the standard component types. A mixer device is required
            to use this component type for line component types that have not been defined
            by Microsoft Corporation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_VOICEIN">
            <summary>
            Audio line is a destination that will be the final recording source for voice input.
            This component type is exactly like MIXERLINE_COMPONENTTYPE_DST_WAVEIN
            but is intended specifically for settings used during voice recording/recognition.
            Support for this line is optional for a mixer device.
            Many mixer devices provide only MIXERLINE_COMPONENTTYPE_DST_WAVEIN.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.DST_WAVEIN">
            <summary>
            Audio line is a destination that will be the final recording source
            for the waveform-audio input (ADC). This line typically provides
            some sort of gain or attenuation. This is the typical component type
            for the recording line of most audio cards for personal computers.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_ANALOG">
            <summary>
            Audio line is an analog source (for example, analog output from a video-cassette tape).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_AUXILIARY">
            <summary>
            Audio line is a source originating from the auxiliary audio line.
            This line type is intended as a source with gain or attenuation
            that can be routed to the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS
            destination and/or recorded from the MIXERLINE_COMPONENTTYPE_DST_WAVEIN destination.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_COMPACTDISC">
            <summary>
            Audio line is a source originating from the output of an internal audio CD.
            This component type is provided for audio cards that provide
            an audio source line intended to be connected
            to an audio CD (or CD-ROM playing an audio CD).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_DIGITAL">
            <summary>
            Audio line is a digital source
            (for example, digital output from a DAT or audio CD).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_LINE">
            <summary>
            Audio line is a line-level source
            (for example, line-level input from an external stereo)
            that can be used as an optional recording source.
            Because most audio cards for personal computers provide
            some sort of gain for the recording source line,
            the mixer device will use the MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_MICROPHONE">
            <summary>
            Audio line is a microphone recording source.
            Most audio cards for personal computers provide
            at least two types of recording sources: an auxiliary audio line
            and microphone input. A microphone audio line typically provides
            some sort of gain. Audio cards that use a single input for use
            with a microphone or auxiliary audio line should
            use the MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE component type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_PCSPEAKER">
            <summary>
            Audio line is a source originating from personal computer speaker.
            Several audio cards for personal computers provide the ability to mix
            what would typically be played on the internal speaker
            with the output of an audio card. Some audio cards support
            the ability to use this output as a recording source.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_SYNTHESIZER">
            <summary>
            Audio line is a source originating from the output of an internal synthesizer.
            Most audio cards for personal computers provide some sort of MIDI synthesizer
            (for example, an Adlib®-compatible or OPL/3 FM synthesizer).
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_TELEPHONE">
            <summary>
            Audio line is a source originating from an incoming telephone line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_UNDEFINED">
            <summary>
            Audio line is a source that cannot be defined
            by one of the standard component types. A mixer device is required
            to use this component type for line component types
            that have not been defined by Microsoft Corporation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE_COMPONENTTYPE.SRC_WAVEOUT">
            <summary>
            Audio line is a source originating from the waveform-audio output digital-to-analog converter (DAC).
            Most audio cards for personal computers provide
            this component type as a source to the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS destination.
            Some cards also allow this source to be routed
            to the MIXERLINE_COMPONENTTYPE_DST_WAVEIN destination.
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXER_GETLINEINFOF">
            <summary>
            Defines flags for fdwInfo in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetlineinfo.asp">mixerGetLineInfo</see>
            that specify how the line to be queried is specified
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.DESTINATION">
            <summary>
            The pmxl parameter will receive information
            about the destination audio line specified
            by the dwDestination member of the MIXERLINE structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.SOURCE">
            <summary>
            The pmxl parameter will receive information
            about the source audio line specified
            by the dwDestination and dwSource members of the MIXERLINE structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.LINEID">
            <summary>
            The pmxl parameter will receive information
            about the audio line specified
            by the dwLineID member of the MIXERLINE structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.COMPONENTTYPE">
            <summary>
            The pmxl parameter will receive information
            about the first audio line of the type specified
            in the dwComponentType member of the MIXERLINE structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.TARGETTYPE">
            <summary>
            The pmxl parameter will receive information
            about the audio line that is for the dwType member of the Target structure,
            which is a member of the MIXERLINE structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINEINFOF.QUERYMASK">
            <summary>
            Masks the portion of fdwInfo that specifies how the line to be queried is specified
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXER_GETLINECONTROLSF">
            <summary>
            Defines flags for fdwControls in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetlinecontrols.asp">mixerGetLineControls</see>
            that specify how the line control to be queried is specified
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINECONTROLSF.ALL">
            <summary>
            The pmxlc parameter references a list of MIXERCONTROL structures
            that will receive information on all controls
            associated with the audio line identified by the dwLineID member
            of the MIXERLINECONTROLS structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINECONTROLSF.ONEBYID">
            <summary>
            The pmxlc parameter references a single MIXERCONTROL structure
            that will receive information on the control
            identified by the dwControlID member
            of the MIXERLINECONTROLS structure
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINECONTROLSF.ONEBYTYPE">
            <summary>
            The mixerGetLineControls function retrieves information about
            the first control of a specific class for the audio line that is being queried
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETLINECONTROLSF.QUERYMASK">
            <summary>
            Masks the portion of fdwControls that specifies how the line to be queried is specified
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXER_GETCONTROLDETAILSF">
            <summary>
            Defines flags for fdwDetails in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetcontroldetails.asp">mixerGetControlDetails</see>
            that specify how the line control to be queried is specified
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETCONTROLDETAILSF.VALUE">
            <summary>
            Current values for a control are retrieved
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETCONTROLDETAILSF.LISTTEXT">
            <summary>
            The paDetails member of the MIXERCONTROLDETAILS structure points
            to one or more MIXERCONTROLDETAILS_LISTTEXT structures
            to receive text labels for multiple-item controls
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_GETCONTROLDETAILSF.QUERYMASK">
            <summary>
            Masks the portion of fdwDetails that specifies how the line control to be queried is specified
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXER_SETCONTROLDETAILSF">
            <summary>
            Defines flags for fdwDetails in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixersetcontroldetails.asp">mixerSetControlDetails</see>
            that specify how the line control to be set is specified
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_SETCONTROLDETAILSF.VALUE">
            <summary>
            The current value(s) for a control are set
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_SETCONTROLDETAILSF.CUSTOM">
            <summary>
            A custom dialog box for the specified custom mixer control is displayed
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_SETCONTROLDETAILSF.QUERYMASK">
            <summary>
            Masks the portion of fdwDetails that specifies how the line control to be set is specified
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXER_OBJECTF">
            <summary>
            Defines flags for several Windows Multimedia methods that specify an object
            as a handle.  For example: <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetlineinfo.asp">mixerGetLineInfo</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HANDLE">
            <summary>
            Masks the portion of fdwInfo that specifies what the handle refers to
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.MIXER">
            <summary>
            The hmxobj parameter is a mixer device identifier
            in the range of zero to one less than the number of devices
            returned by the mixerGetNumDevs function.
            This flag is optional.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HMIXER">
            <summary>
            The hmxobj parameter is a mixer device handle returned by the mixerOpen function.
            This flag is optional.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.WAVEOUT">
            <summary>
            The hmxobj parameter is the identifier of a waveform-audio output device
            in the range of zero to one less than the number of devices
            returned by the waveOutGetNumDevs function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HWAVEOUT">
            <summary>
            The hmxobj parameter is a waveform-audio output handle
            returned by the waveOutOpen function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.WAVEIN">
            <summary>
            The hmxobj parameter is the identifier of a waveform-audio input device
            in the range of zero to one less than the number of devices
            returned by the waveInGetNumDevs function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HWAVEIN">
            <summary>
            The hmxobj parameter is a waveform-audio input handle
            returned by the waveInOpen function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.MIDIOUT">
            <summary>
            The hmxobj parameter is the identifier of a MIDI output device.
            This identifier must be in the range of zero to one less than the number of devices
            returned by the midiOutGetNumDevs function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HMIDIOUT">
            <summary>
            The hmxobj parameter is the handle of a MIDI output device.
            This handle must have been returned by the midiOutOpen function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.MIDIIN">
            <summary>
            The hmxobj parameter is the identifier of a MIDI input device.
            This identifier must be in the range of zero to one less than the number of devices
            returned by the midiInGetNumDevs function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.HMIDIIN">
            <summary>
            The hmxobj parameter is the handle of a MIDI input device.
            This handle must have been returned by the midiInOpen function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXER_OBJECTF.AUX">
            <summary>
            The hmxobj parameter is an auxiliary device identifier
            in the range of zero to one less than the number of devices
            returned by the auxGetNumDevs function.
            </summary>
        </member>
        <member name="T:SnapStream.Util.VolumeDirection">
            <summary>
            Specifies which direction the volume is changing
            </summary>
        </member>
        <member name="F:SnapStream.Util.VolumeDirection.Mute">
            <summary>
            The volume mute was changed
            </summary>
        </member>
        <member name="F:SnapStream.Util.VolumeDirection.Down">
            <summary>
            The volume was decreased
            </summary>
        </member>
        <member name="F:SnapStream.Util.VolumeDirection.Up">
            <summary>
            The volume was increased
            </summary>
        </member>
        <member name="T:SnapStream.Util.MMSYSERR">
            <summary>
            The error codes that can be returned as MMRESULT codes from several <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_multimedia_functions.asp">Windows Multimedia Functions</see>.
            Warning: This enumeration is incomplete.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MMSYSERR.NOERROR">
            <summary>
            No error occurred
            </summary>
        </member>
        <member name="T:SnapStream.Util.WAVECAPS">
            <summary>
            Defines values for the optional functionality that wave devices can support.
            These codes are used in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutcaps_str.asp">WAVEOUTCAPS</see>.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVECAPS.PITCH">
            <summary>
            Supports pitch control
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVECAPS.PLAYBACKRATE">
            <summary>
            Supports playback rate control
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVECAPS.VOLUME">
            <summary>
            Supports volume control
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVECAPS.LRVOLUME">
            <summary>
            Supports separate left and right volume control
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVECAPS.SYNC">
            <summary>
            The driver is synchronous and will block while playing a buffer
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHGFI">
            <summary>
            Defines flags used in calls to <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/shgetfileinfo.asp">SHGetFileInfo</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.ICON">
            <summary>
            SHGFI_ICON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.DISPLAYNAME">
            <summary>
            SHGFI_DISPLAYNAME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.TYPENAME">
            <summary>
            SHGFI_TYPENAME
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.ATTRIBUTES">
            <summary>
            SHGFI_ATTRIBUTES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.ICONLOCATION">
            <summary>
            SHGFI_ICONLOCATION
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.EXETYPE">
            <summary>
            SHGFI_EXETYPE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.SYSICONINDEX">
            <summary>
            SHGFI_SYSICONINDEX
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.LINKOVERLAY">
            <summary>
            SHGFI_LINKOVERLAY
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.SELECTED">
            <summary>
            SHGFI_SELECTED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.ATTR_SPECIFIED">
            <summary>
            SHGFI_ATTR_SPECIFIED
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.LARGEICON">
            <summary>
            SHGFI_LARGEICON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.SMALLICON">
            <summary>
            SHGFI_SMALLICON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.OPENICON">
            <summary>
            SHGFI_OPENICON
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.SHELLICONSIZE">
            <summary>
            SHGFI_SHELLICONSIZE
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.PIDL">
            <summary>
            SHGFI_PIDL
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.USEFILEATTRIBUTES">
            <summary>
            SHGFI_USEFILEATTRIBUTES
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.ADDOVERLAYS">
            <summary>
            SHGFI_ADDOVERLAYS
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGFI.OVERLAYINDEX">
            <summary>
            SHGFI_OVERLAYINDEX
            </summary>
        </member>
        <member name="T:SnapStream.Util.PROCESSNAME">
            <summary>
            Used by FireFly to specify one of the different processes used in the application
            </summary>
        </member>
        <member name="F:SnapStream.Util.PROCESSNAME.FIREFLY">
            <summary>
            The Beyond Media Basic software
            </summary>
        </member>
        <member name="F:SnapStream.Util.PROCESSNAME.SETUP">
            <summary>
            The Setup application
            </summary>
        </member>
        <member name="F:SnapStream.Util.PROCESSNAME.PLAYER">
            <summary>
            The Beyond Media Basic music/video player
            </summary>
        </member>
        <member name="F:SnapStream.Util.PROCESSNAME.SLIDESHOW">
            <summary>
            The Beyond Media Basic Photo slide-show player
            </summary>
        </member>
        <member name="T:SnapStream.Util.HWND">
            <summary>
            Specifies the z-order when calling <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/setwindowpos.asp">SetWindowPos</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.HWND.TOP">
            <summary>
            Places the window at the top of the z order
            </summary>
        </member>
        <member name="F:SnapStream.Util.HWND.BOTTOM">
            <summary>
            Places the window at the bottom of the z order
            </summary>
        </member>
        <member name="F:SnapStream.Util.HWND.TOPMOST">
            <summary>
            Places the window above all non-topmost windows.
            The window maintains its topmost position even when it is deactivated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HWND.NOTOPMOST">
            <summary>
            Places the window above all non-topmost windows (that is, behind all topmost windows).
            This flag has no effect if the window is already a non-topmost window.
            </summary>
        </member>
        <member name="T:SnapStream.Util.PRF">
            <summary>
            Defines flags that can be used in the lParam of the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_3qwk.asp">WM_PRINT</see> Windows message
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.CHECKVISIBLE">
            <summary>
            Draws the window only if it is visible
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.NONCLIENT">
            <summary>
            Draws the nonclient area of the window
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.CLIENT">
            <summary>
            Draws the client area of the window
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.ERASEBKGND">
            <summary>
            Erases the background before drawing the window
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.CHILDREN">
            <summary>
            Draws all visible children windows
            </summary>
        </member>
        <member name="F:SnapStream.Util.PRF.OWNED">
            <summary>
            Draws all owned windows
            </summary>
        </member>
        <member name="T:SnapStream.Util.SND">
            <summary>
            Defines flags that can be used in the fdwSound parameter of a call to
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_playsound.asp">PlaySound</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.SYNC">
            <summary>
            Synchronous playback of a sound event.
            PlaySound returns after the sound event completes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.ASYNC">
            <summary>
            The sound is played asynchronously and PlaySound returns immediately
            after beginning the sound. To terminate an asynchronously played waveform sound,
            call PlaySound with pszSound set to NULL.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.NODEFAULT">
            <summary>
            No default sound event is used. If the sound cannot be found,
            PlaySound returns silently without playing the default sound.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.MEMORY">
            <summary>
            A sound event's file is loaded in RAM.
            The parameter specified by pszSound must point to an image of a sound in memory.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.LOOP">
            <summary>
            The sound plays repeatedly until PlaySound is called again with the pszSound parameter set to NULL.
            You must also specify the SND_ASYNC flag to indicate an asynchronous sound event.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.NOSTOP">
            <summary>
            The specified sound event will yield to another sound event that is already playing.
            If a sound cannot be played because the resource needed to generate that sound
            is busy playing another sound, the function immediately returns FALSE
            without playing the requested sound.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.PURGE">
            <summary>
            Sounds are to be stopped for the calling task.
            If pszSound is not NULL, all instances of the specified sound are stopped.
            If pszSound is NULL, all sounds that are playing on behalf
            of the calling task are stopped.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.APPLICATION">
            <summary>
            The sound is played using an application-specific association.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.NOWAIT">
            <summary>
            If the driver is busy, return immediately without playing the sound.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.ALIAS">
            <summary>
            The pszSound parameter is a system-event alias in the registry or the WIN.INI file.
            Do not use with either SND_FILENAME or SND_RESOURCE.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.ALIAS_ID">
            <summary>
            The pszSound parameter is a predefined sound identifier.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.FILENAME">
            <summary>
            The pszSound parameter is a filename.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SND.RESOURCE">
            <summary>
            The pszSound parameter is a resource identifier;
            hmod must identify the instance that contains the resource.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WS">
            <summary>
            Defines the Window Styles used in window creation methods like
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/createwindowex.asp">CreateWindowEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.BORDER">
            <summary>
            Creates a window that has a thin-line border.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.CAPTION">
            <summary>
            Creates a window that has a title bar (includes the WS_BORDER style).
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.CHILD">
            <summary>
            Creates a child window. A window with this style cannot have a menu bar.
            This style cannot be used with the WS_POPUP style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.CHILDWINDOW">
            <summary>
            Same as the WS_CHILD style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows
            when drawing occurs within the parent window.
            This style is used when creating the parent window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other;
            that is, when a particular child window receives a WM_PAINT message,
            the WS_CLIPSIBLINGS style clips all other overlapping child windows
            out of the region of the child window to be updated. If WS_CLIPSIBLINGS
            is not specified and child windows overlap, it is possible,
            when drawing within the client area of a child window,
            to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.DISABLED">
            <summary>
            Creates a window that is initially disabled.
            A disabled window cannot receive input from the user.
            To change this after a window has been created, use EnableWindow.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.DLGFRAME">
            <summary>
            Creates a window that has a border of a style typically used with dialog boxes.
            A window with this style cannot have a title bar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.GROUP">
            <summary>
            Specifies the first control of a group of controls.
            The group consists of this first control and all controls defined after it,
            up to the next control with the WS_GROUP style. The first control in each group
            usually has the WS_TABSTOP style so that the user can move from group to group.
            The user can subsequently change the keyboard focus from one control
            in the group to the next control in the group by using the direction keys.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.HSCROLL">
            <summary>
            Creates a window that has a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.ICONIC">
            <summary>
            Creates a window that is initially minimized. Same as the WS_MINIMIZE style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.MAXIMIZE">
            <summary>
            Creates a window that is initially maximized.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.MAXIMIZEBOX">
            <summary>
            Creates a window that has a maximize button.
            Cannot be combined with the WS_EX_CONTEXTHELP style.
            The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.MINIMIZE">
            <summary>
            Creates a window that is initially minimized. Same as the WS_ICONIC style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.MINIMIZEBOX">
            <summary>
            Creates a window that has a minimize button.
            Cannot be combined with the WS_EX_CONTEXTHELP style.
            The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.OVERLAPPED">
            <summary>
            Creates an overlapped window.
            An overlapped window has a title bar and a border.
            Same as the WS_TILED style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.OVERLAPPEDWINDOW">
            <summary>
            Creates an overlapped window with the WS_OVERLAPPED,
            WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX,
            and WS_MAXIMIZEBOX styles. Same as the WS_TILEDWINDOW style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.POPUP">
            <summary>
            Creates a pop-up window. This style cannot be used with the WS_CHILD style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.POPUPWINDOW">
            <summary>
            Creates a pop-up window with WS_BORDER, WS_POPUP, and WS_SYSMENU styles.
            The WS_CAPTION and WS_POPUPWINDOW styles must be combined
            to make the window menu visible.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.SIZEBOX">
            <summary>
            Creates a window that has a sizing border. Same as the WS_THICKFRAME style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.SYSMENU">
            <summary>
            Creates a window that has a window menu on its title bar.
            The WS_CAPTION style must also be specified.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.TABSTOP">
            <summary>
            Specifies a control that can receive the keyboard focus
            when the user presses the TAB key. Pressing the TAB key
            changes the keyboard focus to the next control with the WS_TABSTOP style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.THICKFRAME">
            <summary>
            Creates a window that has a sizing border. Same as the WS_SIZEBOX style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.TILED">
            <summary>
            Creates an overlapped window.
            An overlapped window has a title bar and a border.
            Same as the WS_OVERLAPPED style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.TILEDWINDOW">
            <summary>
            Creates an overlapped window with the WS_OVERLAPPED,
            WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX,
            and WS_MAXIMIZEBOX styles. Same as the WS_OVERLAPPEDWINDOW style.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.VISIBLE">
            <summary>
            Creates a window that is initially visible.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.VSCROLL">
            <summary>
            Creates a window that has a vertical scroll bar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window.
            When the user clicks the question mark, the cursor changes
            to a question mark with a pointer.
            If the user then clicks a child window, the child receives a WM_HELP message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally,
            be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_LAYERED">
            <summary>
            Creates a layered window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language
            that supports reading order alignment, the vertical scroll bar (if present)
            is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_LTRREADING">
            <summary>
            The window text is displayed using
            left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style
            does not send the WM_PARENTNOTIFY message to its parent window
            when it is created or destroyed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties.
            This depends on the window class.
            This style has an effect only if the shell language is Hebrew,
            Arabic, or another language that supports reading-order alignment;
            otherwise, the style is ignored.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area.
            This is the default.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language
            that supports reading-order alignment, the window text is displayed
            using right-to-left reading-order properties.
            For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style
            intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended
            to be used as a floating toolbar.
            A tool window has a title bar that is shorter than a normal title bar,
            and the window title is drawn using a smaller font.
            A tool window does not appear in the taskbar or in the dialog
            that appears when the user presses ALT+TAB.
            If a tool window has a system menu, its icon is not displayed on the title bar.
            However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed
            above all non-topmost windows and should stay above them,
            even when the window is deactivated.
            To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style
            should not be painted until siblings beneath the window
            (that were created by the same thread) have been painted.
            The window appears transparent because the bits
            of underlying sibling windows have already been painted.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WS.EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="T:SnapStream.Util.GWL">
            <summary>
            Defines indices used to retrieve data about a window in a call to
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/getwindowlong.asp">GetWindowLong</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.WNDPROC">
            <summary>
            Retrieves the address of the window procedure,
            or a handle representing the address of the window procedure.
            You must use the CallWindowProc function to call the window procedure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.HINSTANCE">
            <summary>
            Retrieves a handle to the application instance.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.HWNDPARENT">
            <summary>
            Retrieves a handle to the parent window, if any.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.STYLE">
            <summary>
            Retrieves the window styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.EXSTYLE">
            <summary>
            Retrieves the extended window styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.USERDATA">
            <summary>
            Retrieves the user data associated with the window.
            This data is intended for use by the application that created the window.
            Its value is initially zero.
            </summary>
        </member>
        <member name="F:SnapStream.Util.GWL.ID">
            <summary>
            Retrieves the identifier of the window.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WM">
            <summary>
            Defines a subset of the Windows Message constants used to handle messages in
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowprocedures.asp">Window Procedures</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NULL">
            <summary>
            The WM_NULL message performs no operation.
            An application sends the WM_NULL message if it wants to post a message
            that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window
            be created by calling the CreateWindowEx or CreateWindow function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed.
            It is sent to the window procedure of the window being destroyed
            after the window is removed from the screen.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated
            and the window being deactivated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window
            after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window
            immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes
            the enabled state of a window.
            It is sent to the window whose enabled state is changing.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window
            to allow changes in that window to be redrawn or to prevent changes
            in that window from being redrawn.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds
            to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length,
            in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application
            makes a request to paint a portion of an application's window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window
            or an application should terminate.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses
            to end the session or when an application calls the ExitWindows function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application
            and is generated when the application calls the PostQuitMessage function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests
            that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased
            (for example, when a window is resized).
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSCOLORCHANGE">
            <summary>
            The WM_SYSCOLORCHANGE message is sent to all top-level windows
            when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application
            after the system processes the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window
            when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows
            after making a change to the WIN.INI file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows
            whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging
            to a different application than the active window is about to be activated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows
            in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.TIMECHANGE">
            <summary>
            An application sends the WM_TIMECHANGE message whenever it updates the system time.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor
            to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window
            and the user presses a mouse button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user
            clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT)
            application to separate user-input messages from other messages
            sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window
            when the size or position of the window is about to change.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PAINTICON">
            <summary>
            The WM_PAINTICON message is sent to a minimized window when the icon is to be painted.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ICONERASEBKGND">
            <summary>
            The WM_ICONERASEBKGND message is sent to a minimized window
            when the background of the icon must be filled before painting the icon.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus
            to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job
            is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button,
            combo box, list box, or menu when a visual aspect of the button,
            combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box,
            list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DELETEITEM">
            <summary>
            The WM_DELETEITEM message is sent to the owner of a list box
            or combo box when the list box or combo box is destroyed
            or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT,
            CB_DELETESTRING, or CB_RESETCONTENT message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.VKEYTOITEM">
            <summary>
            The WM_VKEYTOITEM message is sent by a list box
            with the LBS_WANTKEYBOARDINPUT style to its owner
            in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CHARTOITEM">
            <summary>
            The WM_CHARTOITEM message is sent by a list box
            with the LBS_WANTKEYBOARDINPUT style to its owner
            in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message
            to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control
            to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window
            to associate a hot key with the window. When the user presses the hot key,
            the system activates the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message
            to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window.
            The window is about to be dragged by the user
            but does not have an icon defined for its class.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine
            the relative position of a new item in the sorted list
            of an owner-drawn combo box or list box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows
            when the system detects more than 12.5 percent of system time
            over a 30- to 60-second interval is being spent compacting memory.
            This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COMMNOTIFY">
            <summary>
            No longer supported: WM_COMMNOTIFY
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size,
            position, or place in the Z order is about to change as a result
            of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size,
            position, or place in the Z order has changed as a result of a call
            to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.POWER">
            <summary>
            The WM_POWER message is broadcast when the system,
            typically a battery-powered personal computer, is about to enter suspended mode.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application
            when a user cancels the application's journaling activities.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NOTIFY">
            <summary>
            The WM_NOTIFY message is sent by a common control to its parent window
            when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window
            with the focus when the user chooses a new input language,
            either with the hotkey (specified in the Keyboard control panel application)
            or from the indicator on the system taskbar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window
            after an application's input language has been changed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NOTIFYFORMAT">
            <summary>
            Used to determine if a window accepts ANSI or Unicode structures
            in the WM_NOTIFY notification message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked
            the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function
            is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function
            has changed one or more of the window's styles.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows
            when the display resolution has changed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle
            to the large or small icon associated with a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate
            a new large or small icon with a window.
            The system displays the large icon in the ALT+TAB dialog box,
            and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message
            when a window is first created.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size
            and position of a window's client area must be calculated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves,
            or when a mouse button is pressed or released.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area
            needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control.
            By default, the system handles all keyboard input to the control;
            the system interprets certain types of keyboard input as dialog box navigation keys.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor
            is moved within the nonclient area of the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses
            the left mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases
            the left mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks
            the left mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses
            the right mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases
            the right mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks
            the right mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses
            the middle mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases
            the middle mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks
            the middle mouse button while the cursor is within the nonclient area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.KEYFIRST">
            <summary>
            Signifies the first keyboard-related input msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window
            with the keyboard focus when a nonsystem key is pressed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window
            with the keyboard focus when a nonsystem key is released.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus
            when a WM_KEYDOWN message is translated by the TranslateMessage function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus
            when a WM_KEYUP message is translated by the TranslateMessage function.
            A dead key is a key that generates a character, such as the umlaut (double-dot),
            that is combined with another character to form a composite character.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus
            when the user presses the F10 key (which activates the menu bar)
            or holds down the ALT key and then presses another key.
            It also occurs when no window currently has the keyboard focus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus
            when the user releases a key that was pressed while the ALT key was held down.
            It also occurs when no window currently has the keyboard focus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus
            when a WM_SYSKEYDOWN message is translated by the TranslateMessage function.
            It specifies the character code of a system character key — that is,
            a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus
            when a WM_SYSKEYDOWN message is translated by the TranslateMessage function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.KEYLAST">
            <summary>
            Signifies the last keyboard-related input msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_STARTCOMPOSITION">
            <summary>
            The WM_IME_STARTCOMPOSITION message is sent immediately before
            the IME generates the composition string as a result of a keystroke.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_ENDCOMPOSITION">
            <summary>
            The WM_IME_ENDCOMPOSITION message is sent to an application
            when the IME ends composition.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_COMPOSITION">
            <summary>
            The WM_IME_COMPOSITION message is sent to an application
            when the IME changes composition status as a result of a keystroke.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_KEYLAST">
            <summary>
            Signifies the last keyboard-related input msg (when including IME composition)
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure
            immediately before a dialog box is displayed.
            Dialog box procedures typically use this message to initialize controls
            and carry out any other initialization tasks
            that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects
            a command item from a menu, when a control sends
            a notification message to its parent window,
            or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SYSCOMMAND">
            <summary>
            A window receives the WM_SYSCOMMAND message when the user
            chooses a command from the Window menu
            (formerly known as the system or control menu)
            or when the user chooses the maximize button, minimize button,
            restore button, or close button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.TIMER">
            <summary>
            The WM_TIMER message is posted
            to the installing thread's message queue when a timer expires.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs
            in the window's standard horizontal scroll bar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs
            in the window's standard vertical scroll bar.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active.
            It occurs when the user clicks an item on the menu bar or presses a menu key.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent
            when a drop-down menu or submenu is about to become active.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's
            owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active
            and the user presses a key that does not correspond
            to any mnemonic or accelerator key.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box
            or menu that is entering an idle state.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message
            to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window
            of a message box before Windows draws the message box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends
            the WM_CTLCOLOREDIT message to its parent window
            when the control is about to be drawn.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORLISTBOX">
            <summary>
            The WM_CTLCOLORLISTBOX message is sent to the parent window
            of a list box before the system draws the list box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window
            of a button before drawing the button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box
            before the system draws the dialog box.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window
            of a scroll bar control when the control is about to be drawn.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only
            or disabled, sends the WM_CTLCOLORSTATIC message to its parent window
            when the control is about to be drawn.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSEFIRST">
            <summary>
            Signifies the first mouse-related input msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses
            the left mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases
            the left mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks
            the left mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses
            the right mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases
            the right mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks
            the right mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses
            the middle mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases
            the middle mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks
            the middle mouse button while the cursor is in the client area of a window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window
            when the mouse wheel is rotated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSELAST">
            <summary>
            Signifies the last mouse-related input msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window
            when the child window is created or destroyed,
            or when the user clicks a mouse button
            while the cursor is over the child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's
            main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's
            main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application
            when the right or left arrow key is used to switch
            between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.POWERBROADCAST">
            <summary>
            The WM_POWERBROADCAST message is broadcast
            to an application to notify it of power-management events.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DEVICECHANGE">
            <summary>
            The WM_DEVICECHANGE device message notifies an application
            of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_SETCONTEXT">
            <summary>
            The WM_IME_SETCONTEXT message is sent to an application
            when a window of the application is activated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_NOTIFY">
            <summary>
            The WM_IME_NOTIFY message is sent to an application
            to notify it of changes to the IME window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_CONTROL">
            <summary>
            The WM_IME_CONTROL message directs the IME window
            to carry out the requested command.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_COMPOSITIONFULL">
            <summary>
            The WM_IME_COMPOSITIONFULL message is sent to an application
            when the IME window finds no space to extend the area for the composition window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_SELECT">
            <summary>
            The WM_IME_SELECT message is sent to an application
            when the system is about to change the current IME.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_CHAR">
            <summary>
            The WM_IME_CHAR message is sent to an application
            when the IME gets a character of the conversion result.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_KEYDOWN">
            <summary>
            The WM_IME_KEYDOWN message is sent to an application
            by the IME to notify the application of a key press.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.IME_KEYUP">
            <summary>
            The WM_IME_KEYUP message is sent to an application
            by the IME to notify the application of a key release.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message
            to a multiple-document interface (MDI) client window
            to create an MDI child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message
            to a multiple-document interface (MDI) client window
            to close an MDI child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message
            to a multiple-document interface (MDI) client window
            to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message
            to a multiple-document interface (MDI) client window
            to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message
            to a multiple-document interface (MDI) client window
            to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message
            to a multiple-document interface (MDI) client window
            to maximize an MDI child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message
            to a multiple-document interface (MDI) client window
            to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message
            to a multiple-document interface (MDI) client window
            to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message
            to a multiple-document interface (MDI) client window
            to arrange all minimized MDI child windows.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message
            to a multiple-document interface (MDI) client window
            to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message
            to a multiple-document interface (MDI) client window
            to replace the entire menu of an MDI frame window,
            to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window
            after it enters the moving or sizing modal loop.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window,
            after it has exited the moving or sizing modal loop.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application
            that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message
            to a multiple-document interface (MDI) client window
            to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor
            hovers over the client area of the window for the period of time
            specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor
            leaves the client area of the window specified
            in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CUT">
            <summary>
            An application sends a WM_CUT message
            to an edit control or combo box to delete (cut)
            the current selection, if any, in the edit control
            and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.COPY">
            <summary>
            An application sends the WM_COPY message
            to an edit control or combo box to copy
            the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message
            to an edit control or combo box to copy
            the current content of the clipboard to the edit control
            at the current caret position.
            Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message
            to an edit control or combo box to delete (clear)
            the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message
            to an edit control to undo the last operation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner
            if it has delayed rendering a specific clipboard format
            and if an application has requested data in that format.
            The clipboard owner must render data in the specified format
            and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner
            before it is destroyed, if the clipboard owner has delayed rendering
            one or more clipboard formats. For the content of the clipboard
            to remain available to other applications, the clipboard owner must render data
            in all the formats it is capable of generating, and place the data
            on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner
            when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window
            in the clipboard viewer chain when the content of the clipboard changes.
            This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner
            by a clipboard viewer window when the clipboard contains data
            in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner
            by a clipboard viewer window when the clipboard contains data
            in the CF_OWNERDISPLAY format and an event occurs
            in the clipboard viewer's vertical scroll bar.
            The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner
            by a clipboard viewer window when the clipboard contains data
            in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner
            by a clipboard viewer window to request the name
            of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window
            in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner
            by a clipboard viewer window. This occurs when the clipboard
            contains data in the CF_OWNERDISPLAY format and an event occurs
            in the clipboard viewer's horizontal scroll bar.
            The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.QUERYNEWPALETTE">
            <summary>
            The WM_QUERYNEWPALETTE message informs a window that it is about to receive
            the keyboard focus, giving the window the opportunity to realize
            its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications
            that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PALETTECHANGED">
            <summary>
            The WM_PALETTECHANGED message is sent to all top-level
            and overlapped windows after the window with the keyboard focus
            has realized its logical palette, thereby changing the system palette.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses
            a hot key registered by the RegisterHotKey function.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request
            that it draw itself in the specified device context,
            most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window
            to request that it draw its client area in the specified device context,
            most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HANDHELDFIRST">
            <summary>
            Specifies the first hand-held msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.HANDHELDLAST">
            <summary>
            Specifies the last hand-held msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.AFXFIRST">
            <summary>
            Specifies the first afx msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.AFXLAST">
            <summary>
            Specifies the last afx msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PENWINFIRST">
            <summary>
            Specifies the first penwin msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.PENWINLAST">
            <summary>
            Specifies the last penwin msg
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages,
            usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages
            for use by private window classes, usually of the form WM_USER+X,
            where X is an integer value.
            </summary>
        </member>
        <member name="T:SnapStream.Util.DT">
            <summary>
            CONST_DTFLAGS for use in older DirectX DrawText calls
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.TOP">
            <summary>
            DT_TOP
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.LEFT">
            <summary>
            DT_LEFT
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.CENTER">
            <summary>
            DT_CENTER
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.RIGHT">
            <summary>
            DT_RIGHT
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.VCENTER">
            <summary>
            DT_VCENTER
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.BOTTOM">
            <summary>
            DT_BOTTOM
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.WORDBREAK">
            <summary>
            DT_WORDBREAK
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.SINGLELINE">
            <summary>
            DT_SINGLELINE
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.EXPANDTABS">
            <summary>
            DT_EXPANDTABS
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.TABSTOP">
            <summary>
            DT_TABSTOP
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.NOCLIP">
            <summary>
            DT_NOCLIP
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.EXTERNALLEADING">
            <summary>
            DT_EXTERNALLEADING
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.CALCRECT">
            <summary>
            DT_CALCRECT
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.NOPREFIX">
            <summary>
            DT_NOPREFIX
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.INTERNAL">
            <summary>
            DT_INTERNAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.EDITCONTROL">
            <summary>
            DT_EDITCONTROL
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.PATH_ELLIPSIS">
            <summary>
            DT_PATH_ELLIPSIS
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.END_ELLIPSIS">
            <summary>
            DT_END_ELLIPSIS
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.MODIFYSTRING">
            <summary>
            DT_MODIFYSTRING
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.RTLREADING">
            <summary>
            DT_RTLREADING
            </summary>
        </member>
        <member name="F:SnapStream.Util.DT.WORD_ELLIPSIS">
            <summary>
            DT_WORD_ELLIPSIS
            </summary>
        </member>
        <member name="T:SnapStream.Util.CAPS">
            <summary>
            Flags used in calls to <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_88s3.asp">GetDeviceCaps</see>
            to specify which item to return
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.LOGPIXELSX">
            <summary>
            Logical pixels/inch X wise
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.LOGPIXELSY">
            <summary>
            Logical pixels/inch Y wise
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:SnapStream.Util.CAPS.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="T:SnapStream.Util.TPM">
            <summary>
            Defines the flags used in calling <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/menus/menureference/menufunctions/trackpopupmenuex.asp">TrackPopupMenuEx</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.LEFTBUTTON">
            <summary>
            If this flag is set, the user can select menu items
            with only the left mouse button.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.RIGHTBUTTON">
            <summary>
            If this flag is set, the user can select menu items
            with both the left and right mouse buttons.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.LEFTALIGN">
            <summary>
            If this flag is set, the function positions the shortcut menu
            so that its left side is aligned with the coordinate specified by the x parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.CENTERALIGN">
            <summary>
            If this flag is set, the function centers the shortcut menu
            horizontally relative to the coordinate specified by the x parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.RIGHTALIGN">
            <summary>
            Positions the shortcut menu so that its right side is aligned
            with the coordinate specified by the x parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.TOPALIGN">
            <summary>
            If this flag is set, the function positions the shortcut menu
            so that its top side is aligned with the coordinate specified by the y parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.VCENTERALIGN">
            <summary>
            If this flag is set, the function centers the shortcut menu
            vertically relative to the coordinate specified by the y parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.BOTTOMALIGN">
            <summary>
            If this flag is set, the function positions the shortcut menu
            so that its bottom side is aligned with the coordinate specified by the y parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.HORIZONTAL">
            <summary>
            If the menu cannot be shown at the specified location
            without overlapping the excluded rectangle,
            the system tries to accommodate the requested horizontal alignment
            before the requested vertical alignment.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.VERTICAL">
            <summary>
            If the menu cannot be shown at the specified location
            without overlapping the excluded rectangle,
            the system tries to accommodate the requested vertical alignment
            before the requested horizontal alignment.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.NONOTIFY">
            <summary>
            If this flag is set, the function
            does not send notification messages when the user clicks on a menu item.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.RETURNCMD">
            <summary>
            If this flag is set, the function returns the menu item
            identifier of the user's selection in the return value.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.RECURSE">
            <summary>
            Use the TPM_RECURSE flag to display a menu
            when another menu is already displayed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.HORPOSANIMATION">
            <summary>
            Animates the menu from left to right.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.HORNEGANIMATION">
            <summary>
            Animates the menu from right to left.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.VERPOSANIMATION">
            <summary>
            Animates the menu from top to bottom.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.VERNEGANIMATION">
            <summary>
            Animates the menu from bottom to top.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.NOANIMATION">
            <summary>
            Displays menu without animation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TPM.LAYOUTRTL">
            <summary>
            To have text layout from right-to-left,
            use TPM_LAYOUTRTL.
            By default, the text layout is left-to-right.
            </summary>
        </member>
        <member name="T:SnapStream.Util.INPUTType">
            <summary>
            Defines different input types
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUTType.Mouse">
            <summary>
            The mouse
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUTType.Keyboard">
            <summary>
            The keyboard
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUTType.Hardware">
            <summary>
            Other hardware, such as a remote
            </summary>
        </member>
        <member name="T:SnapStream.Util.KEYEVENTF">
            <summary>
            Defines different key event flags on the firefly remote
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYEVENTF.EXTENDEDKEY">
            <summary>
            An extended key was pressed
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYEVENTF.KEYUP">
            <summary>
            The key state is now up
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYEVENTF.UNICODE">
            <summary>
            The uni-code representation
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYEVENTF.SCANCODE">
            <summary>
            The scancode of the character
            </summary>
        </member>
        <member name="T:SnapStream.Util.MOUSEEVENTF">
            <summary>
            Defines different mouse event flags on the firefly remote
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.MOVE">
            <summary>
            WM_MOUSEMOVE
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.LEFTDOWN">
            <summary>
            WM_LBUTTONDOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.LEFTUP">
            <summary>
            WM_LBUTTONUP
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.RIGHTDOWN">
            <summary>
            WM_RBUTTONDOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.RIGHTUP">
            <summary>
            WM_RBUTTONUP
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.MIDDLEDOWN">
            <summary>
            WM_MBUTTONDOWN
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.MIDDLEUP">
            <summary>
            WM_MBUTTONUP
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEEVENTF.ABSOLUTE">
            <summary>
            ABSOLUTE
            </summary>
        </member>
        <member name="T:SnapStream.Util.SW">
            <summary>
            Defines some commands to use when calling <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/showwindow.asp">ShowWindow</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.HIDE">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWNORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or maximized,
            the system restores it to its original size and position.
            An application should specify this flag when displaying
            the window for the first time.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.NORMAL">
            <summary>
            Same as SHOWNORMAL
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.MAXIMIZE">
            <summary>
            Maximizes the specified window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position.
            This value is similar to SW_SHOWNORMAL, except the window is not actived.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOW">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.MINIMIZE">
            <summary>
            Minimizes the specified window and activates the next
            top-level window in the Z order.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window.
            This value is similar to SW_SHOWMINIMIZED,
            except the window is not activated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWNA">
            <summary>
            Displays the window in its current size and position.
            This value is similar to SW_SHOW, except the window is not activated.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.RESTORE">
            <summary>
            Activates and displays the window. If the window is minimized or maximized,
            the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_ value specified
            in the STARTUPINFO structure passed to the CreateProcess function
            by the program that started the application.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.FORCEMINIMIZE">
            <summary>
            Minimizes a window, even if the thread that owns the window is hung.
            This flag should only be used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SW.MAX">
            <summary>
            Signifies the last value in this enum
            </summary>
        </member>
        <member name="T:SnapStream.Util.CSIDL">
            <summary>
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/enums/csidl.asp">CSIDL</see>
            values provide a unique system-independent way
            to identify special folders used frequently by applications,
            but which may not have the same name or location on any given system.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.FLAG_CREATE">
            <summary>
            Combine this CSIDL with any of the following CSIDLs
            to force the creation of the associated folder.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.ADMINTOOLS">
            <summary>
            The file system directory that is used to store administrative tools
            for an individual user. The Microsoft Management Console (MMC)
            will save customized consoles to this directory, and it will roam with the user.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.ALTSTARTUP">
            <summary>
            The file system directory that corresponds to the user's
            nonlocalized Startup program group.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.APPDATA">
            <summary>
            The file system directory that serves as a common repository
            for application-specific data. A typical path is
            C:\Documents and Settings\username\Application Data.
            This CSIDL is supported by the redistributable Shfolder.dll
            for systems that do not have the Microsoft Internet Explorer 4.0
            integrated Shell installed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.BITBUCKET">
            <summary>
            The virtual folder containing the objects in the user's Recycle Bin.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.CDBURN_AREA">
            <summary>
            The file system directory acting as a staging area for files
            waiting to be written to CD. A typical path is
            C:\Documents and Settings\username\Local Settings\Application Data\Microsoft\CD Burning.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_ADMINTOOLS">
            <summary>
            The file system directory containing administrative tools
            for all users of the computer.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_ALTSTARTUP">
            <summary>
            The file system directory that corresponds to the nonlocalized
            Startup program group for all users.
            Valid only for Microsoft Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_APPDATA">
            <summary>
            The file system directory containing application data for all users.
            A typical path is C:\Documents and Settings\All Users\Application Data.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_DESKTOPDIRECTORY">
            <summary>
            The file system directory that contains files and folders
            that appear on the desktop for all users. A typical path is
            C:\Documents and Settings\All Users\Desktop.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_DOCUMENTS">
            <summary>
            The file system directory that contains documents
            that are common to all users. A typical paths is
            C:\Documents and Settings\All Users\Documents.
            Valid for Windows NT systems and Microsoft Windows 95
            and Windows 98 systems with Shfolder.dll installed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_FAVORITES">
            <summary>
            The file system directory that serves as a common repository
            for favorite items common to all users.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_MUSIC">
            <summary>
            The file system directory that serves as a repository
            for music files common to all users. A typical path is
            C:\Documents and Settings\All Users\Documents\My Music.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_PICTURES">
            <summary>
            The file system directory that serves as a repository
            for image files common to all users. A typical path is
            C:\Documents and Settings\All Users\Documents\My Pictures.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_PROGRAMS">
            <summary>
            The file system directory that contains the directories
            for the common program groups that appear on the Start menu
            for all users. A typical path is
            C:\Documents and Settings\All Users\Start Menu\Programs.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_STARTMENU">
            <summary>
            The file system directory that contains the programs
            and folders that appear on the Start menu for all users.
            A typical path is C:\Documents and Settings\All Users\Start Menu.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_STARTUP">
            <summary>
            The file system directory that contains the programs
            that appear in the Startup folder for all users. A typical path is
            C:\Documents and Settings\All Users\Start Menu\Programs\Startup.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_TEMPLATES">
            <summary>
            The file system directory that contains the templates
            that are available to all users. A typical path is
            C:\Documents and Settings\All Users\Templates.
            Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COMMON_VIDEO">
            <summary>
            The file system directory that serves as a repository
            for video files common to all users. A typical path is
            C:\Documents and Settings\All Users\Documents\My Videos.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.CONTROLS">
            <summary>
            The virtual folder containing icons for the Control Panel applications.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.COOKIES">
            <summary>
            The file system directory that serves as a common repository for Internet cookies.
            A typical path is C:\Documents and Settings\username\Cookies.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.DESKTOP">
            <summary>
            The virtual folder representing the Windows desktop, the root of the namespace.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.DESKTOPDIRECTORY">
            <summary>
            The file system directory used to physically store file objects
            on the desktop (not to be confused with the desktop folder itself).
            A typical path is C:\Documents and Settings\username\Desktop.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.DRIVES">
            <summary>
            The virtual folder representing My Computer, containing everything
            on the local computer: storage devices, printers, and Control Panel.
            The folder may also contain mapped network drives.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.FAVORITES">
            <summary>
            The file system directory that serves as a common repository
            for the user's favorite items. A typical path is
            C:\Documents and Settings\username\Favorites.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.FONTS">
            <summary>
            A virtual folder containing fonts. A typical path is C:\Windows\Fonts.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.HISTORY">
            <summary>
            The file system directory that serves as a common repository
            for Internet history items.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.INTERNET">
            <summary>
            A virtual folder representing the Internet.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.INTERNET_CACHE">
            <summary>
            The file system directory that serves as a common repository
            for temporary Internet files. A typical path is
            C:\Documents and Settings\username\Local Settings\Temporary Internet Files.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.LOCAL_APPDATA">
            <summary>
            The file system directory that serves as a data repository
            for local (nonroaming) applications. A typical path is
            C:\Documents and Settings\username\Local Settings\Application Data.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.MYDOCUMENTS">
            <summary>
            The virtual folder representing the My Documents desktop item.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.MYMUSIC">
            <summary>
            The file system directory that serves as a common repository
            for music files. A typical path is
            C:\Documents and Settings\User\My Documents\My Music.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.MYPICTURES">
            <summary>
            The file system directory that serves as a common repository
            for image files. A typical path is
            C:\Documents and Settings\username\My Documents\My Pictures.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.MYVIDEO">
            <summary>
            The file system directory that serves as a common repository
            for video files. A typical path is 
            C:\Documents and Settings\username\My Documents\My Videos.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.NETHOOD">
            <summary>
            A file system directory containing the link objects
            that may exist in the My Network Places virtual folder.
            It is not the same as CSIDL_NETWORK, which represents
            the network namespace root. A typical path is
            C:\Documents and Settings\username\NetHood.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.NETWORK">
            <summary>
            A virtual folder representing Network Neighborhood,
            the root of the network namespace hierarchy.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PERSONAL">
            <summary>
            The virtual folder representing the My Documents desktop item.
            This is equivalent to CSIDL_MYDOCUMENTS.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PRINTERS">
            <summary>
            The virtual folder containing installed printers.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PRINTHOOD">
            <summary>
            The file system directory that contains the link objects
            that can exist in the Printers virtual folder. A typical path is
            C:\Documents and Settings\username\PrintHood.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PROFILE">
            <summary>
            The user's profile folder. A typical path is
            C:\Documents and Settings\username.
            Applications should not create files or folders at this level;
            they should put their data under the locations
            referred to by CSIDL_APPDATA or CSIDL_LOCAL_APPDATA.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PROFILES">
            <summary>
            The file system directory containing user profile folders.
            A typical path is C:\Documents and Settings.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PROGRAM_FILES">
            <summary>
            The Program Files folder. A typical path is C:\Program Files.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PROGRAM_FILES_COMMON">
            <summary>
            A folder for components that are shared across applications.
            A typical path is C:\Program Files\Common. Valid only for Windows NT,
            Windows 2000, and Windows XP systems.
            Not valid for Windows Millennium Edition (Windows Me).
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.PROGRAMS">
            <summary>
            The file system directory that contains the user's program groups
            (which are themselves file system directories).
            A typical path is C:\Documents and Settings\username\Start Menu\Programs.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.RECENT">
            <summary>
            The file system directory that contains shortcuts
            to the user's most recently used documents.
            A typical path is C:\Documents and Settings\username\My Recent Documents.
            To create a shortcut in this folder, use SHAddToRecentDocs.
            In addition to creating the shortcut, this function updates
            the Shell's list of recent documents and adds the shortcut
            to the My Recent Documents submenu of the Start menu.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.SENDTO">
            <summary>
            The file system directory that contains Send To menu items.
            A typical path is C:\Documents and Settings\username\SendTo.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.STARTMENU">
            <summary>
            The file system directory containing Start menu items.
            A typical path is C:\Documents and Settings\username\Start Menu.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.STARTUP">
            <summary>
            The file system directory that corresponds
            to the user's Startup program group.
            The system starts these programs whenever any user logs onto Windows NT
            or starts Windows 95. A typical path is
            C:\Documents and Settings\username\Start Menu\Programs\Startup.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.SYSTEM">
            <summary>
            The Windows System folder. A typical path is C:\Windows\System32.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.TEMPLATES">
            <summary>
            The file system directory that serves as a common repository
            for document templates. A typical path is
            C:\Documents and Settings\username\Templates.
            </summary>
        </member>
        <member name="F:SnapStream.Util.CSIDL.WINDOWS">
            <summary>
            The Windows directory or SYSROOT. This corresponds to the %windir%
            or %SYSTEMROOT% environment variables. A typical path is C:\Windows.
            </summary>
        </member>
        <member name="T:SnapStream.Util.SWP">
            <summary>
            Defines window sizing and positioning flags that can be used when calling
            <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/setwindowpos.asp">SetWindowPos</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOSIZE">
            <summary>
            Retains the current size.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOMOVE">
            <summary>
            Retains the current position.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOZORDER">
            <summary>
            Retains the current Z order.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set,
            no repainting of any kind occurs. This applies to the client area,
            the nonclient area (including the title bar and scroll bars),
            and any part of the parent window uncovered as a result
            of the window being moved. When this flag is set,
            the application must explicitly invalidate or redraw any parts
            of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOACTIVATE">
            <summary>
            Does not activate the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.FRAMECHANGED">
            <summary>
            Sends a WM_NCCALCSIZE message to the window,
            even if the size of the window is not being changed.
            If this flag is not specified, WM_NCCALCSIZE is sent
            only when the size of the window is being changed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area.
            If this flag is not specified, the valid contents
            of the client area are saved and copied back into the client area
            after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOOWNERZORDER">
            <summary>
            Does not change the position in the Z order of the owner window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.DRAWFRAME">
            <summary>
            Draws a frame, defined in the class description
            of the window, around the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.NOREPOSITION">
            <summary>
            Same as the SWP_NOOWNERZORDER flag.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.DEFERERASE">
            <summary>
            Prevents generation of the WM_SYNCPAINT message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SWP.ASYNCWINDOWPOS">
            <summary>
            If the calling thread and the thread that owns the window
            are attached to different input queues, the system posts
            the request to the thread that owns the window.
            This prevents the calling thread from blocking its execution
            while other threads process the request.
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers">
            <summary>
            Contains some useful methods and properties
            </summary>
        </member>
        <member name="P:SnapStream.Util.Helpers.InvalidFileChars">
            <summary>
            Returns an array of characters that are invalid in a filename
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Xml">
            <summary>
            Contains some XML-related methods
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.WaitForFile(System.IO.FileSystemEventArgs)">
            <summary>
            Keeps attempting to load the file after a change was detected, unless it was deleted
            </summary>
            <param name="fsea">Contains the change type detected</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.WaitForFile(System.String)">
            <summary>
            Keeps trying to load the specified XML file
            </summary>
            <param name="sPath">The file to load</param>
            <returns>The XML loaded from the file or null</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.WaitForFileSave(System.Xml.XmlDocument,System.String)">
            <summary>
            Keepers trying to save the specified XML file
            </summary>
            <param name="xd">The XML data to save</param>
            <param name="sPath">The XML file name to save to</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.CheckType(System.Xml.XmlElement,System.Type)">
            <summary>
            Checks to see whether the given XML element has a 'Type'
            property that matches the Type specified
            </summary>
            <param name="xeIn">The XML element</param>
            <param name="tIn">The Type to check for</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.PutType(System.Xml.XmlElement,System.Type)">
            <summary>
            Sets the 'Type' attribute on the given element to
            the specified Type
            </summary>
            <param name="xeIn">The XML element</param>
            <param name="tIn">The Type to set</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.GetType(System.Xml.XmlElement,System.String)">
            <summary>
            Retrieves the System Type that the given XML element
            refers to
            </summary>
            <param name="xeIn">The XML element</param>
            <param name="sNameSpace">The namespace to check</param>
            <returns>The System Type that the given XML element refers to</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.GetType(System.Xml.XmlElement)">
            <summary>
            Retrieves the System Type that the given XML element
            refers to
            </summary>
            <param name="xeIn">The XML element</param>
            <returns>The System Type that the given XML element refers to</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Xml.GetElement(System.Type,System.Xml.XmlDocument)">
            <summary>
            Creates a new XML element for the given System Type
            </summary>
            <param name="tIn">The Type that the XML element will refer to</param>
            <param name="xdIn">The XML document that will contain this XML element</param>
            <returns>The new XML element</returns>
        </member>
        <member name="T:SnapStream.Util.Helpers.AppException">
            <summary>
            Contains some methods for printing exceptions
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.AppException.PrintException(System.Exception,System.String)">
            <summary>
            Prints the given exception and special message
            </summary>
            <param name="e">The exception to print</param>
            <param name="sSpecialMessage">The special message to print</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.AppException.PrintException(System.Exception,System.Boolean)">
            <summary>
            Prints the given exception to debug and possibly the log
            </summary>
            <param name="e">The exception to print</param>
            <param name="bAssertAndLog">
            True: Print to the log and debug
            False: Print only to debug
            </param>
        </member>
        <member name="M:SnapStream.Util.Helpers.AppException.PrintException(System.Exception)">
            <summary>
            Prints the given exception to debug and the log
            </summary>
            <param name="e">The exception to print</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.AppException.PrintException(System.Exception,System.Boolean,System.String)">
            <summary>
            Prints the given exception and special message to debug and possibly the log
            </summary>
            <param name="e">The exception to print</param>
            <param name="bAssertAndLog">
            True: Print to the log and debug
            False: Print only to debug
            </param>
            <param name="sSpecialMessage">The special message to print</param>
        </member>
        <member name="T:SnapStream.Util.Helpers.Key">
            <summary>
            Contains some methods relating to keyboard input
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.GetKeyState(System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/getkeystate.asp">GetKeyState</see>
            </summary>
            <param name="nVirtKey">Specifies a virtual key</param>
            <returns>The return value specifies the status of the specified virtual key</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.keybd_event(System.Byte,System.Byte,System.Int32,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/keybd_event.asp">keybd_event</see>
            </summary>
            <param name="VirtKey">Specifies a virtual-key code</param>
            <param name="scancode">This parameter is not used</param>
            <param name="flags">Specifies various aspects of function operation</param>
            <param name="extra">Specifies an additional value associated with the key stroke</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.VkKeyScan(System.Char)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/vkkeyscan.asp">VkKeyScan</see>
            </summary>
            <param name="ch">Specifies the character to be translated into a virtual-key code</param>
            <returns>
            If the function succeeds, the low-order byte of the return value
            contains the virtual-key code
            and the high-order byte contains the shift state
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.MapVirtualKey(System.UInt32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/mapvirtualkey.asp">MapVirtualKey</see>
            </summary>
            <param name="code">Specifies the virtual-key code or scan code for a key</param>
            <param name="maptype">Specifies the translation to perform</param>
            <returns>The return value is either a scan code, a virtual-key code, or a character value</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.SendInput(System.UInt32,SnapStream.Util.INPUT[],System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/sendinput.asp">SendInput</see>
            </summary>
            <param name="iCount">Specifies the number of structures in the pInputs array</param>
            <param name="Inputs">
            Pointer to an array of INPUT structures.
            Each structure represents an event to be inserted into the keyboard
            or mouse input stream.
            </param>
            <param name="iSize">Specifies the size, in bytes, of an INPUT structure</param>
            <returns>
            The function returns the number of events that it successfully
            inserted into the keyboard or mouse input stream
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Key.GetMessageExtraInfo">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/getmessageextrainfo.asp">GetMessageExtraInfo</see>
            </summary>
            <returns>The return value specifies the extra information</returns>
        </member>
        <member name="T:SnapStream.Util.Helpers.Win32">
            <summary>
            Contains some helpful Windows-Specific methods and utilities
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.EnumWindows(SnapStream.Util.Helpers.Win32.EnumWindowsCB,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/enumwindows.asp">EnumWindows</see>
            </summary>
            <param name="cb">Pointer to an application-defined callback function.</param>
            <param name="lparam">Specifies an application-defined value to be passed to the callback function.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.InvalidateRect(System.IntPtr,System.Drawing.Rectangle@,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_7ano.asp">InvalidateRect</see>
            </summary>
            <param name="hWnd">Handle to the window whose update region has changed.</param>
            <param name="r">Pointer to a RECT structure that contains the client coordinates of the rectangle to be added to the update region.</param>
            <param name="bErase">Specifies whether the background within the update region is to be erased when the update region is processed.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.InvalidateRect(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_7ano.asp">InvalidateRect</see>
            </summary>
            <param name="hWnd">Handle to the window whose update region has changed.</param>
            <param name="ipNull">Allows a NULL rect to be specified</param>
            <param name="bErase">Specifies whether the background within the update region is to be erased when the update region is processed.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/setwindowlong.asp">SetWindowLong</see>
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="nIndex">Specifies the zero-based offset to the value to be set.</param>
            <param name="dwNewLong">Specifies the replacement value.</param>
            <returns>
            If the function succeeds, the return value is the previous value of the specified 32-bit integer.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/getwindowlong.asp">GetWindowLong</see>
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="nIndex">Specifies the zero-based offset to the value to be retrieved.</param>
            <returns>
            If the function succeeds, the return value is the requested 32-bit value.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindow(System.IntPtr,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindow.asp">GetWindow</see>
            </summary>
            <param name="hWnd">Handle to a window.</param>
            <param name="uCmd">Specifies the relationship between the specified window and the window whose handle is to be retrieved.</param>
            <returns>If the function succeeds, the return value is a window handle. If no window exists with the specified relationship to the specified window, the return value is NULL.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.EnableWindow(System.IntPtr,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/enablewindow.asp">EnableWindow</see>
            </summary>
            <param name="hWnd">Handle to the window to be enabled or disabled.</param>
            <param name="bEnable">Specifies whether to enable or disable the window.</param>
            <returns>
            If the window was previously disabled, the return value is nonzero.
            If the window was not previously disabled, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsWindowEnabled(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/iswindowenabled.asp">IsWindowEnabled</see>
            </summary>
            <param name="hWnd">Handle to the window to test.</param>
            <returns>
            If the window is enabled, the return value is nonzero.
            If the window is not enabled, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.TrackPopupMenu(System.IntPtr,SnapStream.Util.TPM,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/menus/menureference/menufunctions/trackpopupmenu.asp">TrackPopupMenu</see>
            </summary>
            <param name="hmenu">Handle to the shortcut menu to be displayed.</param>
            <param name="fuFlags">Use zero of more of these flags to specify function options.</param>
            <param name="x">Specifies the horizontal location of the shortcut menu, in screen coordinates.</param>
            <param name="y">Specifies the vertical location of the shortcut menu, in screen coordinates.</param>
            <param name="nReserved">Reserved; must be zero.</param>
            <param name="hwnd">Handle to the window that owns the shortcut menu.</param>
            <param name="rect">Ignored.</param>
            <returns>
            If you specify TPM_RETURNCMD in the uFlags parameter, the return value is the menu-item identifier of the item that the user selected. If the user cancels the menu without making a selection, or if an error occurs, then the return value is zero.
            If you do not specify TPM_RETURNCMD in the uFlags parameter, the return value is nonzero if the function succeeds and zero if it fails.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.RegisterWindowMessage(System.String)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/registerwindowmessage.asp">RegisterWindowMessage</see>
            </summary>
            <param name="lpString">Pointer to a null-terminated string that specifies the message to be registered.</param>
            <returns>
            If the message is successfully registered, the return value is a message identifier in the range 0xC000 through 0xFFFF.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetDC(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_4esj.asp">GetDC</see>
            </summary>
            <param name="hWnd">Handle to the window whose DC is to be retrieved.</param>
            <returns>
            If the function succeeds, the return value is a handle to the DC for the specified window's client area.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_66hv.asp">ReleaseDC</see>
            </summary>
            <param name="hWnd">Handle to the window whose DC is to be released.</param>
            <param name="hDC">Handle to the DC to be released.</param>
            <returns>
            If the DC was released, the return value is 1.
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_88s3.asp">GetDeviceCaps</see>
            </summary>
            <param name="hDC">Handle to the DC.</param>
            <param name="nIndex">Specifies the item to return.</param>
            <returns>The return value specifies the value of the desired item.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/bitmaps_0fzo.asp">BitBlt</see>
            </summary>
            <param name="hDestDC">Handle to the destination device context.</param>
            <param name="x">Specifies the x-coordinate, in logical units, of the upper-left corner of the destination rectangle.</param>
            <param name="y">Specifies the y-coordinate, in logical units, of the upper-left corner of the destination rectangle.</param>
            <param name="nWidth">Specifies the width, in logical units, of the source and destination rectangles.</param>
            <param name="nHeight">Specifies the height, in logical units, of the source and the destination rectangles.</param>
            <param name="hSrcDC">Handle to the source device context.</param>
            <param name="xSrc">Specifies the x-coordinate, in logical units, of the upper-left corner of the source rectangle.</param>
            <param name="ySrc">Specifies the y-coordinate, in logical units, of the upper-left corner of the source rectangle.</param>
            <param name="dwRop">Specifies a raster-operation code.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetDeviceCaps(System.IntPtr,SnapStream.Util.CAPS)">
            <summary>
            Retrieves the device capabilities of the graphics system
            </summary>
            <param name="hDC">Handle to the DC.</param>
            <param name="cIn">TSpecifies the item to return.</param>
            <returns>The return value specifies the value of the desired item.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetClassLong(System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/getclasslong.asp">GetClassLong</see>
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="nIndex">Specifies the 32-bit value to retrieve.</param>
            <returns>
            If the function succeeds, the return value is the requested 32-bit value.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.DrawText(System.IntPtr,System.String,System.Int32,System.Int32[]@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/fontext_0odw.asp">DrawText</see>
            </summary>
            <param name="hDC">Handle to the device context.</param>
            <param name="lpString">Pointer to the string that specifies the text to be drawn.</param>
            <param name="nCount">Specifies the length of the string.</param>
            <param name="lpRect">Pointer to a RECT structure that contains the rectangle (in logical coordinates) in which the text is to be formatted.</param>
            <param name="uFormat">Specifies the method of formatting the text.</param>
            <returns>
            If the function succeeds, the return value is the height of the text in logical units. If DT_VCENTER or DT_BOTTOM is specified, the return value is the offset from lpRect->top to the bottom of the drawn text
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowPlacement(System.IntPtr,SnapStream.Util.WINDOWPLACEMENT@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindowplacement.asp">GetWindowPlacement</see>
            </summary>
            <param name="window">Handle to the window.</param>
            <param name="position">Pointer to the WINDOWPLACEMENT structure that receives the show state and position information.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetForegroundWindow">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getforegroundwindow.asp">GetForegroundWindow</see>
            </summary>
            <returns>The return value is a handle to the foreground window. The foreground window can be NULL in certain circumstances, such as when a window is losing activation.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/showwindow.asp">ShowWindow</see>
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="iCmdShow">Specifies how the window is to be shown.</param>
            <returns>
            If the window was previously visible, the return value is nonzero.
            If the window was previously hidden, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.BringWindowToTop(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/bringwindowtotop.asp">BringWindowToTop</see>
            </summary>
            <param name="hWnd">Handle to the window to bring to the top of the Z order</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ShowWindow(System.IntPtr,SnapStream.Util.SW)">
            <summary>
            Sets the window's show state
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="swIn">Specifies how the window is to be shown.</param>
            <returns>
            If the window was previously visible, the return value is nonzero.
            If the window was previously hidden, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ShowOwnedPopups(System.IntPtr,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/showownedpopups.asp">ShowOwnedPopups</see>
            </summary>
            <param name="hWnd">Handle to the window that owns the pop-up windows to be shown or hidden.</param>
            <param name="fShow">Specifies whether pop-up windows are to be shown or hidden.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.FindWindow(System.String,System.String)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/findwindow.asp">FindWindow</see>
            </summary>
            <param name="lpClassName">Pointer to a null-terminated string that specifies the class name or a class atom created by a previous call to the RegisterClass or RegisterClassEx function.</param>
            <param name="lpWindowName">Pointer to a null-terminated string that specifies the window name (the window's title).</param>
            <returns>
            If the function succeeds, the return value is a handle to the window that has the specified class name and window name.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.WindowFromPoint(System.Int32,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/windowfrompoint.asp">WindowFromPoint</see>
            </summary>
            <param name="x">The x coordinate</param>
            <param name="y">The y coordinate</param>
            <returns>
            The return value is a handle to the window that contains the point.
            If no window exists at the given point, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsWindow(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/iswindow.asp">IsWindow</see>
            </summary>
            <param name="hWnd">Handle to the window to test.</param>
            <returns>
            If the window handle identifies an existing window, the return value is nonzero.
            If the window handle does not identify an existing window, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsWindowVisible(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/iswindowvisible.asp">IsWindowVisible</see>
            </summary>
            <param name="hWnd">Handle to the window to test.</param>
            <returns>If the specified window, its parent window, its parent's parent window, and so forth, have the WS_VISIBLE style, the return value is nonzero. Otherwise, the return value is zero.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowThreadProcessId(System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindowthreadprocessid.asp">GetWindowThreadProcessId</see>
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="lpdwProcessId">Pointer to a variable that receives the process identifier.</param>
            <returns>The return value is the identifier of the thread that created the window.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindowthreadprocessid.asp">GetWindowThreadProcessId</see>
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="lpdwProcessId">Pointer to a variable that receives the process identifier.</param>
            <returns>The return value is the identifier of the thread that created the window.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetParent(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getparent.asp">GetParent</see>
            </summary>
            <param name="hWnd">Handle to the window whose parent window handle is to be retrieved.</param>
            <returns>If the window is a child window, the return value is a handle to the parent window. If the window is a top-level window, the return value is a handle to the owner window. If the window is a top-level unowned window or if the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetDesktopWindow">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getdesktopwindow.asp">GetDesktopWindow</see>
            </summary>
            <returns>The return value is a handle to the desktop window.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowThreadProcessId(System.IntPtr)">
            <summary>
            Retrieves the thread that created the window
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <returns>The return value is the identifier of the thread that created the window.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LoadIcon(System.Int32,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconfunctions/loadicon.asp">LoadIcon</see>
            </summary>
            <param name="hInstance">Handle to an instance of the module whose executable file contains the icon to be loaded.</param>
            <param name="lpIconID">Pointer to a null-terminated string that contains the name of the icon resource to be loaded.</param>
            <returns>
            If the function succeeds, the return value is a handle to the newly loaded icon.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SnapStream.Util.SWP)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/setwindowpos.asp">SetWindowPos</see>
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="hWndInsertAfter">Handle to the window to precede the positioned window in the Z order.</param>
            <param name="X">Specifies the new position of the left side of the window, in client coordinates.</param>
            <param name="Y">Specifies the new position of the top of the window, in client coordinates.</param>
            <param name="cx">Specifies the new width of the window, in pixels.</param>
            <param name="cy">Specifies the new height of the window, in pixels.</param>
            <param name="uFlags">Specifies the window sizing and positioning flags.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.OpenProcess(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wcecoreos5/html/wce50lrfopenprocess.asp">OpenProcess</see>
            </summary>
            <param name="dwDesiredAccess">Not supported; set to zero.</param>
            <param name="bInheritHandle">Not supported; set to FALSE.</param>
            <param name="dwProcessId">Specifies the process identifier of the process to open.</param>
            <returns>
            An open handle to the specified process indicates success.
            NULL indicates failure.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowModuleFileName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindowmodulefilename.asp">GetWindowModuleFileName</see>
            </summary>
            <param name="hWnd">Handle to the window whose module file name will be retrieved.</param>
            <param name="sbString">Pointer to a buffer that receives the path and file name.</param>
            <param name="iMaxCount">Specifies the maximum number of TCHARs that can be copied into the lpszFileName buffer.</param>
            <returns>The return value is the total number of TCHARs copied into the buffer.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetProcessVersion(System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wcecoreos5/html/wce50lrfGetProcessVersion.asp">GetProcessVersion</see>
            </summary>
            <param name="dwProcessId">Process identifier of the process of interest.</param>
            <returns>
            If the function succeeds, the return value is the version of the system on which the process expects to run. The high word of the return value contains the major version number. The low word of the return value contains the minor version number.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/getclassname.asp">GetClassName</see>
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="sbString">Pointer to the buffer that is to receive the class name string.</param>
            <param name="iMaxCount">Specifies the length, in TCHAR, of the buffer pointed to by the lpClassName parameter.</param>
            <returns>
            If the function succeeds, the return value is the number of TCHAR copied to the specified buffer.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetModuleFileName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wcecoreos5/html/wce50lrfGetModuleFileName.asp">GetModuleFileName</see>
            </summary>
            <param name="hWnd">Handle to the module whose executable file name is being requested.</param>
            <param name="sbString">Pointer to a buffer that is filled in with the path and file name of the module.</param>
            <param name="iMaxCount">Specifies the length, in characters, of the lpFilename buffer.</param>
            <returns>
            The length, in characters, of the string copied to the buffer indicates success.
            Zero indicates failure.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetLastError">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/debug/base/getlasterror.asp">GetLastError</see>
            </summary>
            <returns>The return value is the calling thread's last-error code value.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetForegroundWindow(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/setforegroundwindow.asp">SetForegroundWindow</see>
            </summary>
            <param name="hwnd">Handle to the window that should be activated and brought to the foreground.</param>
            <returns>
            If the window was brought to the foreground, the return value is nonzero.
            If the window was not brought to the foreground, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.AttachThreadInput(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/attachthreadinput.asp">AttachThreadInput</see>
            </summary>
            <param name="idAttach">Identifier of the thread to be attached to another thread.</param>
            <param name="idAttachTo">Identifier of the thread to which idAttach will be attached.</param>
            <param name="bAttach">If this parameter is TRUE, the two threads are attached. If the parameter is FALSE, the threads are detached.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/getwindowtext.asp">GetWindowText</see>
            </summary>
            <param name="hWnd">Handle to the window or control containing the text.</param>
            <param name="sbString">Pointer to the buffer that will receive the text.</param>
            <param name="iMaxCount">Specifies the maximum number of characters to copy to the buffer, including the NULL character.</param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the copied string, not including the terminating NULL character.
            If the window has no title bar or text, if the title bar is empty, or if the window or control handle is invalid, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.RegisterShellHookWindow(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/registershellhookwindow.asp">RegisterShellHookWindow</see>
            </summary>
            <param name="hWnd">Handle to the window to register for Shell hook messages.</param>
            <returns>TRUE if the function succeeds; FALSE if the function fails.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.DeregisterShellHookWindow(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/deregistershellhookwindow.asp">DeregisterShellHookWindow</see>
            </summary>
            <param name="hWnd">Handle to the window to unregister from receiving Shell hook messages.</param>
            <returns>TRUE if the function succeeds; FALSE if the function fails.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowsHookEx(System.Int32,SnapStream.Util.Helpers.Delegates.MouseHookHandler,System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp">SetWindowsHookEx</see>
            for our mouse hook handler
            </summary>
            <param name="idHook">Specifies the type of hook procedure to be installed.</param>
            <param name="lpfn">Pointer to the hook procedure.</param>
            <param name="hmod">Handle to the DLL containing the hook procedure pointed to by the lpfn parameter.</param>
            <param name="dwThreadId">Specifies the identifier of the thread with which the hook procedure is to be associated.</param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowsHookEx(System.Int32,SnapStream.Util.Helpers.Delegates.KeyboardHookHandler,System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp">SetWindowsHookEx</see>
            for our keyboard hook handler
            </summary>
            <param name="idHook">Specifies the type of hook procedure to be installed.</param>
            <param name="lpfn">Pointer to the hook procedure.</param>
            <param name="hmod">Handle to the DLL containing the hook procedure pointed to by the lpfn parameter.</param>
            <param name="dwThreadId">Specifies the identifier of the thread with which the hook procedure is to be associated.</param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowsHookEx(System.Int32,SnapStream.Util.Helpers.Delegates.CBTHookHandler,System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp">SetWindowsHookEx</see>
            for our cbt hook handler
            </summary>
            <param name="idHook">Specifies the type of hook procedure to be installed.</param>
            <param name="lpfn">Pointer to the hook procedure.</param>
            <param name="hmod">Handle to the DLL containing the hook procedure pointed to by the lpfn parameter.</param>
            <param name="dwThreadId">Specifies the identifier of the thread with which the hook procedure is to be associated.</param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetWindowsHookEx(System.Int32,SnapStream.Util.Helpers.Delegates.ShellHookHandler,System.IntPtr,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp">SetWindowsHookEx</see>
            for our shell hook handler
            </summary>
            <param name="idHook">Specifies the type of hook procedure to be installed.</param>
            <param name="lpfn">Pointer to the hook procedure.</param>
            <param name="hmod">Handle to the DLL containing the hook procedure pointed to by the lpfn parameter.</param>
            <param name="dwThreadId">Specifies the identifier of the thread with which the hook procedure is to be associated.</param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/unhookwindowshookex.asp">UnhookWindowsHookEx</see>
            </summary>
            <param name="hHook">Handle to the hook to be removed.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ValidateRect(System.IntPtr,SnapStream.Util.RECT@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_9epg.asp">ValidateRect</see>
            </summary>
            <param name="hWnd">Handle to the window whose update region is to be modified.</param>
            <param name="lpRect">Pointer to a RECT structure that contains the client coordinates of the rectangle to be removed from the update region.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ValidateRect(System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_9epg.asp">ValidateRect</see>
            allowing for null RECT (whole client area is removed)
            </summary>
            <param name="hWnd">Handle to the window whose update region is to be modified.</param>
            <param name="ipNull">Must be null</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,SnapStream.Util.MOUSEHOOKSTRUCT@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/callnexthookex.asp">CallNextHookEx</see>
            for mouse handlers
            </summary>
            <param name="hhk">Ignored.</param>
            <param name="nCode">Specifies the hook code passed to the current hook procedure.</param>
            <param name="wParam">Specifies the wParam value passed to the current hook procedure.</param>
            <param name="lParam">Specifies the lParam value passed to the current hook procedure.</param>
            <returns>This value is returned by the next hook procedure in the chain.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.CallNextHookEx(System.IntPtr,System.Int32,System.Windows.Forms.Keys,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/callnexthookex.asp">CallNextHookEx</see>
            for keyboard handlers
            </summary>
            <param name="hhk">Ignored.</param>
            <param name="nCode">Specifies the hook code passed to the current hook procedure.</param>
            <param name="wParam">Specifies the wParam value passed to the current hook procedure.</param>
            <param name="lParam">Specifies the lParam value passed to the current hook procedure.</param>
            <returns>This value is returned by the next hook procedure in the chain.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/callnexthookex.asp">CallNextHookEx</see>
            </summary>
            <param name="hhk">Ignored.</param>
            <param name="nCode">Specifies the hook code passed to the current hook procedure.</param>
            <param name="wParam">Specifies the wParam value passed to the current hook procedure.</param>
            <param name="lParam">Specifies the lParam value passed to the current hook procedure.</param>
            <returns>This value is returned by the next hook procedure in the chain.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.EnumChildWindows(System.IntPtr,SnapStream.Util.Helpers.Win32.EnumWindowsCB,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/enumchildwindows.asp">EnumChildWindows</see>
            </summary>
            <param name="hWndParent">Handle to the parent window whose child windows are to be enumerated.</param>
            <param name="cb">Pointer to an application-defined callback function.</param>
            <param name="lparam">Specifies an application-defined value to be passed to the callback function.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/movewindow.asp">MoveWindow</see>
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="X">Specifies the new position of the left side of the window.</param>
            <param name="Y">Specifies the new position of the top of the window.</param>
            <param name="nWidth">Specifies the new width of the window.</param>
            <param name="nHeight">Specifies the new height of the window.</param>
            <param name="bRepaint">Specifies whether the window is to be repainted.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsChild(System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/ischild.asp">IsChild</see>
            </summary>
            <param name="hwndParent">Handle to the parent window.</param>
            <param name="hwnd">Handle to the window to be tested.</param>
            <returns>
            If the window is a child or descendant window of the specified parent window, the return value is nonzero.
            If the window is not a child or descendant window of the specified parent window, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GrabFocus(System.IntPtr)">
            <summary>
            Sets the focus to the specified window and brings it to the front
            </summary>
            <param name="myWindowHandle">
            hWnd translated into an IntPtr
            </param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowInfo(System.IntPtr,System.String@,System.String@)">
            <summary>
            Retrieves information about a window
            </summary>
            <param name="ipHwnd">The handle to the window to query</param>
            <param name="sText">The window text of the specified window</param>
            <param name="sClass">The class name of the specified window</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetWindowInfo(System.IntPtr,System.String@,System.String@,System.String@)">
            <summary>
            Retrieves information about a window
            </summary>
            <param name="ipHwnd">The handle to the window to query</param>
            <param name="sText">The window text of the specified window</param>
            <param name="sClass">The class name of the specified window</param>
            <param name="sFile">The filename of the main module of the specified window's process</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.CollectGarbage">
            <summary>
            Starts a thread to run memory garbage collection in the CLR
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.CollectGarbageThread">
            <summary>
            Runs memory garbage collection in the CLR
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetShutdownPrivilege">
            <summary>
            Allows this process to shutdown
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsPwrHibernateAllowed">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/ispwrhibernateallowed.asp">IsPwrHibernateAllowed</see>
            </summary>
            <returns>If the computer supports hibernation (power state S4) and the file Hiberfil.sys is present on the system, the function returns TRUE. Otherwise, the function returns FALSE.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsPwrShutdownAllowed">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/ispwrshutdownallowed.asp">IsPwrShutdownAllowed</see>
            </summary>
            <returns>If the computer supports soft off (power state S5), the function returns TRUE. Otherwise, the function returns FALSE.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.IsPwrSuspendAllowed">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/ispwrsuspendallowed.asp">IsPwrSuspendAllowed</see>
            </summary>
            <returns>If the computer supports the sleep states (S1, S2, and S3), the function returns TRUE. Otherwise, the function returns FALSE.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetSystemPowerState(System.Boolean,System.Boolean)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/setsystempowerstate.asp">SetSystemPowerState</see>
            </summary>
            <param name="fSuspend">If this parameter is TRUE, the system is suspended. If the parameter is FALSE, the system hibernates.</param>
            <param name="fForce">If this parameter is TRUE, the function broadcasts a PBT_APMSUSPEND event to each application and driver, then immediately suspends operation. If the parameter is FALSE, the function broadcasts a PBT_APMQUERYSUSPEND event to each application to request permission to suspend operation.</param>
            <returns>
            If power has been suspended and subsequently restored, the return value is nonzero.
            If the system was not suspended, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SystemParametersInfo(System.UInt32,System.UInt32,System.String,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/systemparametersinfo.asp">SystemParametersInfo</see>
            </summary>
            <param name="uiAction">System-wide parameter to be retrieved or set.</param>
            <param name="uiParam">Depends on the system parameter being queried or set.</param>
            <param name="pvParam">Depends on the system parameter being queried or set.</param>
            <param name="fWinIni">If a system parameter is being set, specifies whether the user profile is to be updated, and if so, whether the WM_SETTINGCHANGE message is to be broadcast to all top-level windows to notify them of the change.</param>
            <returns>
            If the function succeeds, the return value is a nonzero value.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SystemParametersInfo(System.UInt32,System.UInt32,System.UInt32@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/systemparametersinfo.asp">SystemParametersInfo</see>
            </summary>
            <param name="uiAction">System-wide parameter to be retrieved or set.</param>
            <param name="uiParam">Depends on the system parameter being queried or set.</param>
            <param name="pvParam">Depends on the system parameter being queried or set.</param>
            <param name="fWinIni">If a system parameter is being set, specifies whether the user profile is to be updated, and if so, whether the WM_SETTINGCHANGE message is to be broadcast to all top-level windows to notify them of the change.</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.SetThreadExecutionState(System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/power/base/setthreadexecutionstate.asp">SetThreadExecutionState</see>
            </summary>
            <param name="esFlags">Thread's execution requirements.</param>
            <returns>
            If the function succeeds, the return value is the previous thread execution state.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetCurrentProcess">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/getcurrentprocess.asp">GetCurrentProcess</see>
            </summary>
            <returns>The return value is a pseudo handle to the current process.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.OpenProcessToken(System.IntPtr,System.UInt32,System.IntPtr@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/openprocesstoken.asp">OpenProcessToken</see>
            </summary>
            <param name="h">Handle to the process whose access token is opened.</param>
            <param name="acc">Specifies an access mask that specifies the requested types of access to the access token.</param>
            <param name="phtok">Pointer to a handle that identifies the newly opened access token when the function returns.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LookupPrivilegeValue(System.String,System.String,System.Int64@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/lookupprivilegevalue.asp">LookupPrivilegeValue</see>
            </summary>
            <param name="host">A pointer to a null-terminated string that specifies the name of the system on which the privilege name is retrieved.</param>
            <param name="name">A pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file.</param>
            <param name="pluid">A pointer to a variable that receives the LUID by which the privilege is known on the system specified by the lpSystemName parameter.</param>
            <returns>
            If the function succeeds, the function returns nonzero.
            If the function fails, it returns zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.AdjustTokenPrivileges(System.IntPtr,System.Boolean,SnapStream.Util.TokPriv1Luid@,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/adjusttokenprivileges.asp">AdjustTokenPrivileges</see>
            </summary>
            <param name="htok">Handle to the access token that contains the privileges to be modified.</param>
            <param name="disall">Specifies whether the function disables all of the token's privileges.</param>
            <param name="newst">Pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes.</param>
            <param name="len">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter.</param>
            <param name="prev">Pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies.</param>
            <param name="relen">Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.ExitWindowsEx(System.UInt32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/exitwindowsex.asp">ExitWindowsEx</see>
            </summary>
            <param name="dwFlags">Shutdown type.</param>
            <param name="dwReason">Reason for initiating the shutdown.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetEnvironmentVariable(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/getenvironmentvariable.asp">GetEnvironmentVariable</see>
            </summary>
            <param name="lpName">Pointer to a null-terminated string that specifies the name of the environment variable.</param>
            <param name="lpBuffer">Pointer to a buffer that receives the contents of the specified environment variable.</param>
            <param name="nSize">Size of the buffer pointed to by the lpBuffer parameter, in characters.</param>
            <returns>
            If the function succeeds, the return value is the number of characters stored in the buffer pointed to by lpBuffer.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetLongPathName(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/base/getlongpathname.asp">GetLongPathName</see>
            </summary>
            <param name="shortPath">Pointer to a null-terminated path to be converted.</param>
            <param name="longPath">Pointer to the buffer to receive the long path.</param>
            <param name="size">Size of the buffer, in TCHARs.</param>
            <returns>
            If the function succeeds, the return value is the length of the string copied to the lpszLongPath parameter, in TCHARs.
            If the function fails for any other reason, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/getprivateprofilestring.asp">GetPrivateProfileString</see>
            </summary>
            <param name="lpAppName">Pointer to a null-terminated string that specifies the name of the section containing the key name.</param>
            <param name="lpKeyName">Pointer to the null-terminated string specifying the name of the key whose associated string is to be retrieved.</param>
            <param name="lpDefault">Pointer to a null-terminated default string.</param>
            <param name="lpReturnedString">Pointer to the buffer that receives the retrieved string.</param>
            <param name="nSize">Size of the buffer pointed to by the lpReturnedString parameter, in TCHARs.</param>
            <param name="lpFileName">Pointer to a null-terminated string that specifies the name of the initialization file.</param>
            <returns>
            The return value is the number of characters copied to the buffer, not including the terminating null character.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.GetDiskFreeSpaceEx(System.String,System.UInt64@,System.UInt64@,System.UInt64@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/base/getdiskfreespaceex.asp">GetDiskFreeSpaceEx</see>
            </summary>
            <param name="pszDrive">Pointer to a null-terminated string that specifies a directory on the disk of interest.</param>
            <param name="i64FreeBytesToCaller">Pointer to a variable that receives the total number of free bytes on the disk that are available to the user associated with the calling thread.</param>
            <param name="i64TotalBytes">Pointer to a variable that receives the total number of bytes on the disk that are available to the user associated with the calling thread.</param>
            <param name="i64FreeBytes">Pointer to a variable that receives the total number of free bytes on the disk.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero (0).
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.Launch(System.IO.FileInfo)">
            <summary>
            Launches the given file
            </summary>
            <param name="fiIn">The file to launch</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchHelper(System.String,System.String)">
            <summary>
            Launches the program file with the given arguments
            </summary>
            <param name="sProgram">The program file to launch</param>
            <param name="sArguments">The arguments to pass</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchHelper(System.String,System.String,System.Boolean)">
            <summary>
            Launches the program file with the given arguments and possibly on another thread
            </summary>
            <param name="sProgram">The program file to launch</param>
            <param name="sArguments">The arguments to pass</param>
            <param name="bBreak">
            True - Waits for the program to load before returning
            False - Spawns another process to load the program
            </param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchURLFile(System.IO.FileInfo)">
            <summary>
            Launches a url in the browser
            </summary>
            <param name="fiIn">The url to launch</param>
        </member>
        <member name="T:SnapStream.Util.Helpers.Win32.EnumWindowsCB">
            <summary>
            A callback template to be used with the EnumWindows Win32 call
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Win32.LaunchWithState">
            <summary>
            Object that handles launching another application
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchWithState.#ctor(System.String,System.String)">
            <summary>
            Creates a new launch with state object
            </summary>
            <param name="sProgram">The program file to launch</param>
            <param name="sArguments">The arguments to pass</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchWithState.Start">
            <summary>
            Launches the application
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchWithState.Start(System.Boolean)">
            <summary>
            Launches the application possibly on another thread
            </summary>
            <param name="bBreak">
            True - Waits for the program to load before returning
            False - Spawns another process to load the program
            </param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Win32.LaunchWithState.Launch">
            <summary>
            Launches the application
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.FileAndFolder">
            <summary>
            This class is used for manipulating files and folders through the "Windows Shell and Controls" API
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetThumbnail(System.String)">
            <summary>
            Gets the thumbnail for the corresponding file
            </summary>
            <param name="fullpath">
            Full path of the file or directory for which to retrieve the thumbnail
            </param>
            <returns>
            Bitmap that represents the thumbnail image.
            Will return null if a thumbnail was not found.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetIcon(System.IntPtr)">
            <summary>
            Retrieves the icon for a window
            </summary>
            <param name="ipHwnd">The handle of the window</param>
            <returns>The icon for the window</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetIcon(System.IO.FileInfo)">
            <summary>
            Retrieves the icon for a file
            </summary>
            <param name="fiIn">The file</param>
            <returns>The icon</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetIcon(System.String)">
            <summary>
            Retrieves the icon for a file
            </summary>
            <param name="sPath">The file</param>
            <returns>The icon</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.SHGetPathFromIDList(System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/shgetpathfromidlist.asp">SHGetPathFromIDList</see>
            </summary>
            <param name="pidl">Address of an item identifier list that specifies a file or directory location relative to the root of the namespace (the desktop).</param>
            <param name="Path">Address of a buffer to receive the file system path. This buffer must be at least MAX_PATH characters in size.</param>
            <returns>Returns TRUE if successful, or FALSE otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.SHGetDesktopFolder(SnapStream.Util.IShellFolder@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/shgetdesktopfolder.asp">SHGetDesktopFolder</see>
            </summary>
            <param name="pDesktop">Address that receives an IShellFolder interface pointer for the desktop folder.</param>
            <returns>Returns NOERROR if successful, or an OLE-defined error result otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.ExtractIconEx(System.String,System.Int32,System.IntPtr@,System.IntPtr@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconfunctions/extracticonex.asp">ExtractIconEx</see>
            </summary>
            <param name="lpszFile">Pointer to a null-terminated string specifying the name of an executable file, DLL, or icon file from which icons will be extracted.</param>
            <param name="nIconIndex">Specifies the zero-based index of the first icon to extract.</param>
            <param name="phiconLarge">Pointer to an array of icon handles that receives handles to the large icons extracted from the file.</param>
            <param name="phiconSmall">Pointer to an array of icon handles that receives handles to the small icons extracted from the file.</param>
            <param name="nIcons">Specifies the number of icons to extract from the file.</param>
            <returns>If the nIconIndex parameter is -1, the phiconLarge parameter is NULL, and the phiconSmall parameter is NULL, then the return value is the number of icons contained in the specified file. Otherwise, the return value is the number of icons successfully extracted from the file.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetIconInfo(System.IntPtr,SnapStream.Util.ICONINFO@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconfunctions/geticoninfo.asp">GetIconInfo</see>
            </summary>
            <param name="hIcon">Handle to the icon or cursor.</param>
            <param name="ii">Pointer to an ICONINFO structure. The function fills in the structure's members.</param>
            <returns>
            If the function succeeds, the return value is nonzero and the function fills in the members of the specified ICONINFO structure.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.SHGetFolderPath(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Text.StringBuilder)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/shgetfolderpath.asp">SHGetFolderPath</see>
            </summary>
            <param name="hwnd">Handle to an owner window.</param>
            <param name="nFolder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <param name="Token">An access token that can be used to represent a particular user.</param>
            <param name="flags">Flags to specify which path is to be returned.</param>
            <param name="Path">Pointer to a null-terminated string of length MAX_PATH which will receive the path.</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.SHGetFolderPath(System.IntPtr,SnapStream.Util.CSIDL,System.IntPtr,System.Int32,System.Text.StringBuilder)">
            <summary>
            Calls SHGetFolderPath() translating our CSIDL enum
            </summary>
            <param name="hwnd">Handle to an owner window.</param>
            <param name="eFolder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <param name="Token">An access token that can be used to represent a particular user.</param>
            <param name="flags">Flags to specify which path is to be returned.</param>
            <param name="Path">Pointer to a null-terminated string of length MAX_PATH which will receive the path.</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetFolderPath(System.Int32)">
            <summary>
            Retrieves the folder path for the given CSIDL value
            </summary>
            <param name="nFolder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <returns>The path</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetFolderPath(System.Environment.SpecialFolder)">
            <summary>
            Retrieves the folder path for the given special folder
            </summary>
            <param name="folder">A CSIDL value for the special folder</param>
            <returns>The path</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetFolderPath(SnapStream.Util.CSIDL)">
            <summary>
            Retrieves the folder path for the given CSIDL value
            </summary>
            <param name="folder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <returns>The path</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.DeleteObject(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/devcons_1vsk.asp">DeleteObject</see>
            </summary>
            <param name="hObject">Handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the specified handle is not valid or is currently selected into a DC, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.SHGetFileInfo(System.String,System.UInt32,SnapStream.Util.SHFILEINFO@,System.UInt32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/functions/shgetfileinfo.asp">SHGetFileInfo</see>
            </summary>
            <param name="sFile">Pointer to a null-terminated string of maximum length MAX_PATH that contains the path and file name.</param>
            <param name="dwAttribs">Combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h).</param>
            <param name="psfi">Address of a SHFILEINFO structure to receive the file information.</param>
            <param name="cbFileInfo">Size, in bytes, of the SHFILEINFO structure pointed to by the psfi parameter.</param>
            <param name="uFlags">Flags that specify the file information to retrieve.</param>
            <returns>Returns a value whose meaning depends on the uFlags parameter.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.DestroyIcon(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconfunctions/destroyicon.asp">DestroyIcon</see>
            </summary>
            <param name="hIcon">Handle to the icon to be destroyed.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.NameNoExtension(System.IO.FileInfo)">
            <summary>
            Retrieves the filename without extension
            </summary>
            <param name="fiIn">The file</param>
            <returns>The filename without extension</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetFileDescription(System.IO.FileInfo)">
            <summary>
            Retrieves the file description
            </summary>
            <param name="fiIn">The file</param>
            <returns>The description (the product name)</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.GetTypeName(System.IO.FileInfo)">
            <summary>
            Retrieves the type name of the specified file
            </summary>
            <param name="fiIn">The file</param>
            <returns>The type name</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.FileSizeToString(System.Int64,System.Int32)">
            <summary>
            Converts the file size into a string
            </summary>
            <param name="lSize">The size, in bytes, of the file</param>
            <param name="iBase">The base multiplier to display</param>
            <returns>The file size as a string</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.FileSizeToString(System.Int64,System.Int32,System.Boolean)">
            <summary>
            Converts the file size into a string
            </summary>
            <param name="lSize">The size, in bytes, of the file</param>
            <param name="iBase">The base multiplier to display</param>
            <param name="bBytes">
            True: bytes are the units
            False: bits are the units
            </param>
            <returns>The file size as a string</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.FileSizeToString(System.Int64)">
            <summary>
            Converts the file size into a string using KB
            </summary>
            <param name="lSize">The file size, in bytes</param>
            <returns>The file size as a string</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.CreateUniqueFileName(System.String,System.String)">
            <summary>
            Creates a unique new file name with the given name + an id
            </summary>
            <param name="path">The directory to create the file in</param>
            <param name="fileNameFormat">The file name base</param>
            <returns>The new file name</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.EnsureReadWrite(System.String)">
            <summary>
            Ensures that the given file is RW
            </summary>
            <param name="file">The file</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.FixAlphaBitmap(System.Drawing.Bitmap)">
            <summary>
            Attempts to correct the alpha values for a bitmap
            </summary>
            <param name="bmSource">
            Bitmap to fix
            </param>
            <returns>
            Fixed bitmap
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.FileAndFolder.IsBlank(System.Drawing.Bitmap)">
            <summary>
            Tests a bitmap to see if it is blank
            </summary>
            <param name="bm">
            Bitmap to check
            </param>
            <returns>
            True for a blank bitmap
            False otherwise
            </returns>
        </member>
        <member name="T:SnapStream.Util.Helpers.Message">
            <summary>
            Utility methods for dealing with windows messages
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Message.SendMessageTimeout(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/sendmessagetimeout.asp">SendMessageTimeout</see>
            </summary>
            <param name="hWnd">Handle to the window whose window procedure will receive the message.</param>
            <param name="Msg">Specifies the message to be sent.</param>
            <param name="wParam">Specifies additional message-specific information.</param>
            <param name="lParam">Specifies additional message-specific information.</param>
            <param name="fuFlags">Specifies how to send the message.</param>
            <param name="uTimeout">Specifies the duration, in milliseconds, of the time-out period.</param>
            <param name="lpdwResult">Receives the result of the message processing.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails or times out, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Message.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/postmessage.asp">PostMessage</see>
            </summary>
            <param name="hWnd">Handle to the window whose window procedure is to receive the message.</param>
            <param name="Msg">Specifies the message to be posted.</param>
            <param name="wParam">Specifies additional message-specific information.</param>
            <param name="lParam">Specifies additional message-specific information.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails or times out, the return value is zero.
            </returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Message.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/messagesandmessagequeues/messagesandmessagequeuesreference/messagesandmessagequeuesfunctions/sendmessage.asp">SendMessage</see>
            </summary>
            <param name="hWnd">Handle to the window whose window procedure will receive the message.</param>
            <param name="msg">Specifies the message to be sent.</param>
            <param name="wParam">Specifies additional message-specific information.</param>
            <param name="lParam">Specifies additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="T:SnapStream.Util.Helpers.Sound">
            <summary>
            Utility methods for handling sounds
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.SetMute(System.Boolean)">
            <summary>
            Sets the value of mute
            </summary>
            <param name="bMute">The new value of mute</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.GetMute">
            <summary>
            Retrieves the value of mute
            </summary>
            <returns>The value of mute</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.ChangeMute">
            <summary>
            Toggles the value of mute
            </summary>
            <returns>The new value of mute</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.ChangeVolume(System.Double)">
            <summary>
            Changes the volume level (0.0 to 1.0)
            </summary>
            <param name="dChange">The new volume level (0.0 to 1.0)</param>
            <returns>The new volume value</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.SetVolume(System.Int32)">
            <summary>
            Changes the volume level (0 to 100)
            </summary>
            <param name="iIn">The new volume level (0 to 100)</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.SetVolume(System.Double)">
            <summary>
            Changes the volume level (0.0 to 1.0)
            </summary>
            <param name="dIn">The new volume level (0.0 to 1.0)</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.GetVolume">
            <summary>
            Retrieves the volume level (0.0 to 1.0)
            </summary>
            <returns>The current volume level (0.0 to 1.0)</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.PlaySound(System.String,System.IntPtr,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_playsound.asp">PlaySound</see>
            </summary>
            <param name="pszSound">A string that specifies the sound to play.</param>
            <param name="hmod">Handle to the executable file that contains the resource to be loaded.</param>
            <param name="fdwSound">Flags for playing the sound.</param>
            <returns>Returns TRUE if successful or FALSE otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.waveOutSetVolume(System.Int32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutsetvolume.asp">waveOutSetVolume</see>
            </summary>
            <param name="uDeviceID">Handle to an open waveform-audio output device.</param>
            <param name="dwVolume">New volume setting.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.waveOutGetVolume(System.Int32,System.UInt32@)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutgetvolume.asp">waveOutGetVolume</see>
            </summary>
            <param name="uDeviceID">Handle to an open waveform-audio output device.</param>
            <param name="lpdwVolume">Pointer to a variable to be filled with the current volume setting.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.waveOutGetNumDevs">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutgetnumdevs.asp">waveOutGetNumDevs</see>
            </summary>
            <returns>Returns the number of devices. A return value of zero means that no devices are present or that an error occurred.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.waveOutGetDevCaps(System.Int32,SnapStream.Util.WAVEOUTCAPS@,System.Int32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutgetdevcaps.asp">waveOutGetDevCaps</see>
            </summary>
            <param name="uDeviceID">Identifier of the waveform-audio output device.</param>
            <param name="lpCaps">Pointer to a WAVEOUTCAPS structure to be filled with information about the capabilities of the device.</param>
            <param name="uSize">Size, in bytes, of the WAVEOUTCAPS structure.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerGetNumDevs">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetnumdevs.asp">mixerGetNumDevs</see>
            </summary>
            <returns>Returns the number of mixer devices or zero if no mixer devices are available.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerGetLineInfo(System.IntPtr,SnapStream.Util.MIXERLINE@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetlineinfo.asp">mixerGetLineInfo</see>
            </summary>
            <param name="hMxObj">Handle to the mixer device object that controls the specific audio line.</param>
            <param name="mxLine">Pointer to a MIXERLINE structure.</param>
            <param name="fdwInfo">Flags for retrieving information about an audio line.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerOpen(System.IntPtr@,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixeropen.asp">mixerOpen</see>
            </summary>
            <param name="phmx">Pointer to a variable that will receive a handle identifying the opened mixer device.</param>
            <param name="uMxId">Identifier of the mixer device to open.</param>
            <param name="dwCallback">Handle to a window called when the state of an audio line and/or control associated with the device being opened is changed.</param>
            <param name="dwInstance">User instance data passed to the callback function.</param>
            <param name="fdwOpen">Flags for opening the device.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerClose(System.IntPtr)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixerclose.asp">mixerClose</see>
            </summary>
            <param name="phmx">Handle to the mixer device.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerGetLineControls(System.IntPtr,SnapStream.Util.MIXERLINECONTROLS@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixergetlinecontrols.asp">mixerGetLineControls</see>
            </summary>
            <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
            <param name="pmxlc">Pointer to a MIXERLINECONTROLS structure.</param>
            <param name="fdwControls">Flags for retrieving information about one or more controls associated with an audio line.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.Helpers.Sound.mixerSetControlDetails(System.IntPtr,SnapStream.Util.MIXERCONTROLDETAILS@,System.UInt32)">
            <summary>
            Platform Invokes <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixersetcontroldetails.asp">mixerSetControlDetails</see>
            </summary>
            <param name="hmxobj">Handle to the mixer device object for which properties are being set.</param>
            <param name="pmxcd">Pointer to a MIXERCONTROLDETAILS structure.</param>
            <param name="fdwDetails">Flags for setting properties for a control.</param>
            <returns>Returns MMSYSERR_NOERROR if successful or an error otherwise.</returns>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates">
            <summary>
            Contains useful delegates and delegate-related methods
            </summary>
        </member>
        <member name="M:SnapStream.Util.Helpers.Delegates.ProcessInvocationList(System.Delegate[])">
            <summary>
            Processes an invocation list of EmptyHandlers without allowing exceptions to stop the process
            </summary>
            <param name="dIns">The list of delegates to call</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Delegates.ProcessInvocationList(System.Delegate[],System.Object,System.EventArgs)">
            <summary>
            Processes an invocation list of EventHandlers without allowing exceptions to stop the process
            </summary>
            <param name="dIns">The list of delegates to call</param>
            <param name="oIn">The Sender</param>
            <param name="eaIn">The arguments</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Delegates.ProcessInvocationList(System.Delegate[],System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes an invocation list of MouseEventHandlers without allowing exceptions to stop the process
            </summary>
            <param name="dIns">The list of delegates to call</param>
            <param name="oIn">The Sender</param>
            <param name="meaIn">The arguments</param>
        </member>
        <member name="M:SnapStream.Util.Helpers.Delegates.ProcessInvocationList(System.Delegate[],System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes an invocation list of KeyEventHandlers without allowing exceptions to stop the process
            </summary>
            <param name="dIns">The list of delegates to call</param>
            <param name="oIn">The Sender</param>
            <param name="keaIn">The arguments</param>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates.EmptyHandler">
            <summary>
            Provides a template for a completely empty handler
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates.KeyboardHookHandler">
            <summary>
            Provides a template for a keyboard hook callback
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates.CBTHookHandler">
            <summary>
            Provides a template for a computer-based training hook callback
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates.ShellHookHandler">
            <summary>
            Provides a template for a generic hook callback
            </summary>
        </member>
        <member name="T:SnapStream.Util.Helpers.Delegates.MouseHookHandler">
            <summary>
            Provides a template for a mouse hook callback
            </summary>
        </member>
        <member name="T:SnapStream.Util.IEIFLAG">
            <summary>
            Defines flags used when calling <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/iextractimage/GetLocation.asp">IExtractImage::GetLocation</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.ASYNC">
            <summary>
            IEIFLAG_ASYNC: ask the extractor if it supports ASYNC extract (free threaded)
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.CACHE">
            <summary>
            IEIFLAG_CACHE: returned from the extractor if it does NOT cache the thumbnail
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.ASPECT">
            <summary>
            IEIFLAG_ASPECT: passed to the extractor to beg it to render to the aspect ratio of the supplied rect
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.OFFLINE">
            <summary>
            IEIFLAG_OFFLINE: if the extractor shouldn't hit the net to get any content neede for the rendering
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.GLEAM">
            <summary>
            IEIFLAG_GLEAM: does the image have a gleam ? this will be returned if it does
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.SCREEN">
            <summary>
            IEIFLAG_SCREEN: render as if for the screen  (this is exlusive with IEIFLAG_ASPECT )
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.ORIGSIZE">
            <summary>
            IEIFLAG_ORIGSIZE: render to the approx size passed, but crop if neccessary
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.NOSTAMP">
            <summary>
            IEIFLAG_NOSTAMP: returned from the extractor if it does NOT want an icon stamp on the thumbnail
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.NOBORDER">
            <summary>
            IEIFLAG_NOBORDER: returned from the extractor if it does NOT want an a border around the thumbnail
            </summary>
        </member>
        <member name="F:SnapStream.Util.IEIFLAG.QUALITY">
            <summary>
            IEIFLAG_QUALITY: passed to the Extract method to indicate that a slower, higher quality image is desired, re-compute the thumbnail
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHCONTF">
            <summary>
            Defines values from <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/enums/shcontf.asp">SHCONTF</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.FOLDERS">
            <summary>
            Include items that are folders in the enumeration.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.NONFOLDERS">
            <summary>
            Include items that are not folders in the enumeration.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.INCLUDEHIDDEN">
            <summary>
            Include hidden items in the enumeration.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.INIT_ON_FIRST_NEXT">
            <summary>
            Use this flag when a user interface might be displayed prior to the first IEnumIDList::Next call.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.NETPRINTERSRCH">
            <summary>
            The caller is looking for printer objects.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.SHAREABLE">
            <summary>
            The caller is looking for remote shares.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHCONTF.STORAGE">
            <summary>
            Include items with accessible storage and their ancestors.
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHGDN">
            <summary>
            Defines values from <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/enums/shgno.asp">SHGNO</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGDN.NORMAL">
            <summary>
            SHGDN_NORMAL: default (display purpose)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGDN.INFOLDER">
            <summary>
            SHGDN_INFOLDER: displayed under a folder (relative)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGDN.FOREDITING">
            <summary>
            SHGDN_FOREDITING: for in-place editing
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGDN.FORADDRESSBAR">
            <summary>
            SHGDN_FORADDRESSBAR: UI friendly parsing name (remove ugly stuff)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGDN.FORPARSING">
            <summary>
            SHGDN_FORPARSING: parsing name for ParseDisplayName()
            </summary>
        </member>
        <member name="T:SnapStream.Util.SFGAO">
            <summary>
            Defines values of the SFGAO flags that can be returned from calls to <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ishellfolder/GetAttributesOf.asp">IShellFolder::GetAttributesOf</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANCOPY">
            <summary>
            The specified items can be copied (same value as the DROPEFFECT_COPY flag).
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANMOVE">
            <summary>
            The specified items can be moved (same value as the DROPEFFECT_MOVE flag).
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANLINK">
            <summary>
            Shortcuts can be created for the specified items.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.STORAGE">
            <summary>
            The item can be bound to an IStorage interface through IShellFolder::BindToObject.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANRENAME">
            <summary>
            The specified items can be renamed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANDELETE">
            <summary>
            The specified items can be deleted by selecting Delete from their context menus.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.HASPROPSHEET">
            <summary>
            The specified items have property sheets.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.DROPTARGET">
            <summary>
            The specified items are drop targets.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CAPABILITYMASK">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.ENCRYPTED">
            <summary>
            The item is encrypted and may require special presentation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.ISSLOW">
            <summary>
            Indicates that accessing the object (through IStream or other storage interfaces) is a slow operation.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.GHOSTED">
            <summary>
            The specified items should be displayed using a ghosted icon.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.LINK">
            <summary>
            The specified items are shortcuts.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.SHARE">
            <summary>
            The specified folder objects are shared.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.READONLY">
            <summary>
            The specified items are read-only.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.HIDDEN">
            <summary>
            The item is hidden and should not be displayed unless the Show hidden files and folders option is enabled in Folder Settings.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.DISPLAYATTRMASK">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.FILESYSANCESTOR">
            <summary>
            The specified folder objects are either file system folders or have at least one descendant (child, grandchild, or later) that is a file system folder.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.FOLDER">
            <summary>
            The specified items are folders.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.FILESYSTEM">
            <summary>
            The specified items are part of the file system (that is, they are files, directories, or root directories).
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.HASSUBFOLDER">
            <summary>
            The specified folder objects may have subfolders and are, therefore, expandable in the left pane of Windows Explorer.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CONTENTSMASK">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.VALIDATE">
            <summary>
            When specified as input, SFGAO_VALIDATE instructs the folder to validate that the items pointed to by the contents of apidl exist.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.REMOVABLE">
            <summary>
            The specified items are on removable media or are themselves removable devices.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.COMPRESSED">
            <summary>
            The specified items are compressed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.BROWSABLE">
            <summary>
            The specified items can be browsed in place.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.NONENUMERATED">
            <summary>
            The specified items are nonenumerated items.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.NEWCONTENT">
            <summary>
            The specified items contain new content.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.CANMONIKER">
            <summary>
            It is possible to create monikers for the specified items.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.HASSTORAGE">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.STREAM">
            <summary>
            Indicates that the item has a stream associated with it that can be accessed by a call to IShellFolder::BindToObject with IID_IStream in the riid parameter.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.STORAGEANCESTOR">
            <summary>
            Children of this item are accessible through IStream or IStorage.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SFGAO.STORAGECAPMASK">
            <summary>
            This flag is a mask for the storage capability attributes.
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHGNO">
            <summary>
            Defines values from <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/enums/shgno.asp">SHGNO</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGNO.SHGDN_NORMAL">
            <summary>
            default (display purpose)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGNO.SHGDN_INFOLDER">
            <summary>
            displayed under a folder (relative)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGNO.SHGDN_FOREDITING">
            <summary>
            for in-place editing
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGNO.SHGDN_FORADDRESSBAR">
            <summary>
            UI friendly parsing name (remove ugly stuff)
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHGNO.SHGDN_FORPARSING">
            <summary>
            parsing name for ParseDisplayName()
            </summary>
        </member>
        <member name="T:SnapStream.Util.STRRET">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/structures/strret.asp">STRRET</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.STRRET.uType">
            <summary>
            Value that specifies the desired format of the string.
            </summary>
        </member>
        <member name="F:SnapStream.Util.STRRET.cStr">
            <summary>
            Buffer to receive the display name.
            </summary>
        </member>
        <member name="T:SnapStream.Util.IShellFolder">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ishellfolder/ishellfolder.asp">IShellFolder interface</see> is used to manage folders. It is exposed by all Shell namespace folder objects.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.ParseDisplayName(System.IntPtr,System.IntPtr,System.String,System.UInt32@,System.IntPtr@,System.UInt32@)">
            <summary>
            Translates a file object's or folder's display name into an item identifier list.
            </summary>
            <param name="hwnd">Window handle.</param>
            <param name="pbc">Bind context that controls the parsing operation.</param>
            <param name="pszDisplayName">Null-terminated Unicode string with the display name.</param>
            <param name="pchEaten">Pointer to a ULONG value that receives the number of characters of the display name that was parsed.</param>
            <param name="ppidl">Pointer to an ITEMIDLIST pointer that receives the item identifier list for the object.</param>
            <param name="pdwAttributes">Value used to query for file attributes.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.EnumObjects(System.IntPtr,SnapStream.Util.SHCONTF,SnapStream.Util.IEnumIDList@)">
            <summary>
            Allows a client to determine the contents of a folder by creating an item identifier enumeration object and returning its IEnumIDList interface. The methods supported by that interface can then be used to enumerate the folder's contents.
            </summary>
            <param name="hwnd">If user input is required to perform the enumeration, this window handle should be used by the enumeration object as the parent window to take user input.</param>
            <param name="grfFlags">Flags indicating which items to include in the enumeration.</param>
            <param name="ppenumIDList">Address that receives a pointer to the IEnumIDList interface of the enumeration object created by this method.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.BindToObject(System.IntPtr,System.IntPtr,System.Guid@,System.Object@)">
            <summary>
            Retrieves an IShellFolder object for a subfolder.
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure (PIDL) that identifies the subfolder.</param>
            <param name="pbc">Address of an IBindCtx interface on a bind context object to be used during this operation.</param>
            <param name="riid">Identifier of the interface to return.</param>
            <param name="ppv">Address that receives the interface pointer.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.BindToStorage(System.IntPtr,System.IntPtr,System.Guid@,System.Object@)">
            <summary>
            Requests a pointer to an object's storage interface.
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure that identifies the subfolder relative to its parent folder.</param>
            <param name="pbc">Optional address of an IBindCtx interface on a bind context object to be used during this operation.</param>
            <param name="riid">Interface identifier (IID) of the requested storage interface.</param>
            <param name="ppv">Address that receives the interface pointer specified by riid.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.CompareIDs(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Determines the relative order of two file objects or folders, given their item identifier lists.
            </summary>
            <param name="lParam">Value that specifies how the comparison should be performed.</param>
            <param name="pidl1">Pointer to the first item's ITEMIDLIST structure.</param>
            <param name="pidl2">Pointer to the second item's ITEMIDLIST structure.</param>
            <returns></returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.CreateViewObject(System.IntPtr,System.Guid@,System.Object@)">
            <summary>
            Requests an object that can be used to obtain information from or interact with a folder object.
            </summary>
            <param name="hwndOwner">Handle to the owner window.</param>
            <param name="riid">Identifier of the requested interface.</param>
            <param name="ppv">Address of a pointer to the requested interface.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.GetAttributesOf(System.Int32,System.IntPtr[],SnapStream.Util.SFGAO[])">
            <summary>
            Retrieves the attributes of one or more file or folder objects contained in the object represented by IShellFolder.
            </summary>
            <param name="cidl">Number of items from which to retrieve attributes.</param>
            <param name="apidl">Address of an array of pointers to ITEMIDLIST structures, each of which uniquely identifies an item relative to the parent folder.</param>
            <param name="rgfInOut">Address of a single ULONG value that, on entry, contains the attributes that the caller is requesting.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.GetUIObjectOf(System.IntPtr,System.Int32,System.IntPtr[],System.Guid@,System.IntPtr,System.Object@)">
            <summary>
            Retrieves an OLE interface that can be used to carry out actions on the specified file objects or folders.
            </summary>
            <param name="hwndOwner">Handle to the owner window that the client should specify if it displays a dialog box or message box.</param>
            <param name="cidl">Number of file objects or subfolders specified in the apidl parameter.</param>
            <param name="apidl">Address of an array of pointers to ITEMIDLIST structures, each of which uniquely identifies a file object or subfolder relative to the parent folder.</param>
            <param name="riid">Identifier of the Component Object Model (COM) interface object to return.</param>
            <param name="rgfReserved">Reserved.</param>
            <param name="ppv">Pointer to the requested interface.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.GetDisplayNameOf(System.IntPtr,SnapStream.Util.SHGNO,SnapStream.Util.STRRET@)">
            <summary>
            Retrieves the display name for the specified file object or subfolder.
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure (PIDL) that uniquely identifies the file object or subfolder relative to the parent folder.</param>
            <param name="uFlags">Flags used to request the type of display name to return.</param>
            <param name="pName">Address of a STRRET structure in which to return the display name.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IShellFolder.SetNameOf(System.IntPtr,System.IntPtr,System.String,SnapStream.Util.SHGNO,System.IntPtr@)">
            <summary>
            Sets the display name of a file object or subfolder, changing the item identifier in the process.
            </summary>
            <param name="hwnd">Handle to the owner window of any dialog or message boxes that the client displays.</param>
            <param name="pidl">Pointer to an ITEMIDLIST structure that uniquely identifies the file object or subfolder relative to the parent folder.</param>
            <param name="pszName">Pointer to a null-terminated string that specifies the new display name.</param>
            <param name="uFlags">Flags indicating the type of name specified by the lpszName parameter.</param>
            <param name="ppidlOut">Address of a pointer to an ITEMIDLIST structure that receives the new ITEMIDLIST.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="T:SnapStream.Util.IEnumIDList">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ienumidlist/ienumidlist.asp">IEnumIDList interface</see> provides a standard set of methods that can be used to enumerate the pointers to item identifier lists (PIDLs) of the items in a Shell folder.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IEnumIDList.Next(System.Int32,System.IntPtr[],System.Int32@)">
            <summary>
            Retrieves the specified number of item identifiers in the enumeration sequence and advances the current position by the number of items retrieved.
            </summary>
            <param name="celt">Number of elements in the array pointed to by the rgelt parameter.</param>
            <param name="rgelt">Address of an array of ITEMIDLIST pointers that receives the item identifiers.</param>
            <param name="pceltFetched">Address of a value that receives a count of the item identifiers actually returned in rgelt.</param>
            <returns>Returns NOERROR if successful, S_FALSE if there are no more items in the enumeration sequence, or an OLE-defined error value otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IEnumIDList.Skip(System.Int32)">
            <summary>
            Skips over the specified number of elements in the enumeration sequence.
            </summary>
            <param name="celt">Number of item identifiers to skip.</param>
        </member>
        <member name="M:SnapStream.Util.IEnumIDList.Reset">
            <summary>
            Returns to the beginning of the enumeration sequence.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IEnumIDList.Clone(SnapStream.Util.IEnumIDList@)">
            <summary>
            Creates a new item enumeration object with the same contents and state as the current one.
            </summary>
            <param name="ppenum">Address of a pointer to the new enumeration object.</param>
        </member>
        <member name="T:SnapStream.Util.IMalloc">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/com/htm/cmi_m_5h5v.asp">IMalloc interface</see> allocates, frees, and manages memory.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IMalloc.Alloc(System.Int32)">
            <summary>
            Allocates a block of memory.
            </summary>
            <param name="cb">Size, in bytes, of the memory block to be allocated.</param>
            <returns>
            If successful, Alloc returns a pointer to the allocated memory block.
            If insufficient memory is available, Alloc returns NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.IMalloc.Realloc(System.IntPtr,System.Int32)">
             <summary>
             Changes the size of a previously allocated block of memory.
             </summary>
             <param name="pv">Pointer to the memory block to be reallocated.</param>
             <param name="cb">Size of the memory block (in bytes) to be reallocated.</param>
             <returns>
             Reallocated memory block: Memory block successfully reallocated.
             NULL: Insufficient memory, or cb is zero and pv is not NULL.
            </returns>
        </member>
        <member name="M:SnapStream.Util.IMalloc.Free(System.IntPtr)">
            <summary>
            Frees a previously allocated block of memory.
            </summary>
            <param name="pv">Pointer to the memory block to be freed.</param>
        </member>
        <member name="M:SnapStream.Util.IMalloc.GetSize(System.IntPtr)">
            <summary>
            Returns the size in bytes of a previously allocated block of memory.
            </summary>
            <param name="pv">Pointer to the memory block for which the size is requested.</param>
            <returns>The size of the allocated memory block in bytes or, if pv is a NULL pointer, -1.</returns>
        </member>
        <member name="M:SnapStream.Util.IMalloc.DidAlloc(System.IntPtr)">
            <summary>
            Determines whether this instance of IMalloc was used to allocate the specified block of memory.
            </summary>
            <param name="pv">Pointer to the memory block; can be a NULL pointer, in which case, -1 is returned.</param>
            <returns>
            1: The memory block was allocated by this IMalloc instance.
            0: The memory block was not allocated by this IMalloc instance.
            -1: DidAlloc is unable to determine whether or not it allocated the memory block.
            </returns>
        </member>
        <member name="M:SnapStream.Util.IMalloc.HeapMinimize">
            <summary>
            Minimizes the heap by releasing unused memory to the operating system.
            </summary>
        </member>
        <member name="T:SnapStream.Util.IUnknown">
            <summary>
            The fundamental interface through which OLE can access objects.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IUnknown.QueryInterface(System.Guid@,System.IntPtr@)">
            <summary>
            Identifies which OLE interfaces the object supports.
            </summary>
            <param name="riid">Identifier of the interface being requested.</param>
            <param name="pVoid">Address of pointer variable that receives the interface pointer requested in riid.</param>
            <returns>S_OK if the interface is supported, E_NOINTERFACE if not.</returns>
        </member>
        <member name="M:SnapStream.Util.IUnknown.AddRef">
            <summary>
            Increments a member variable that tracks the number of references to the object.
            </summary>
            <returns>Returns an integer from 1 to n, the value of the new reference count.</returns>
        </member>
        <member name="M:SnapStream.Util.IUnknown.Release">
            <summary>
            Decrements the member variable that tracks the instances of the object.
            </summary>
            <returns>Returns the resulting value of the reference count, which is used for diagnostic/testing purposes only.</returns>
        </member>
        <member name="T:SnapStream.Util.IExtractImage">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/iextractimage/iextractimage.asp">IExtractImage interface</see> is used to request a thumbnail image from a Shell folder.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IExtractImage.GetLocation(System.Text.StringBuilder,System.Int32,System.Int32@,System.Drawing.Size@,System.Int32,System.Int32@)">
            <summary>
            Used to request the path description of an image and specify how the image should be rendered.
            </summary>
            <param name="pszPathBuffer">Buffer used to return the path description.</param>
            <param name="cch">Size of pszPathBuffer in characters.</param>
            <param name="pdwPriority">Pointer used to return the priority of the item when the IEIFLAG_ASYNC flag is set in pdwFlags.</param>
            <param name="prgSize">Pointer to a SIZE structure with the desired width and height of the image.</param>
            <param name="dwRecClrDepth">Recommended color depth in units of bits per pixel.</param>
            <param name="pdwFlags">Flags that specify how the image is to be handled.</param>
        </member>
        <member name="M:SnapStream.Util.IExtractImage.Extract(System.IntPtr@)">
            <summary>
            Used to request an image from an object, such as an item in a Shell folder.
            </summary>
            <param name="phBmpThumbnail">Buffer to hold the bitmapped image.</param>
        </member>
        <member name="T:SnapStream.Util.IRunnableTask">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/irunnabletask/irunnabletask.asp">IRunnableTask interface</see> is a free-threaded interface that can be exposed by an object to allow operations to be performed on a background thread.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IRunnableTask.Run">
            <summary>
            Used to request that a task start.
            </summary>
            <returns>Return NOERROR when execution is complete. If execution is suspended, Run should return E_PENDING. Return standard OLE-defined error codes otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IRunnableTask.Kill(System.Boolean)">
            <summary>
            Used to request that a task be stopped.
            </summary>
            <param name="fUnused">Not currently used.</param>
            <returns>Returns NOERROR if successful, or standard OLE-defined error codes otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IRunnableTask.Suspend">
            <summary>
            Used to request that a task be suspended.
            </summary>
            <returns>Return NOERROR if successful, or standard OLE-defined error codes otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IRunnableTask.Resume">
            <summary>
            Used to request that a task resume.
            </summary>
            <returns>Return NOERROR if successful, or standard OLE-defined error codes otherwise.</returns>
        </member>
        <member name="M:SnapStream.Util.IRunnableTask.IsRunning">
            <summary>
            Used to request information on the state of a task, such as thumbnail extraction.
            </summary>
            <returns>Indicates the current execution state</returns>
        </member>
        <member name="T:SnapStream.Util.Allocator">
            <summary>
            Provides some memory object allocation methods
            </summary>
        </member>
        <member name="M:SnapStream.Util.Allocator.SafeReleaseComObject(SnapStream.Util.IShellFolder@)">
            <summary>
            SafeRelease an IShellFolder object
            </summary>
            <param name="releaseObject">
            Object to release
            </param>
        </member>
        <member name="M:SnapStream.Util.Allocator.SafeReleaseComObject(SnapStream.Util.IEnumIDList@)">
            <summary>
            SafeRelease an IEnumIDList object
            </summary>
            <param name="releaseObject">
            Object to release
            </param>
        </member>
        <member name="M:SnapStream.Util.Allocator.SafeReleaseComObject(SnapStream.Util.IExtractImage@)">
            <summary>
            SafeRelease an IExtractImage object
            </summary>
            <param name="releaseObject">
            Object to release
            </param>
        </member>
        <member name="M:SnapStream.Util.Allocator.SafeFree(System.IntPtr@)">
            <summary>
            If ptr != IntPtr.Zero, 
            Frees the specified memory (if allocated by the Shell).
            Sets the ptr to IntPtr.Zero
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:SnapStream.Util.Allocator.Free(System.IntPtr)">
            <summary>
            Frees the specified memory (if allocated by the Shell).
            </summary>
            <param name="ptr">Pointer to memory to free</param>
        </member>
        <member name="M:SnapStream.Util.Allocator.Dispose">
            <summary>
            Frees the reference to the Shell's IMalloc object
            </summary>
        </member>
        <member name="M:SnapStream.Util.Allocator.Dispose(System.Boolean)">
            <summary>
            Frees the reference to the SHell's IMalloc object
            when disposing is true.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:SnapStream.Util.MultipleDirectoryInfo">
            <summary>
            The start menu is a tricky thing in Windows.  It is essentially the combination of 
            two different directory hierarchies (one for "All Users" and one for the 
            "Current User") merged into one.  This class handles the navigation multiple
            directories that need to be merged into one.  If no arguments are passed to the
            constructor, the directories default to the StartMenu directories. 
            </summary>
        </member>
        <member name="F:SnapStream.Util.MultipleDirectoryInfo._baseDirectories">
            <summary>
            Contains the root directories that will be merged
            </summary>
        </member>
        <member name="F:SnapStream.Util.MultipleDirectoryInfo._currentDirectories">
            <summary>
            Contains the list of root directories appended with the current NavigatedPath
            </summary>
        </member>
        <member name="F:SnapStream.Util.MultipleDirectoryInfo._currentItems">
            <summary>
            Contains all of the sorted FileSystemInfos in the list of _currentDirectories
            </summary>
        </member>
        <member name="F:SnapStream.Util.MultipleDirectoryInfo._excludedFilenames">
            <summary>
            Contains the list of files that are not to be shown
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.#ctor">
            <summary>
            Creates a multi root file browser with 4 base directories and one excluded file
            1. AllUsers\StartMenu
            2. AllUsers\StartMenu\Programs
            3. [CurrentUser]\StartMenu
            4. [CurrentUser]\StartMenu\Programs
            
            desktop.ini is excluded
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.#ctor(System.IO.DirectoryInfo[],System.String[])">
            <summary>
            Creates a multi root file browser with the given base directories
            and exclusions
            </summary>
            <param name="baseDirectories">
            List of DirectoryInfo objects that make up the base directories
            </param>
            <param name="excludedFilenames">
            List of files that will not be shown
            </param>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.InitializeMembers">
            <summary>
            Initializes the member variables
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.GetNavigatedPath(System.String)">
            <summary>
            Returns the path after the base directory (no leading '\')
            </summary>
            <param name="fullpath">
            Full path to parse
            </param>
            <returns>
            Path after the base directory path (no leading '\')
            </returns>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.PopulateDefaultBaseDirectories">
            <summary>
            Adds the default StartMenu and StartMenu\Programs folder for All Users as well 
            as for the Current User.  Total of four directories are added if they exist.
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.UpdateCurrentDirectories">
            <summary>
            Processes all of the files and directories in each of the directories in the 
            _currentDirectories list into the _currentItems list
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.GetFileSystemInfos">
            <summary>
            Returns the sorted array of all FileSystemInfo objects 
            in all directories in the current directories list
            </summary>
            <returns>
            Sorted FileSystemInfo objects
            </returns>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.GetDirectories">
            <summary>
            Returns the sorted array of all DirectoryInfo objects 
            in all directories in the current directories list
            </summary>
            <returns>
            Sorted DirectoryInfo objects
            </returns>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.GetFiles">
            <summary>
            Returns the sorted array of all FileInfo objects 
            in all directories in the current directories list
            </summary>
            <returns>
            Sorted FileInfo objects
            </returns>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.NavigateToBase">
            <summary>
            Sets the directory back to the base directories
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.NavigateUpOneLevel">
            <summary>
            Sets the current directories to be pointing at their parents.
            If a base directory is reached, all base directories will be added.
            Note: Will not navigate above the base directories
            </summary>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.Navigate(System.IO.DirectoryInfo)">
            <summary>
            Will attempt to find the child directories for each of the current directories
            </summary>
            <param name="newDir">
            New directory to navigate to
            </param>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.AtBase">
            <summary>
            Determines if the current directories are the base directories
            </summary>
            <returns>
            True if the current directories are the base directories, false otherwise
            </returns>
        </member>
        <member name="M:SnapStream.Util.MultipleDirectoryInfo.IsBaseDirectory(System.IO.DirectoryInfo)">
            <summary>
            Determines if the given directory is a base directory
            </summary>
            <param name="newDir">
            Directory to check
            </param>
            <returns>
            True if the given directory is a base directory
            False otherwise
            </returns>
        </member>
        <member name="P:SnapStream.Util.MultipleDirectoryInfo.Parent">
            <summary>
            Returns the first valid parent of a directory in the list of current directories
            Returns null if we are at the base directory
            </summary>
        </member>
        <member name="P:SnapStream.Util.MultipleDirectoryInfo.Fullname">
            <summary>
            Returns the fullname of the first valid directory in the current directory list
            Note: Returns null if there is no valid current directory
            </summary>
        </member>
        <member name="P:SnapStream.Util.MultipleDirectoryInfo.NavigatedPath">
            <summary>
            Returns the path that was navigated beyond the base directory
            Note: Returns null if at the base directory
            </summary>
        </member>
        <member name="P:SnapStream.Util.MultipleDirectoryInfo.CurrentDirectory">
            <summary>
            Get - Returns the first valid directory in the current directory list
            Note: Returns null if there is no valid current directory
            Set - Finds the NavigatedPath from the given directory and appends it to all of 
            the base directories
            Note: Navigates to the base directories if the given directory is not valid
            </summary>
        </member>
        <member name="T:SnapStream.Util.SLR_FLAGS">
            <summary>
            Defines flags used when calling <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ishelllink/Resolve.asp">IShellLink::Resolve</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_NO_UI">
            <summary>
            Do not display a dialog box if the link cannot be resolved.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_ANY_MATCH">
            <summary>
            SLR_ANY_MATCH
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_UPDATE">
            <summary>
            If the link object has changed, update its path and list of identifiers.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_NOUPDATE">
            <summary>
            Do not update the link information.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_NOSEARCH">
            <summary>
            Do not execute the search heuristics.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_NOTRACK">
            <summary>
            Do not use distributed link tracking.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_NOLINKINFO">
            <summary>
            Disable distributed link tracking.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLR_FLAGS.SLR_INVOKE_MSI">
            <summary>
            Call the Microsoft Windows Installer.
            </summary>
        </member>
        <member name="T:SnapStream.Util.SLGP_FLAGS">
            <summary>
            Defines flags used when calling <see href="">IShellLink::GetPath</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLGP_FLAGS.SLGP_SHORTPATH">
            <summary>
            Retrieves the standard short (8.3 format) file name.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLGP_FLAGS.SLGP_UNCPRIORITY">
            <summary>
            Retrieves the Universal Naming Convention (UNC) path name of the file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SLGP_FLAGS.SLGP_RAWPATH">
            <summary>
            Retrieves the raw path name.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WIN32_FIND_DATAA">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/base/win32_find_data_str.asp">WIN32_FIND_DATAA</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.dwFileAttributes">
            <summary>
            File attributes of the file found.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.ftCreationTime">
            <summary>
            A FILETIME structure that specifies when the file or directory was created.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.ftLastAccessTime">
            <summary>
            A FILETIME structure. For a file, the structure specifies when the file was last read from, written to, or, in the case of executable files, run. For a directory, the structure specifies when the directory was created. If the underlying file system does not support last access time, this member is zero.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.ftLastWriteTime">
            <summary>
            A FILETIME structure. For a file, the structure specifies when the file was last written to, truncated, or overwritten (for example, with WriteFile or SetEndOfFile). This date and time is not updated when file attributes or security descriptors are changed. For a directory, the structure specifies when the directory was created. If the underlying file system does not support last write time, this member is zero.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.nFileSizeHigh">
            <summary>
            High-order DWORD value of the file size, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.nFileSizeLow">
            <summary>
            Low-order DWORD value of the file size, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.dwReserved0">
            <summary>
            If the dwFileAttributes member includes the FILE_ATTRIBUTE_REPARSE_POINT attribute, this member specifies the reparse tag. Otherwise, this value is undefined and should not be used.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.dwReserved1">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.cFileName">
            <summary>
            A null-terminated string that specifies the name of the file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAA.cAlternateFileName">
            <summary>
            A null-terminated string that specifies an alternative name for the file. This name is in the classic 8.3 (filename.ext) file name format.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WIN32_FIND_DATAW">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/base/win32_find_data_str.asp">WIN32_FIND_DATAW</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.dwFileAttributes">
            <summary>
            File attributes of the file found.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.ftCreationTime">
            <summary>
            A FILETIME structure that specifies when the file or directory was created.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.ftLastAccessTime">
            <summary>
            A FILETIME structure. For a file, the structure specifies when the file was last read from, written to, or, in the case of executable files, run. For a directory, the structure specifies when the directory was created. If the underlying file system does not support last access time, this member is zero.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.ftLastWriteTime">
            <summary>
            A FILETIME structure. For a file, the structure specifies when the file was last written to, truncated, or overwritten (for example, with WriteFile or SetEndOfFile). This date and time is not updated when file attributes or security descriptors are changed. For a directory, the structure specifies when the directory was created. If the underlying file system does not support last write time, this member is zero.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.nFileSizeHigh">
            <summary>
            High-order DWORD value of the file size, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.nFileSizeLow">
            <summary>
            Low-order DWORD value of the file size, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.dwReserved0">
            <summary>
            If the dwFileAttributes member includes the FILE_ATTRIBUTE_REPARSE_POINT attribute, this member specifies the reparse tag. Otherwise, this value is undefined and should not be used.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.dwReserved1">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.cFileName">
            <summary>
            A null-terminated string that specifies the name of the file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WIN32_FIND_DATAW.cAlternateFileName">
            <summary>
            A null-terminated string that specifies an alternative name for the file. This name is in the classic 8.3 (filename.ext) file name format.
            </summary>
        </member>
        <member name="T:SnapStream.Util.IPersistFile">
            <summary>
            The <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/com/htm/cmi_n2p_99ph.asp">IPersistFile interface</see> provides methods that permit an object to be loaded from or saved to a disk file, rather than a storage object or stream.
            </summary>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.GetClassID(System.Guid@)">
            <summary>
            Returns the class identifier (CLSID) for the component object.
            </summary>
            <param name="pClassID">Points to the location of the CLSID on return.</param>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.IsDirty">
            <summary>
            Checks an object for changes since it was last saved to its current file.
            </summary>
            <returns>
            S_OK: The object has changed since it was last saved.
            S_FALSE: The object has not changed since the last save.
            </returns>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.Load(System.String,System.Int32)">
            <summary>
            Opens the specified file and initializes an object from the file contents.
            </summary>
            <param name="pszFileName">Points to a zero-terminated string containing the absolute path of the file to open.</param>
            <param name="dwMode">Specifies some combination of the values from the STGM enumeration to indicate the access mode to use when opening the file.</param>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.Save(System.String,System.Boolean)">
            <summary>
            Saves a copy of the object into the specified file.
            </summary>
            <param name="pszFileName">Points to a zero-terminated string containing the absolute path of the file to which the object should be saved.</param>
            <param name="fRemember">Indicates whether the pszFileName parameter is to be used as the current working file.</param>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.SaveCompleted(System.String)">
            <summary>
            Notifies the object that it can write to its file.
            </summary>
            <param name="pszFileName">Points to the absolute path of the file where the object was previously saved.</param>
        </member>
        <member name="M:SnapStream.Util.IPersistFile.GetCurFile(System.IntPtr@)">
            <summary>
            Retrieves either the absolute path to the object's current working file or, if there is no current working file, the object's default filename prompt.
            </summary>
            <param name="ppszFileName">Points to the location of a pointer to a zero-terminated string containing the path for the current file or the default filename prompt (such as *.txt). If an error occurs, ppszFileName is set to NULL.</param>
        </member>
        <member name="T:SnapStream.Util.IShellLinkA">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ishelllink/ishelllink.asp">IShellLink</see>
            </summary>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetPath(System.Text.StringBuilder,System.Int32,SnapStream.Util.WIN32_FIND_DATAA@,SnapStream.Util.SLGP_FLAGS)">
            <summary>
            Retrieves the path and file name of a Shell link object.
            </summary>
            <param name="pszFile">Address of a buffer that receives the path and file name of the Shell link object.</param>
            <param name="cchMaxPath">Maximum number of characters to copy to the buffer pointed to by the pszFile parameter.</param>
            <param name="pfd">Address of a WIN32_FIND_DATA structure that receives information about the Shell link object. If this parameter is NULL, then no additional information is returned.</param>
            <param name="fFlags">Flags that specify the type of path information to retrieve.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetIDList(System.IntPtr@)">
            <summary>
            Retrieves the list of item identifiers for a Shell link object.
            </summary>
            <param name="ppidl">Address of a pointer to an item identifier list (PIDL).</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetIDList(System.IntPtr)">
            <summary>
            Sets the pointer to an item identifier list (PIDL) for a Shell link object.
            </summary>
            <param name="pidl">The object's fully-qualified PIDL.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetDescription(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the description string for a Shell link object.
            </summary>
            <param name="pszName">Pointer to the buffer that receives the description string.</param>
            <param name="cchMaxName">The maximum number of characters to copy to the buffer pointed to by the pszName parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetDescription(System.String)">
            <summary>
            Sets the description for a Shell link object. The description can be any application-defined string.
            </summary>
            <param name="pszName">Sets the description for a Shell link object. The description can be any application-defined string.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetWorkingDirectory(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the name of the working directory for a Shell link object.
            </summary>
            <param name="pszDir">Address of a buffer that receives the name of the working directory.</param>
            <param name="cchMaxPath">Maximum number of characters to copy to the buffer pointed to by the pszDir parameter. The name of the working directory is truncated if it is longer than the maximum specified by this parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetWorkingDirectory(System.String)">
            <summary>
            Sets the name of the working directory for a Shell link object.
            </summary>
            <param name="pszDir">Address of a buffer that contains the name of the new working directory.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetArguments(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the command-line arguments associated with a Shell link object.
            </summary>
            <param name="pszArgs">Pointer to the buffer that receives the command-line arguments.</param>
            <param name="cchMaxPath">The maximum number of characters that can be copied to the buffer supplied by the pszArgs parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetArguments(System.String)">
            <summary>
            Sets the command-line arguments for a Shell link object.
            </summary>
            <param name="pszArgs">Pointer to a buffer that contains the new command-line arguments.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetHotkey(System.Int16@)">
            <summary>
            Retrieves the hot key for a Shell link object.
            </summary>
            <param name="pwHotkey">Address of the hot key.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetHotkey(System.Int16)">
            <summary>
            Sets a hot key for a Shell link object.
            </summary>
            <param name="wHotkey">New hot key.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetShowCmd(System.Int32@)">
            <summary>
            Retrieves the show command for a Shell link object.
            </summary>
            <param name="piShowCmd">Pointer to the command.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetShowCmd(System.Int32)">
            <summary>
            Sets the show command for a Shell link object. The show command sets the initial show state of the window.
            </summary>
            <param name="iShowCmd">Command.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.GetIconLocation(System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves the location (path and index) of the icon for a Shell link object.
            </summary>
            <param name="pszIconPath">Address of a buffer that receives the path of the file containing the icon.</param>
            <param name="cchIconPath">Maximum number of characters to copy to the buffer pointed to by the pszIconPath parameter.</param>
            <param name="piIcon">Address of a value that receives the index of the icon.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetIconLocation(System.String,System.Int32)">
            <summary>
            Sets the location (path and index) of the icon for a Shell link object.
            </summary>
            <param name="pszIconPath">Address of a buffer to contain the path of the file containing the icon.</param>
            <param name="iIcon">Index of the icon.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetRelativePath(System.String,System.Int32)">
            <summary>
            Sets the relative path to the Shell link object.
            </summary>
            <param name="pszPathRel">Address of a buffer that contains the new relative path. It should be a file name, not a folder name.</param>
            <param name="dwReserved">Reserved. Set this parameter to zero.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.Resolve(System.IntPtr,SnapStream.Util.SLR_FLAGS)">
            <summary>
            Attempts to find the target of a Shell link, even if it has been moved or renamed.
            </summary>
            <param name="hwnd">Handle to the window that the Shell will use as the parent for a dialog box.</param>
            <param name="fFlags">Action flags.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkA.SetPath(System.String)">
            <summary>
            Sets the path and file name of a Shell link object.
            </summary>
            <param name="pszFile">Address of a buffer that contains the new path.</param>
        </member>
        <member name="T:SnapStream.Util.IShellLinkW">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/ifaces/ishelllink/ishelllink.asp">IShellLink</see>
            </summary>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetPath(System.Text.StringBuilder,System.Int32,SnapStream.Util.WIN32_FIND_DATAW@,SnapStream.Util.SLGP_FLAGS)">
            <summary>
            Retrieves the path and file name of a Shell link object.
            </summary>
            <param name="pszFile">Address of a buffer that receives the path and file name of the Shell link object.</param>
            <param name="cchMaxPath">Maximum number of characters to copy to the buffer pointed to by the pszFile parameter.</param>
            <param name="pfd">Address of a WIN32_FIND_DATA structure that receives information about the Shell link object. If this parameter is NULL, then no additional information is returned.</param>
            <param name="fFlags">Flags that specify the type of path information to retrieve.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetIDList(System.IntPtr@)">
            <summary>
            Retrieves the list of item identifiers for a Shell link object.
            </summary>
            <param name="ppidl">Address of a pointer to an item identifier list (PIDL).</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetIDList(System.IntPtr)">
            <summary>
            Sets the pointer to an item identifier list (PIDL) for a Shell link object.
            </summary>
            <param name="pidl">The object's fully-qualified PIDL.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetDescription(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the description string for a Shell link object.
            </summary>
            <param name="pszName">Pointer to the buffer that receives the description string.</param>
            <param name="cchMaxName">The maximum number of characters to copy to the buffer pointed to by the pszName parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetDescription(System.String)">
            <summary>
            Sets the description for a Shell link object. The description can be any application-defined string.
            </summary>
            <param name="pszName">Sets the description for a Shell link object. The description can be any application-defined string.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetWorkingDirectory(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the name of the working directory for a Shell link object.
            </summary>
            <param name="pszDir">Address of a buffer that receives the name of the working directory.</param>
            <param name="cchMaxPath">Maximum number of characters to copy to the buffer pointed to by the pszDir parameter. The name of the working directory is truncated if it is longer than the maximum specified by this parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetWorkingDirectory(System.String)">
            <summary>
            Sets the name of the working directory for a Shell link object.
            </summary>
            <param name="pszDir">Address of a buffer that contains the name of the new working directory.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetArguments(System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the command-line arguments associated with a Shell link object.
            </summary>
            <param name="pszArgs">Pointer to the buffer that receives the command-line arguments.</param>
            <param name="cchMaxPath">The maximum number of characters that can be copied to the buffer supplied by the pszArgs parameter.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetArguments(System.String)">
            <summary>
            Sets the command-line arguments for a Shell link object.
            </summary>
            <param name="pszArgs">Pointer to a buffer that contains the new command-line arguments.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetHotkey(System.Int16@)">
            <summary>
            Retrieves the hot key for a Shell link object.
            </summary>
            <param name="pwHotkey">Address of the hot key.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetHotkey(System.Int16)">
            <summary>
            Sets a hot key for a Shell link object.
            </summary>
            <param name="wHotkey">New hot key.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetShowCmd(System.Int32@)">
            <summary>
            Retrieves the show command for a Shell link object.
            </summary>
            <param name="piShowCmd">Pointer to the command.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetShowCmd(System.Int32)">
            <summary>
            Sets the show command for a Shell link object. The show command sets the initial show state of the window.
            </summary>
            <param name="iShowCmd">Command.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.GetIconLocation(System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>
            Retrieves the location (path and index) of the icon for a Shell link object.
            </summary>
            <param name="pszIconPath">Address of a buffer that receives the path of the file containing the icon.</param>
            <param name="cchIconPath">Maximum number of characters to copy to the buffer pointed to by the pszIconPath parameter.</param>
            <param name="piIcon">Address of a value that receives the index of the icon.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetIconLocation(System.String,System.Int32)">
            <summary>
            Sets the location (path and index) of the icon for a Shell link object.
            </summary>
            <param name="pszIconPath">Address of a buffer to contain the path of the file containing the icon.</param>
            <param name="iIcon">Index of the icon.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetRelativePath(System.String,System.Int32)">
            <summary>
            Sets the relative path to the Shell link object.
            </summary>
            <param name="pszPathRel">Address of a buffer that contains the new relative path. It should be a file name, not a folder name.</param>
            <param name="dwReserved">Reserved. Set this parameter to zero.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.Resolve(System.IntPtr,SnapStream.Util.SLR_FLAGS)">
            <summary>
            Attempts to find the target of a Shell link, even if it has been moved or renamed.
            </summary>
            <param name="hwnd">Handle to the window that the Shell will use as the parent for a dialog box.</param>
            <param name="fFlags">Action flags.</param>
        </member>
        <member name="M:SnapStream.Util.IShellLinkW.SetPath(System.String)">
            <summary>
            Sets the path and file name of a Shell link object.
            </summary>
            <param name="pszFile">Address of a buffer that contains the new path.</param>
        </member>
        <member name="T:SnapStream.Util.ShellLink">
            <summary>
            Not Implemented
            </summary>
        </member>
        <member name="T:SnapStream.Util.ShellShortcut">
            <remarks>
              .NET friendly wrapper for the ShellLink class
            </remarks>
        </member>
        <member name="M:SnapStream.Util.ShellShortcut.#ctor(System.String)">
            
            <param name='linkPath'>
              Path to new or existing shortcut file (.lnk).
            </param>
            
        </member>
        <member name="M:SnapStream.Util.ShellShortcut.Dispose">
            <summary>
            Disposes of the link object
            </summary>
        </member>
        <member name="M:SnapStream.Util.ShellShortcut.Save">
            <summary>
              Saves the shortcut to disk.
            </summary>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.Arguments">
            <value>
              Gets or sets the argument list of the shortcut.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.Description">
            <value>
              Gets or sets a description of the shortcut.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.WorkingDirectory">
            <value>
              Gets or sets the working directory (aka start in directory) of the shortcut.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.Path">
            <value>
              Gets or sets the target path of the shortcut.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.IconPath">
            <value>
              Gets or sets the path of the <see cref="P:SnapStream.Util.ShellShortcut.Icon"/> assigned to the shortcut.
            </value>
            <summary>
              <seealso cref="P:SnapStream.Util.ShellShortcut.IconIndex"/>
            </summary>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.IconIndex">
            <value>
              Gets or sets the index of the <see cref="P:SnapStream.Util.ShellShortcut.Icon"/> assigned to the shortcut.
              Set to zero when the <see cref="P:SnapStream.Util.ShellShortcut.IconPath"/> property specifies a .ICO file.
            </value>
            <summary>
              <seealso cref="P:SnapStream.Util.ShellShortcut.IconPath"/>
            </summary>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.Icon">
            <value>
              Retrieves the Icon of the shortcut as it will appear in Explorer.
              Use the <see cref="P:SnapStream.Util.ShellShortcut.IconPath"/> and <see cref="P:SnapStream.Util.ShellShortcut.IconIndex"/>
              properties to change it.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.WindowStyle">
            <value>
              Gets or sets the System.Diagnostics.ProcessWindowStyle value
              that decides the initial show state of the shortcut target. Note that
              ProcessWindowStyle.Hidden is not a valid property value.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.Hotkey">
            <value>
              Gets or sets the hotkey for the shortcut.
            </value>
        </member>
        <member name="P:SnapStream.Util.ShellShortcut.ShellLink">
            <summary>
              Returns a reference to the internal ShellLink object,
              which can be used to perform more advanced operations
              not supported by this wrapper class, by using the
              IShellLink interface directly.
            </summary>
        </member>
        <member name="T:SnapStream.Util.StringIntObject">
            <summary>
             This class defines the objects in the ComboBoxes that drive
             the properties of the Button style selection ComboBoxes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.StringIntObject.s">
            <summary>
            The string portion of this pair
            </summary>
        </member>
        <member name="F:SnapStream.Util.StringIntObject.i">
            <summary>
            The integer portion of this pair
            </summary>
        </member>
        <member name="M:SnapStream.Util.StringIntObject.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new string/int object pair
            </summary>
            <param name="sz">The string portion of this pair</param>
            <param name="n">The integer portion of this pair</param>
        </member>
        <member name="M:SnapStream.Util.StringIntObject.ToString">
            <summary>
            Overridden to display the string portion of this pair
            </summary>
            <returns></returns>
        </member>
        <member name="T:SnapStream.Util.COPYDATASTRUCT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/dataexchange/datacopy/datacopyreference/datacopystructures/copydatastruct.asp">COPYDATASTRUCT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.COPYDATASTRUCT.dwData">
            <summary>
            Specifies data to be passed to the receiving application.
            </summary>
        </member>
        <member name="F:SnapStream.Util.COPYDATASTRUCT.cbData">
            <summary>
            Specifies the size, in bytes, of the data pointed to by the lpData member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.COPYDATASTRUCT.data">
            <summary>
            Pointer to data to be passed to the receiving application. This member can be NULL.
            </summary>
        </member>
        <member name="T:SnapStream.Util.POINT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_mfc_point_structure.asp">POINT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.POINT.x">
            <summary>
            Specifies the x-coordinate of a point.
            </summary>
        </member>
        <member name="F:SnapStream.Util.POINT.y">
            <summary>
            Specifies the y-coordinate of a point.
            </summary>
        </member>
        <member name="M:SnapStream.Util.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new point
            </summary>
            <param name="xIn">The x-coordinate</param>
            <param name="yIn">The y-coordinate</param>
        </member>
        <member name="T:SnapStream.Util.MOUSEHOOKSTRUCT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookstructures/mousehookstruct.asp">MOUSEHOOKSTRUCT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEHOOKSTRUCT.pt">
            <summary>
            Specifies a POINT structure that contains the x- and y-coordinates of the cursor, in screen coordinates.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEHOOKSTRUCT.hwnd">
            <summary>
            Handle to the window that will receive the mouse message corresponding to the mouse event.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEHOOKSTRUCT.wHitTestCode">
            <summary>
            Specifies the hit-test value. For a list of hit-test values, see the description of the WM_NCHITTEST message.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEHOOKSTRUCT.dwExtraInfo">
            <summary>
            Specifies extra information associated with the message.
            </summary>
        </member>
        <member name="T:SnapStream.Util.RECT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/rectangl_6cqa.asp">RECT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.RECT.Left">
            <summary>
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:SnapStream.Util.RECT.Top">
            <summary>
            Specifies the y-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:SnapStream.Util.RECT.Right">
            <summary>
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="F:SnapStream.Util.RECT.Bottom">
            <summary>
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="T:SnapStream.Util.TokPriv1Luid">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthz/security/token_privileges.asp">TOKEN_PRIVILEGES</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.TokPriv1Luid.Count">
            <summary>
            Specifies the number of entries in the Privileges array.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TokPriv1Luid.Luid">
            <summary>
            Specifies an LUID value.
            </summary>
        </member>
        <member name="F:SnapStream.Util.TokPriv1Luid.Attr">
            <summary>
            Specifies attributes of the LUID.
            </summary>
        </member>
        <member name="T:SnapStream.Util.Weight">
            <summary>
            Ties a weight to a string
            </summary>
        </member>
        <member name="F:SnapStream.Util.Weight.m_iWeight">
            <summary>
            The weight of this string
            </summary>
        </member>
        <member name="F:SnapStream.Util.Weight.m_sName">
            <summary>
            The weighed string
            </summary>
        </member>
        <member name="M:SnapStream.Util.Weight.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new weight-string object
            </summary>
            <param name="sIn">The string</param>
            <param name="iIn">The string's weight</param>
        </member>
        <member name="T:SnapStream.Util.WindowInfo">
            <summary>
            Contains information about a window
            </summary>
        </member>
        <member name="F:SnapStream.Util.WindowInfo.sText">
            <summary>
            The text for this window
            </summary>
        </member>
        <member name="F:SnapStream.Util.WindowInfo.sClass">
            <summary>
            The window's class
            </summary>
        </member>
        <member name="F:SnapStream.Util.WindowInfo.sFile">
            <summary>
            The file name for this window
            </summary>
        </member>
        <member name="F:SnapStream.Util.WindowInfo.sExecutable">
            <summary>
            The executable that launched this window
            </summary>
        </member>
        <member name="F:SnapStream.Util.WindowInfo.swState">
            <summary>
            This window's showing state
            </summary>
        </member>
        <member name="M:SnapStream.Util.WindowInfo.#ctor(System.String,System.String,System.String,System.String,SnapStream.Util.SW)">
            <summary>
            Creates a new window info object
            </summary>
            <param name="sTextIn">The text for this window</param>
            <param name="sClassIn">The window's class</param>
            <param name="sFileIn">The file name for this window</param>
            <param name="sExecutableIn">The executable that launched this window</param>
            <param name="swIn">This window's showing state</param>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROLDETAILS">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontroldetails_str.asp">MIXERCONTROLDETAILS</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.cbStruct">
            <summary>
            Size, in bytes, of the MIXERCONTROLDETAILS structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.dwControlID">
            <summary>
            Control identifier on which to get or set properties.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.cChannels">
            <summary>
            Number of channels on which to get or set control properties.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.cMultipleItems">
            <summary>
            Number of multiple items per channel on which to get or set properties.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.cbDetails">
            <summary>
            Size, in bytes, of one of the following details structures being used:
            MIXERCONTROLDETAILS_BOOLEAN, MIXERCONTROLDETAILS_LISTTEXT, MIXERCONTROLDETAILS_SIGNED
            or MIXERCONTROLDETAILS_UNSIGNED
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROLDETAILS.paDetails">
            <summary>
            Pointer to an array of one or more structures in which properties for the specified control are retrieved or set.
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERLINECONTROLS">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixerlinecontrols_str.asp">MIXERLINECONTROLS</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.cbStruct">
            <summary>
            Size, in bytes, of the MIXERLINECONTROLS structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.dwLineID">
            <summary>
            Line identifier for which controls are being queried.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.dwControlID">
            <summary>
            Control identifier of the desired control.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.cControls">
            <summary>
            Number of MIXERCONTROL structure elements to retrieve.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.cbmxctrl">
            <summary>
            Size, in bytes, of a single MIXERCONTROL structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINECONTROLS.pamxctrl">
            <summary>
            Pointer to one or more MIXERCONTROL structures to receive the properties of the requested audio line controls.
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERCONTROL">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixercontrol_str.asp">MIXERCONTROL</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.cbStruct">
            <summary>
            Size, in bytes, of the MIXERCONTROL structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.dwControlID">
            <summary>
            Audio mixer-defined identifier that uniquely refers to the control described by the MIXERCONTROL structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.dwControlType">
            <summary>
            Class of the control for which the identifier is specified in dwControlID.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.fdwControl">
            <summary>
            Status and support flags for the audio line control.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.cMultipleItems">
            <summary>
            Number of items per channel that make up a MIXERCONTROL_CONTROLF_MULTIPLE control.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.szShortName">
            <summary>
            Short string that describes the audio line control specified by dwControlID.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.szName">
            <summary>
            String that describes the audio line control specified by dwControlID.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.lMinimum">
            <summary>
            Minimum signed value for a control that has a signed boundary nature.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.lMaximum">
            <summary>
            Maximum signed value for a control that has a signed boundary nature.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERCONTROL.reserved">
            <summary>
            Reserved; do not use.
            </summary>
        </member>
        <member name="T:SnapStream.Util.structTarget">
            <summary>
            Target struct used in <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixerline_str.asp">MIXERLINE</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.dwType">
            <summary>
            Target media device type associated with the audio line described in the MIXERLINE structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.dwDeviceID">
            <summary>
            Current device identifier of the target media device when the dwType member is a target type other than MIXERLINE_TARGETTYPE_UNDEFINED.
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.wMid">
            <summary>
            Manufacturer identifier of the target media device when the dwType member is a target type other than MIXERLINE_TARGETTYPE_UNDEFINED.
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.wPid">
            <summary>
            Product identifier of the target media device when the dwType member is a target type other than MIXERLINE_TARGETTYPE_UNDEFINED.
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.vDriverVersion">
            <summary>
            Driver version of the target media device when the dwType member is a target type other than MIXERLINE_TARGETTYPE_UNDEFINED.
            </summary>
        </member>
        <member name="F:SnapStream.Util.structTarget.szPname">
            <summary>
            Product name of the target media device when the dwType member is a target type other than MIXERLINE_TARGETTYPE_UNDEFINED.
            </summary>
        </member>
        <member name="T:SnapStream.Util.MIXERLINE">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_mixerline_str.asp">MIXERLINE</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.cbStruct">
            <summary>
            Size, in bytes, of the MIXERLINE structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.dwDestination">
            <summary>
            Destination line index.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.dwSource">
            <summary>
            Index for the audio source line associated with the dwDestination member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.dwLineID">
            <summary>
            An identifier defined by the mixer device that uniquely refers to the audio line described by the MIXERLINE structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.fdwLine">
            <summary>
            Status and support flags for the audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.dwUser">
            <summary>
            Instance data defined by the audio device for the line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.dwComponentType">
            <summary>
            Component type for this audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.cChannels">
            <summary>
            Maximum number of separate channels that can be manipulated independently for the audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.cConnections">
            <summary>
            Number of connections that are associated with the audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.cControls">
            <summary>
            Number of controls associated with the audio line.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.szShortName">
            <summary>
            Short string that describes the audio mixer line specified in the dwLineID member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.szName">
            <summary>
            String that describes the audio mixer line specified in the dwLineID member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MIXERLINE.Target">
            <summary>
            Target media information.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WAVEOUTCAPS">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutcaps_str.asp">WAVEOUTCAPS</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.wMid">
            <summary>
            Manufacturer identifier for the device driver for the device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.wPid">
            <summary>
            Product identifier for the device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.vDriverVersion">
            <summary>
            Version number of the device driver for the device.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.szPname">
            <summary>
            Product name in a null-terminated string.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.dwFormats">
            <summary>
            Standard formats that are supported.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.wChannels">
            <summary>
            Number specifying whether the device supports mono (1) or stereo (2) output.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WAVEOUTCAPS.dwSupport">
            <summary>
            Optional functionality supported by the device.
            </summary>
        </member>
        <member name="T:SnapStream.Util.ICONINFO">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/icons/iconreference/iconstructures/iconinfo.asp">ICONINFO</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICONINFO.fIcon">
            <summary>
            Specifies whether this structure defines an icon or a cursor.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICONINFO.xHotspot">
            <summary>
            Specifies the x-coordinate of a cursor's hot spot.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICONINFO.yHotspot">
            <summary>
            Specifies the y-coordinate of the cursor's hot spot.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICONINFO.hbmMask">
            <summary>
            Specifies the icon bitmask bitmap.
            </summary>
        </member>
        <member name="F:SnapStream.Util.ICONINFO.hbmColor">
            <summary>
            Handle to the icon color bitmap.
            </summary>
        </member>
        <member name="T:SnapStream.Util.KEYBDINPUT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputstructures/keybdinput.asp">KEYBDINPUT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYBDINPUT.wVk">
            <summary>
            Specifies a virtual-key code.
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYBDINPUT.wScan">
            <summary>
            Specifies a hardware scan code for the key.
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYBDINPUT.dwFlags">
            <summary>
            Specifies various aspects of a keystroke.
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYBDINPUT.time">
            <summary>
            Time stamp for the event, in milliseconds.
            </summary>
        </member>
        <member name="F:SnapStream.Util.KEYBDINPUT.dwExtraInfo">
            <summary>
            Specifies an additional value associated with the keystroke.
            </summary>
        </member>
        <member name="T:SnapStream.Util.MOUSEINPUT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputstructures/mouseinput.asp">MOUSEINPUT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.dx">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.dy">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.mouseData">
            <summary>
            If dwFlags contains MOUSEEVENTF_WHEEL, then mouseData specifies the amount of wheel movement.
            If dwFlags contains MOUSEEVENTF_XDOWN or MOUSEEVENTF_XUP, then mouseData specifies which X buttons were pressed or released.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.dwFlags">
            <summary>
            A set of bit flags that specify various aspects of mouse motion and button clicks.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.time">
            <summary>
            Time stamp for the event, in milliseconds.
            </summary>
        </member>
        <member name="F:SnapStream.Util.MOUSEINPUT.dwExtraInfo">
            <summary>
            Specifies an additional value associated with the mouse event.
            </summary>
        </member>
        <member name="T:SnapStream.Util.HARDWAREINPUT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputstructures/hardwareinput.asp">HARDWAREINPUT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.HARDWAREINPUT.uMsg">
            <summary>
            Value specifying the message generated by the input hardware.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HARDWAREINPUT.wParamL">
            <summary>
            Specifies the low-order word of the lParam parameter for uMsg.
            </summary>
        </member>
        <member name="F:SnapStream.Util.HARDWAREINPUT.wParamH">
            <summary>
            Specifies the high-order word of the lParam parameter for uMsg.
            </summary>
        </member>
        <member name="T:SnapStream.Util.INPUT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputstructures/input.asp">INPUT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUT.type">
            <summary>
            Specifies the type of the input event.
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUT.ki">
            <summary>
            A MOUSEINPUT structure that contains information about a simulated mouse event.
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUT.mi">
            <summary>
            A KEYBDINPUT structure that contains information about a simulated keyboard event.
            </summary>
        </member>
        <member name="F:SnapStream.Util.INPUT.hi">
            <summary>
            A HARDWAREINPUT structure that contains information about a simulated event from input hardware other than a keyboard or mouse.
            </summary>
        </member>
        <member name="T:SnapStream.Util.WINDOWPLACEMENT">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowstructures/windowplacement.asp">WINDOWPLACEMENT</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.length">
            <summary>
            Specifies the length, in bytes, of the structure.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.flags">
            <summary>
            Specifies flags that control the position of the minimized window and the method by which the window is restored.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.showCmd">
            <summary>
            Specifies the current show state of the window.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.minPosition">
            <summary>
            Specifies the coordinates of the window's upper-left corner when the window is minimized.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.maxPosition">
            <summary>
            Specifies the coordinates of the window's upper-left corner when the window is maximized.
            </summary>
        </member>
        <member name="F:SnapStream.Util.WINDOWPLACEMENT.normalPosition">
            <summary>
            Specifies the window's coordinates when the window is in the restored position.
            </summary>
        </member>
        <member name="T:SnapStream.Util.SHFILEINFO">
            <summary>
            Emulates <see href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/shell/reference/structures/shfileinfo.asp">SHFILEINFO</see>
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHFILEINFO.hIcon">
            <summary>
            Handle to the icon that represents the file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHFILEINFO.iIcon">
            <summary>
            Index of the icon image within the system image list.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHFILEINFO.dwAttributes">
            <summary>
            Array of values that indicates the attributes of the file object.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHFILEINFO.szDisplayName">
            <summary>
            String that contains the name of the file as it appears in the Microsoft Windows Shell, or the path and file name of the file that contains the icon representing the file.
            </summary>
        </member>
        <member name="F:SnapStream.Util.SHFILEINFO.szTypeName">
            <summary>
            String that describes the type of file.
            </summary>
        </member>
        <member name="T:SnapStream.Util.DevEvent">
            <summary>
            Event Codes for device changed event (WM_DEVICECHANGE) (from dbt.h)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.Arrival">
            <summary>
            DBT_DEVICEARRIVAL: A device or piece of media has been inserted and is now available.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.QueryRemove">
            <summary>
            DBT_DEVICEQUERYREMOVE: Permission is requested to remove a device or piece of media.
            Any application can deny this request and cancel the removal.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.QueryRemoveFailed">
            <summary>
            DBT_DEVICEQUERYREMOVEFAILED: A request to remove a device or piece of media has been canceled.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.RemovePending">
            <summary>
            DBT_DEVICEREMOVEPENDING: A device or piece of media is about to be removed. Cannot be denied.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.RemoveComplete">
            <summary>
            DBT_DEVICEREMOVECOMPLETE: A device or piece of media has been removed.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.Specific">
            <summary>
            DBT_DEVICETYPESPECIFIC: A device-specific event has occurred.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevEvent.Custom">
            <summary>
            DBT_CUSTOMEVENT: A custom event has occurred.
            </summary>
        </member>
        <member name="T:SnapStream.Util.DevType">
            <summary>
            Device Types for device changed event (WM_DEVICECHANGE) (from dbt.h)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevType.OEM">
            <summary>
            DBT_DEVTYP_OEM: OEM- or IHV-defined device type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevType.DeviceNode">
            <summary>
            DBT_DEVTYP_DEVNODE: devnode number (specific to Windows 95)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevType.Volume">
            <summary>
            DBT_DEVTYP_VOLUME: Logical volume.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevType.Port">
            <summary>
            DBT_DEVTYP_PORT: Port device (serial or parallel).
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevType.Net">
            <summary>
            DBT_DEVTYP_NET: network resource (UNC)
            </summary>
        </member>
        <member name="T:SnapStream.Util.DevVolumeFlags">
            <summary>
            Device flags for device changed event (WM_DEVICECHANGE) (from dbt.h)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevVolumeFlags.Media">
            <summary>
            DBTF_MEDIA: Change affects media in drive.
            If not set, change affects physical device or drive.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevVolumeFlags.Net">
            <summary>
            DBTF_NET: Indicated logical volume is a network volume.
            </summary>
        </member>
        <member name="T:SnapStream.Util.DevBroadcastHeader">
            <summary>
            Device broadcast header for device changed event (WM_DEVICECHANGE) (from dbt.h)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastHeader.Size">
            <summary>
            Size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastHeader.Type">
            <summary>
            Device type.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastHeader.Reserved">
            <summary>
            Reserved; do not use.
            </summary>
        </member>
        <member name="T:SnapStream.Util.DevBroadcastVolume">
            <summary>
            Device Broadcast volume struct for device changed event (WM_DEVICECHANGE) (from dbt.h)
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastVolume.Size">
            <summary>
            Size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastVolume.Type">
            <summary>
            Set to DBT_DEVTYP_VOLUME.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastVolume.Reserved">
            <summary>
            Reserved; do not use.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastVolume.Mask">
            <summary>
            Logical unit mask identifying one or more logical units.
            Each bit in the mask corresponds to one logical drive.
            Bit 0 represents drive A, bit 1 represents drive B, and so on.
            </summary>
        </member>
        <member name="F:SnapStream.Util.DevBroadcastVolume.Flags">
            <summary>
            DBTF_MEDIA or DBTF_NET
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.AboutDialog">
            <summary>
            Summary description for AboutDialog.
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.AboutDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.AboutDialog.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new about dialog
            </summary>
            <param name="appName">The application's name</param>
            <param name="buildNumber">The application's build number</param>
            <param name="versionNumber">The application's version number</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.AboutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.AboutDialog.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overridden to allow the escape key to close this dialog
            </summary>
            <param name="e">Contains the key data</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.AboutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.AboutDialog.CopyrightInfo">
            <summary>
            The copyright text
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.TransparencyMode">
            <summary>
            determines the meaning of the transparencyKey argument to the Convert method
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.TransparencyMode.ColorKeyTransparent">
            <summary>
            the color key is used to define the transparent region of the bitmap
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.TransparencyMode.ColorKeyOpaque">
            <summary>
            the color key is used to define the area that should _not_ be transparent
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.BitmapToRegion">
            <summary>
            a class to convert a color-keyed bitmap into a region
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.BitmapToRegion.#ctor">
            <summary>
            constructor made private to avoid instantiation
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.BitmapToRegion.Convert(System.Drawing.Bitmap,System.Drawing.Color,SnapStream.Windows.Forms.TransparencyMode)">
            <summary>
            the meat of this class
            converts the bitmap to a region by scanning each line one by one
            this method will not affect the original bitmap in any way
            </summary>
            <param name="bitmap">The bitmap to convert</param>
            <param name="transparencyKey">The color which will indicate either transparency or opacity</param>
            <param name="mode">Whether the transparency key should indicate the transparent or the opaque region</param>
        </member>
        <member name="T:SnapStream.Windows.Forms.CustomVScrollBar">
            <summary>
            Summary description for CustomVScrollBar.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.CustomVScrollBar.#ctor">
            <summary>
            Creates a new custom vertical scrollbar control
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.CustomVScrollBar.OnResize(System.EventArgs)">
            <summary>
            Overridden to position the active region and the buttons
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.Windows.Forms.CustomVScrollBar.ApplySkin">
            <summary>
            Handles any skinning operations for this object
            </summary>
        </member>
        <member name="E:SnapStream.Windows.Forms.CustomVScrollBar.ValueChanged">
            <summary>
            Occurs when the value needs to be changed due to an event on this scrollbar
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.Value">
            <summary>
            The current value
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.SmallChange">
            <summary>
            The increment that indicates a small change
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.LargeChange">
            <summary>
            The increment that indicates a large change
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.UpArrow">
            <summary>
            The up arrow normal image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.UpArrowPressed">
            <summary>
            The up arrow pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarTopPressed">
            <summary>
            The scrollbar top (region between up arrow and active region) pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarMiddlePressed">
            <summary>
            The scrollbar middle (the active region) pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarBottomPressed">
            <summary>
            The scrollbar bottom (region between down arrow and active region) pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarTop">
            <summary>
            The scrollbar top (region between up arrow and active region) normal image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarMiddle">
            <summary>
            The scrollbar middle (active region) normal image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.ScrollBarBottom">
            <summary>
            The scrollbar bottom (region between down arrow and active region) image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.CustomVScrollBar.BackgroundImage">
            <summary>
            The whole background image
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.AutoResizeDotLabel">
            <summary>
            A DotLabel that automatically resizes when the text is set
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.DotLabel">
            <summary>
            A label that ellipsizes the text if it's too big
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.DotLabel.m_sText">
            <summary>
            The whole text to attempt to display
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DotLabel.#ctor">
            <summary>
            Creates a new dot label
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DotLabel.OnResize(System.EventArgs)">
            <summary>
            Overridden to ellipsize the text where necessary
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SnapStream.Windows.Forms.DotLabel.InvokeResize">
            <summary>
            Emulates the resize event on this control
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.DotLabel.Text">
            <summary>
            The displayed text
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.AutoResizeDotLabel.#ctor">
            <summary>
            Creates a new auto-resize dot label
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.AutoResizeDotLabel.Text">
            <summary>
            Overridden to resize when the text is set
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.DoubleBufferLabel">
            <summary>
            A label that has double-buffering turned on by default
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DoubleBufferLabel.#ctor">
            <summary>
            Creates a new double-buffer label
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.DoubleBufferPictureBox">
            <summary>
            A picture box that has double-buffering turned on by default
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DoubleBufferPictureBox.#ctor">
            <summary>
            Creates a new double-buffer picture box
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.DoubleBufferPanel">
            <summary>
            A panel that has double-buffering turned on by default
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DoubleBufferPanel.#ctor">
            <summary>
            Creates a new double-buffer panel
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.DummyForm">
            <summary>
            A dummy form created to aid in compilation
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.DummyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DummyForm.#ctor">
            <summary>
            Creates a dummy form
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DummyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.DummyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.Helpers">
            <summary>
            Contains some useful methods related to Windows Forms
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.FixAspectRatio(System.Windows.Forms.Form,System.Int32,System.Int32)">
            <summary>
            Ensures that the form's client size maintains the passed in aspect ratio based
            on the form's current client height
            </summary>
            <param name="resizeMe">Form to be resized</param>
            <param name="baseWidth">Width of the aspect ratio</param>
            <param name="baseHeight">Height of the aspect ratio</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.FixAspectRatio(System.Windows.Forms.Message@,System.Windows.Forms.Form,System.Int32,System.Int32)">
            <summary>
            Ensures that the form's client size maintains the passed in aspect ratio based
            on the form's current client height and the message received from the operating
            system
            </summary>
            <param name="msg">Message from the operating sytem</param>
            <param name="resizeMe">Form to be resized</param>
            <param name="baseWidth">Width of the aspect ratio</param>
            <param name="baseHeight">Height of the aspect ratio</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.GetResourceImage(System.String,System.Object)">
            <summary>
            Retrieves the resource image name on the specified object
            </summary>
            <param name="s">The image name to retrieve</param>
            <param name="o">The object that is tied to the resource</param>
            <returns>The resource image</returns>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.DisposeImage(System.Windows.Forms.PictureBox)">
            <summary>
            Disposes the image from a picture box
            </summary>
            <param name="pbIn">The picture box that contains the image</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.CheckControl(System.Windows.Forms.Control)">
            <summary>
            Checks to see if the given control is still valid
            </summary>
            <param name="c">The control</param>
            <returns>Whether the control is still valid</returns>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SetWindowPosNoUpdate(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32,SnapStream.Util.SWP)">
            <summary>
            Sets the window position of a control without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="iX">The control's new x position</param>
            <param name="iY">The control's new y position</param>
            <param name="iCX">The control's new width</param>
            <param name="iCY">The control's new height</param>
            <param name="swpFlags">Any additional sizing and positioning flags to use</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SetWindowZOrderNoUpdate(System.Windows.Forms.Control,System.IntPtr)">
            <summary>
            Puts a control behind the given window handle in the z order without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="ip">The window handle to put it behind</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SetWindowZOrderNoUpdate(System.Windows.Forms.Control,SnapStream.Util.HWND)">
            <summary>
            Puts a control at the specified z order without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="h">The z order</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.BringToFrontNoUpdate(System.Windows.Forms.Control)">
            <summary>
            Brings a control to the front of the z order without redrawing it
            </summary>
            <param name="c">The control</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SendToBackNoUpdate(System.Windows.Forms.Control)">
            <summary>
            Sends a control to the back of the z order without redrawing it
            </summary>
            <param name="c">The control</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.HideNoUpdate(System.Windows.Forms.Control)">
            <summary>
            Hides a control without redrawing it
            </summary>
            <param name="c">The control</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.ShowNoUpdate(System.Windows.Forms.Control)">
            <summary>
            Shows a control without redrawing it
            </summary>
            <param name="c">The control</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.MoveNoUpdate(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Moves a control without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="iLeft">The control's new x position</param>
            <param name="iTop">The control's new y position</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SizeNoUpdate(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Resizes a control without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="iWidth">The control's new width</param>
            <param name="iHeight">The control's new height</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.MoveAndSizeNoUpdate(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Repositions and resizes a control without redrawing it
            </summary>
            <param name="c">The control</param>
            <param name="iLeft">The control's new x position</param>
            <param name="iTop">The control's new y position</param>
            <param name="iWidth">The control's new width</param>
            <param name="iHeight">The control's new height</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SetText(System.Windows.Forms.Label,System.String)">
            <summary>
            Sets the text on a label without redrawing it
            </summary>
            <param name="lIn">The label</param>
            <param name="sIn">The new text</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.SetText(System.Windows.Forms.Label,System.String,System.Boolean)">
            <summary>
            Sets the text on a label
            </summary>
            <param name="lIn">The label</param>
            <param name="sIn">The new text</param>
            <param name="bUpdate">Whether to redraw the new state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.ScaleFont(System.Drawing.Font,System.Int32,System.Int32)">
            <summary>
            Creates a new font scaled by the given factors
            </summary>
            <param name="fBase">The old font</param>
            <param name="iNew">The new em size</param>
            <param name="iBase">The old em size</param>
            <returns>The new scaled font</returns>
        </member>
        <member name="M:SnapStream.Windows.Forms.Helpers.ScaleFont(System.Drawing.Font,System.Int32)">
            <summary>
            Creates a new font scaled to the given pixel height
            </summary>
            <param name="fBase">The old font</param>
            <param name="iNewHeight">The desired pixel height</param>
            <returns>The new scaled font</returns>
        </member>
        <member name="T:SnapStream.Windows.Forms.NoFocusHighlightButton">
            <summary>
            A button that cannot have keyboard input focus,
            but still has a highlight image state when the mouse is
            over the control
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusHighlightButton.m_lText">
            <summary>
            The text label for this button
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusHighlightButton.m_ai">
            <summary>
            An array of images for the possible button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusHighlightButton.m_ac">
            <summary>
            An array of text colors for the possible button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusHighlightButton.m_bMouseDown">
            <summary>
            Whether this button is currently pressed
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusHighlightButton.m_bMouseOver">
            <summary>
            Whether the mouse is over this button
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.DisposeImages">
            <summary>
            Disposes of the background images in our array
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.#ctor">
            <summary>
            Creates a new no-focus highlight button
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates a mouse up event
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates a mouse down event
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Emulates a mouse enter event
            </summary>
            <param name="sender">The sender</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.OnMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Emulates a mouse leave event
            </summary>
            <param name="sender">The sender</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.InvokeResize">
            <summary>
            Resizes this control
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.InvokeClick">
            <summary>
            Clicks on this control
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusHighlightButton.DestroyHandle">
            <summary>
            Overridden to make this public
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.Text">
            <summary>
            The text displayed for this button
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.TextAlign">
            <summary>
            The alignment of the displayed text
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.Image">
            <summary>
            The normal background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.NormalImage">
            <summary>
            The normal background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.HighlightImage">
            <summary>
            The mouse-over image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.PressedImage">
            <summary>
            The pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.Font">
            <summary>
            The font for the text in this button
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.ForeColor">
            <summary>
            The normal text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.NormalColor">
            <summary>
            The normal text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.HighlightColor">
            <summary>
            The mouse-over text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusHighlightButton.PressedColor">
            <summary>
            The pressed text color
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.NoFocusSizeModeButton">
            <summary>
            A size mode button that doesn't have a focused state (only pressed and normal)
            and cannot receive keyboard input focus
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusSizeModeButton.m_lText">
            <summary>
            The text label for this button
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusSizeModeButton.m_ai">
            <summary>
            An array of images for the possible button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusSizeModeButton.m_ac">
            <summary>
            An array of text colors for the possible button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NoFocusSizeModeButton.m_bMouseDown">
            <summary>
            Whether this button is currently pressed
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.#ctor">
            <summary>
            Creates a new no-focus size mode button
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.DisposeImages">
            <summary>
            Disposes of the background images in our array
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the proper text color and background image
            </summary>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates a mouse up event
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates a mouse down event
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates a mouse move event
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.InvokeResize">
            <summary>
            Resizes this control
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.InvokeClick">
            <summary>
            Clicks on this control
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NoFocusSizeModeButton.DestroyHandle">
            <summary>
            Overridden to make this public
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.Text">
            <summary>
            The text displayed for this button
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.TextAlign">
            <summary>
            The alignment of the displayed text
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.Image">
            <summary>
            The normal background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.NormalImage">
            <summary>
            The normal background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.PressedImage">
            <summary>
            The pressed background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.Font">
            <summary>
            The font for the text in this button
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.ForeColor">
            <summary>
            The normal text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.NormalColor">
            <summary>
            The normal text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NoFocusSizeModeButton.PressedColor">
            <summary>
            The pressed text color
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.NotSelectableMediaPlayer">
            <summary>
            A nonselectable media player object
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NotSelectableMediaPlayer._canSelect">
            <summary>
            Whether the wmp is selectable
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.NotSelectableMediaPlayer._blockRender">
            <summary>
            Whether the wmp needs to stop rendering
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NotSelectableMediaPlayer.#ctor">
            <summary>
            Creates a new notselectable wmp object
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.NotSelectableMediaPlayer.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden to stop selection and stop rendering
            if necessary
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:SnapStream.Windows.Forms.NotSelectableMediaPlayer.Selectable">
            <summary>
            Whether the wmp is selectable
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.NotSelectableMediaPlayer.BlockRender">
            <summary>
            Whether the wmp needs to stop rendering
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.SizeModeButton">
            <summary>
            Summary description for StretchRemote.
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButton.m_pbBackground">
            <summary>
            The background image
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButton.m_lText">
            <summary>
            The displayed text
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButton.m_ai">
            <summary>
            An array of background images for the different button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButton.m_ac">
            <summary>
            An array of text colors for the different button states
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButton.m_bMouseDown">
            <summary>
            Whether the button is pressed
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.#ctor">
            <summary>
            Creates a new size mode button
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnGotFocus(System.EventArgs)">
            <summary>
            Overridden to set the appropriate background image and text color
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnLostFocus(System.EventArgs)">
            <summary>
            Overridden to set the appropriate background image and text color
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the appropriate background image and text color
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the appropriate background image and text color
            </summary>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden to set the appropriate background image and text color
            </summary>
            <param name="e">Contains the mouse position</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden to keep this control from painting itself
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates mouse up on this object
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates mouse down on this object
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Emulates mouse move on this object
            </summary>
            <param name="o">The sender</param>
            <param name="e">Contains the mouse state</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.InvokeResize">
            <summary>
            Emulates resize on this object
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.InvokeClick">
            <summary>
            Emulates a click on this object
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButton.DestroyHandle">
            <summary>
            Public way to destroy this object's handle
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.MouseIsDown">
            <summary>
            Whether the button is pressed
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.SizeMode">
            <summary>
            The positioning of our background image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.Text">
            <summary>
            The displayed text
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.TextAlign">
            <summary>
            The text alignment of the displayed text
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.Image">
            <summary>
            The unpressed unfocused image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.NormalImage">
            <summary>
            The unpressed unfocused image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.Controls">
            <summary>
            The contained controls in this control
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.HighlightImage">
            <summary>
            The unpressed focused image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.PressedImage">
            <summary>
            The pressed image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.Font">
            <summary>
            The displayed text font
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.ForeColor">
            <summary>
            The unpressed unfocused text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.NormalColor">
            <summary>
            The unpressed unfocused text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.HighlightColor">
            <summary>
            The unpressed focused text color
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButton.PressedColor">
            <summary>
            The pressed text color
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.SizeModeButtonWithIcon">
            <summary>
            Summary description for StretchRemote.
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButtonWithIcon.m_pbIcon">
            <summary>
            The icon
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButtonWithIcon.m_dVerticalIconPadding">
            <summary>
            The percent of our height to pad vertically
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SizeModeButtonWithIcon.m_dHorizontalIconPadding">
            <summary>
            The percent of our width to pad horizontally
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButtonWithIcon.#ctor">
            <summary>
            Creates a new size mode button with an icon
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButtonWithIcon.SetIcon(System.Drawing.Image)">
            <summary>
            Sets the icon image (mainly used when this operation needs to be Invoked)
            </summary>
            <param name="i">The new icon</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SizeModeButtonWithIcon.OnResize(System.EventArgs)">
            <summary>
            Overridden to size the icon
            </summary>
            <param name="ea">Not used</param>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButtonWithIcon.Icon">
            <summary>
            The icon's image
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButtonWithIcon.HorizontalIconPadding">
            <summary>
            The percent of our height to pad horizontally
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SizeModeButtonWithIcon.VerticalIconPadding">
            <summary>
            The percent of our height to pad vertically
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.SizeModeButtonWithIcon.SetIconHandler">
            <summary>
            Template for our SetIcon method so it can be invoked
            </summary>
        </member>
        <member name="T:SnapStream.Windows.Forms.SplashDialog">
            <summary>
            Summary description for SplashDialog.
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._textBox">
            <summary>
            Our text box for displaying the default loading message
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._background">
            <summary>
            Our control for painting the background
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._loadingBar">
            <summary>
            Our control for painting the loading bar
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._backgroundImage">
            <summary>
            Our background image file name
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._loadingBarImage">
            <summary>
            Our loading bar image file name
            </summary>
        </member>
        <member name="F:SnapStream.Windows.Forms.SplashDialog._loadingBarRect">
            <summary>
            The portion of the background image that contains the progress bar
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.#ctor(System.String,System.String,System.Drawing.Rectangle)">
            <summary>
            Creates a new splash dialog
            </summary>
            <param name="background">Full path to the splash background image</param>
            <param name="loadingBar">Full path to the loading bar image</param>
            <param name="loadingBarRect">The rectangle inside of the background where the loading bar should cover</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden to make sure we get repainted on visible changed to true
            </summary>
            <param name="e">Don't care</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.TryToDisplayBackground">
            <summary>
            Attempts to display the background image
            </summary>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.TryToDisplayLoadingBar(System.Int32)">
            <summary>
            Attempts to display the loading bar at the given percent
            </summary>
            <param name="percent">The percent to show</param>
        </member>
        <member name="M:SnapStream.Windows.Forms.SplashDialog.SplashDialog_Load(System.Object,System.EventArgs)">
            <summary>
            Makes sure that when this form is displayed that we present it to the user no matter what they are doing
            </summary>
            <param name="sender">Don't care</param>
            <param name="e">Don't care</param>
        </member>
        <member name="P:SnapStream.Windows.Forms.SplashDialog.Title">
            <summary>
            The current window title
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SplashDialog.Status">
            <summary>
            The current status text
            </summary>
        </member>
        <member name="P:SnapStream.Windows.Forms.SplashDialog.Progress">
            <summary>
            The current progress from 0 to 100
            </summary>
        </member>
    </members>
</doc>
